WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 68356f65_e92b_46f8_9097_3f851cf78bbb

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1157.4316277882783, cumulative cost = {2.89887190068808E7 rows, 9.405100257207614E8 cpu, 4.004907E8 io, 1.1643332146641056E8 network, 6.969908205299437E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1157.4316277882783, cumulative cost = {2.8987561575253014E7 rows, 9.404915068147168E8 cpu, 4.004907E8 io, 1.1643332146641056E8 network, 6.962500642881592E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1157.4316277882783, cumulative cost = {2.8986404143625226E7 rows, 9.402877988482261E8 cpu, 4.004907E8 io, 1.1640554310734364E8 network, 6.962500642881592E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 6385.151631849632, cumulative cost = {2.898524671199744E7 rows, 9.401856364221165E8 cpu, 4.004907E8 io, 1.1640554310734364E8 network, 6.955093080463746E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 6272.02309185713, cumulative cost = {1.8525785262318585E7 rows, 5.808434307914654E8 cpu, 2.58778572E8 io, 7.143606678230748E7 network, 4.3902495569215864E7 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 186.11900292142056, cumulative cost = {7708041.879914666 rows, 2.19360348162024E8 cpu, 1.10906448E8 io, 2.64176897651352E7 network, 1.8142792075854708E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 186.11900292142056, cumulative cost = {7707855.760911744 rows, 2.19360348162024E8 cpu, 1.10906448E8 io, 2.64176897651352E7 network, 1.8142792075854708E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 795.3810916499892, cumulative cost = {5186855.262834073 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 795.3810916499892, cumulative cost = {5186059.881742423 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5185170.500650774 rows, 1.5825179321121204E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.3553057121836245E7 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 5255.5406109999285, cumulative cost = {5179914.960039774 rows, 1.5816770456143603E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.321670252273225E7 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5174659.419428774 rows, 1.5724272941390005E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.321670252273225E7 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 28993.007364679215, cumulative cost = {5169403.878817774 rows, 1.5677884129606518E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.2880347923628256E7 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 17389.84038700467, cumulative cost = {2929085.5652102754 rows, 8.006378941531472E7 cpu, 4.3130352E7 io, 9381737.448108813 network, 6516898.188870337 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 5833.587227674545, cumulative cost = {1788823.6702249886 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 5833.587227674545, cumulative cost = {1782990.0829973142 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :           :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 11556.253159330126, cumulative cost = {1122872.054598282 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 11556.253159330126, cumulative cost = {1111315.8014389519 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38529.787728867515, cumulative cost = {727430.8482796218 rows, 9455796.595825966 cpu, 1.2324192E7 io, 955893.1862369755 network, 149706.05411241902 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 38529.787728867515, cumulative cost = {688901.0605507543 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.787728867515, cumulative cost = {650371.2728218868 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 11603.166977674546, cumulative cost = {2211325.30624282 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 11603.166977674546, cumulative cost = {2199722.139265145 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 38842.5465178303, cumulative cost = {1815790.2722874705 rows, 6.753573610124314E7 cpu, 2.4643716E7 io, 8431946.178299764 network, 4205091.3347579185 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 38842.5465178303, cumulative cost = {1776947.7257696402 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38842.5465178303, cumulative cost = {1738105.1792518098 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 6085.904088935709, cumulative cost = {1.0811471359312061E7 rows, 3.614768106063495E8 cpu, 1.47872124E8 io, 4.501837701717228E7 network, 2.575970349336116E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right]): rowcount = 6085.904088935709, cumulative cost = {1.0805385455223126E7 rows, 3.614768106063495E8 cpu, 1.47872124E8 io, 4.501837701717228E7 network, 2.575970349336116E7 memory}
         :        :- Calc(select=[y, X0]): rowcount = 38571.66183917392, cumulative cost = {2854656.7027530978 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38571.66183917392, cumulative cost = {2816085.0409139236 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :        :                    :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :        :                    :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :        :                    :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :        :                    :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :        :                    :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :        :                    :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                    :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                    :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                    :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                    :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                    :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                          :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :        :                             +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 2001.0320870641465, cumulative cost = {7944642.848381093 rows, 2.980463854777489E8 cpu, 1.04740872E8 io, 3.746591745310965E7 network, 2.1059602742467105E7 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7942641.816294028 rows, 2.977262203438186E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.1059602742467105E7 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 2001.0320870641465, cumulative cost = {7940640.784206964 rows, 2.9769420383042556E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.0931536688895E7 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7938639.7521199 rows, 2.9734202218310225E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.0931536688895E7 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 11039.004801101139, cumulative cost = {7936638.720032835 rows, 2.971653981062846E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.080347063532289E7 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 8450.107378821602, cumulative cost = {5042025.26956421 rows, 1.7951273260930353E8 cpu, 6.7774896E7 io, 2.242434670634686E7 network, 1.2518994528768292E7 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 8102.825860991299, cumulative cost = {3592348.4765346176 rows, 1.2078547449581553E8 cpu, 4.9290732E7 io, 1.497742908732787E7 network, 8436260.56066702 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 5826.687227674545, cumulative cost = {1788717.8702249888 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 5826.687227674545, cumulative cost = {1782891.1829973143 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :                       :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 347.28151783030177, cumulative cost = {1441226.685650771 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 347.28151783030177, cumulative cost = {1440879.4041329408 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
         :                       :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                             :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :                                +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                                      :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 113.12853999250278, cumulative cost = {1.0453076298047002E7 rows, 3.5933582047901934E8 cpu, 1.41712128E8 io, 4.4969476325036176E7 network, 2.56484352354216E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 113.12853999250278, cumulative cost = {1.045296316950701E7 rows, 3.5933582047901934E8 cpu, 1.41712128E8 io, 4.4969476325036176E7 network, 2.56484352354216E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2509168.110233811 rows, 6.152858958628172E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4569493.023423157 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.48545355706335, cumulative cost = {2508722.624780254 rows, 6.15214618190248E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4540981.954395505 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2508277.1393266967 rows, 6.144305637919876E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4540981.954395505 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 2457.589806994182, cumulative cost = {2507831.6538731395 rows, 6.140373494228686E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4512470.885367853 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 2275.047485620262, cumulative cost = {1795387.4888397823 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2275.047485620262, cumulative cost = {1793112.441354162 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 158.97720780683773, cumulative cost = {355004.37577955716 rows, 903731.127293892 cpu, 6162192.0 io, 29959.80623645814 network, 137640.55066183486 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 158.97720780683773, cumulative cost = {354845.3985717503 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 158.97720780683773, cumulative cost = {354686.4213639435 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 182.5423213739202, cumulative cost = {709986.575226363 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.5423213739202, cumulative cost = {709804.0329049891 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 165.87720780683773, cumulative cost = {355117.0757795572 rows, 919983.063658211 cpu, 6162732.0 io, 30665.40623645814 network, 139304.55066183486 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 165.87720780683773, cumulative cost = {354951.19857175037 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.87720780683773, cumulative cost = {354785.3213639435 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 308.7048130596219, cumulative cost = {7943681.930733207 rows, 2.978011973706047E8 cpu, 1.04741556E8 io, 3.742598559853355E7 network, 2.1061654742467105E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 308.7048130596219, cumulative cost = {7943373.225920147 rows, 2.977518046005151E8 cpu, 1.04741556E8 io, 3.7418576683020115E7 network, 2.1061654742467105E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 308.7048130596219, cumulative cost = {7943064.521107088 rows, 2.977518046005151E8 cpu, 1.04741556E8 io, 3.7418576683020115E7 network, 2.1061654742467105E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7942641.816294028 rows, 2.977262203438186E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.1059602742467105E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 2001.0320870641465, cumulative cost = {7940640.784206964 rows, 2.9769420383042556E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.0931536688895E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7938639.7521199 rows, 2.9734202218310225E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.0931536688895E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 11039.004801101139, cumulative cost = {7936638.720032835 rows, 2.971653981062846E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.080347063532289E7 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 8450.107378821602, cumulative cost = {5042025.26956421 rows, 1.7951273260930353E8 cpu, 6.7774896E7 io, 2.242434670634686E7 network, 1.2518994528768292E7 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 8102.825860991299, cumulative cost = {3592348.4765346176 rows, 1.2078547449581553E8 cpu, 4.9290732E7 io, 1.497742908732787E7 network, 8436260.56066702 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 5826.687227674545, cumulative cost = {1788717.8702249888 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 5826.687227674545, cumulative cost = {1782891.1829973143 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
                        :           :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 347.28151783030177, cumulative cost = {1441226.685650771 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 347.28151783030177, cumulative cost = {1440879.4041329408 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#5] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right])\n:        :- Calc(select=[y, X0])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#2] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#4] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[1,1,0,0,1,0,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[1])\n:  :  :     :  +- [#7] Exchange(distribution=[hash[X0, X1]])\n:  :  :     +- [#4] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#5] Calc(select=[x, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[X0, X1])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n      :- Reused(reference_id=[1])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[20])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[6])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[11])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[8])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[3])
         :        :           :     +- Reused(reference_id=[4])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[7])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[23])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[6])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[9])
         :        :           :                       :- Reused(reference_id=[7])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[x, X1])(reuse_id=[21])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :           :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[broadcast])
         :        :           :        +- Reused(reference_id=[8])
         :        :           :- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[hash[X0, X1]])
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Union(all=[true], union=[X0, X1])
         :        :                    :- Calc(select=[y AS X0, x AS X1])
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[12])
         :        :                    :     :- Reused(reference_id=[1])
         :        :                    :     +- Reused(reference_id=[5])
         :        :                    +- Calc(select=[y AS X0, x0 AS X1])
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[13])
         :        :                          :- Exchange(distribution=[hash[x]])
         :        :                          :  +- Reused(reference_id=[1])
         :        :                          +- Exchange(distribution=[hash[y]])
         :        :                             +- Calc(select=[y, x0])(reuse_id=[10])
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :                                   :- Reused(reference_id=[1])
         :        :                                   +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[19])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- Reused(reference_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[4])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[7])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[10])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[4])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[12])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[13])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[14])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[broadcast])
         :  +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[16])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[7])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[10])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[17])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[18])
         :                 +- Reused(reference_id=[4])
         :- Reused(reference_id=[4])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Reused(reference_id=[19])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[20])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[22])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[4])
                  :- Reused(reference_id=[21])
                  :- Reused(reference_id=[4])
                  :- Reused(reference_id=[22])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[23])

Job has been submitted with JobID 49ee6c187c5f5f8fb4e26ee4cda581b6
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: d967552b_6dac_4c6d_896d_f2c067ee1713

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1157.4316277882783, cumulative cost = {2.89887190068808E7 rows, 9.405100257207614E8 cpu, 4.004907E8 io, 1.1643332146641056E8 network, 6.969908205299437E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1157.4316277882783, cumulative cost = {2.8987561575253014E7 rows, 9.404915068147168E8 cpu, 4.004907E8 io, 1.1643332146641056E8 network, 6.962500642881592E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1157.4316277882783, cumulative cost = {2.8986404143625226E7 rows, 9.402877988482261E8 cpu, 4.004907E8 io, 1.1640554310734364E8 network, 6.962500642881592E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 6385.151631849632, cumulative cost = {2.898524671199744E7 rows, 9.401856364221165E8 cpu, 4.004907E8 io, 1.1640554310734364E8 network, 6.955093080463746E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 6272.02309185713, cumulative cost = {1.8525785262318585E7 rows, 5.808434307914654E8 cpu, 2.58778572E8 io, 7.143606678230748E7 network, 4.3902495569215864E7 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 186.11900292142056, cumulative cost = {7708041.879914666 rows, 2.19360348162024E8 cpu, 1.10906448E8 io, 2.64176897651352E7 network, 1.8142792075854708E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 186.11900292142056, cumulative cost = {7707855.760911744 rows, 2.19360348162024E8 cpu, 1.10906448E8 io, 2.64176897651352E7 network, 1.8142792075854708E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 795.3810916499892, cumulative cost = {5186855.262834073 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 795.3810916499892, cumulative cost = {5186059.881742423 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5185170.500650774 rows, 1.5825179321121204E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.3553057121836245E7 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 5255.5406109999285, cumulative cost = {5179914.960039774 rows, 1.5816770456143603E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.321670252273225E7 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5174659.419428774 rows, 1.5724272941390005E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.321670252273225E7 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 28993.007364679215, cumulative cost = {5169403.878817774 rows, 1.5677884129606518E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.2880347923628256E7 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 17389.84038700467, cumulative cost = {2929085.5652102754 rows, 8.006378941531472E7 cpu, 4.3130352E7 io, 9381737.448108813 network, 6516898.188870337 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 5833.587227674545, cumulative cost = {1788823.6702249886 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 5833.587227674545, cumulative cost = {1782990.0829973142 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :           :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 11556.253159330126, cumulative cost = {1122872.054598282 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 11556.253159330126, cumulative cost = {1111315.8014389519 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38529.787728867515, cumulative cost = {727430.8482796218 rows, 9455796.595825966 cpu, 1.2324192E7 io, 955893.1862369755 network, 149706.05411241902 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 38529.787728867515, cumulative cost = {688901.0605507543 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.787728867515, cumulative cost = {650371.2728218868 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 11603.166977674546, cumulative cost = {2211325.30624282 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 11603.166977674546, cumulative cost = {2199722.139265145 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 38842.5465178303, cumulative cost = {1815790.2722874705 rows, 6.753573610124314E7 cpu, 2.4643716E7 io, 8431946.178299764 network, 4205091.3347579185 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 38842.5465178303, cumulative cost = {1776947.7257696402 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38842.5465178303, cumulative cost = {1738105.1792518098 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 6085.904088935709, cumulative cost = {1.0811471359312061E7 rows, 3.614768106063495E8 cpu, 1.47872124E8 io, 4.501837701717228E7 network, 2.575970349336116E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right]): rowcount = 6085.904088935709, cumulative cost = {1.0805385455223126E7 rows, 3.614768106063495E8 cpu, 1.47872124E8 io, 4.501837701717228E7 network, 2.575970349336116E7 memory}
         :        :- Calc(select=[y, X0]): rowcount = 38571.66183917392, cumulative cost = {2854656.7027530978 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38571.66183917392, cumulative cost = {2816085.0409139236 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :        :                    :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :        :                    :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :        :                    :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :        :                    :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :        :                    :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :        :                    :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                    :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                    :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                    :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                    :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                    :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                          :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :        :                             +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 2001.0320870641465, cumulative cost = {7944642.848381093 rows, 2.980463854777489E8 cpu, 1.04740872E8 io, 3.746591745310965E7 network, 2.1059602742467105E7 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7942641.816294028 rows, 2.977262203438186E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.1059602742467105E7 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 2001.0320870641465, cumulative cost = {7940640.784206964 rows, 2.9769420383042556E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.0931536688895E7 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7938639.7521199 rows, 2.9734202218310225E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.0931536688895E7 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 11039.004801101139, cumulative cost = {7936638.720032835 rows, 2.971653981062846E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.080347063532289E7 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 8450.107378821602, cumulative cost = {5042025.26956421 rows, 1.7951273260930353E8 cpu, 6.7774896E7 io, 2.242434670634686E7 network, 1.2518994528768292E7 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 8102.825860991299, cumulative cost = {3592348.4765346176 rows, 1.2078547449581553E8 cpu, 4.9290732E7 io, 1.497742908732787E7 network, 8436260.56066702 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 5826.687227674545, cumulative cost = {1788717.8702249888 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 5826.687227674545, cumulative cost = {1782891.1829973143 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :                       :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 347.28151783030177, cumulative cost = {1441226.685650771 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 347.28151783030177, cumulative cost = {1440879.4041329408 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
         :                       :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                             :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :                                +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                                      :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 113.12853999250278, cumulative cost = {1.0453076298047002E7 rows, 3.5933582047901934E8 cpu, 1.41712128E8 io, 4.4969476325036176E7 network, 2.56484352354216E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 113.12853999250278, cumulative cost = {1.045296316950701E7 rows, 3.5933582047901934E8 cpu, 1.41712128E8 io, 4.4969476325036176E7 network, 2.56484352354216E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2509168.110233811 rows, 6.152858958628172E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4569493.023423157 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.48545355706335, cumulative cost = {2508722.624780254 rows, 6.15214618190248E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4540981.954395505 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2508277.1393266967 rows, 6.144305637919876E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4540981.954395505 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 2457.589806994182, cumulative cost = {2507831.6538731395 rows, 6.140373494228686E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4512470.885367853 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 2275.047485620262, cumulative cost = {1795387.4888397823 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2275.047485620262, cumulative cost = {1793112.441354162 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 158.97720780683773, cumulative cost = {355004.37577955716 rows, 903731.127293892 cpu, 6162192.0 io, 29959.80623645814 network, 137640.55066183486 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 158.97720780683773, cumulative cost = {354845.3985717503 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 158.97720780683773, cumulative cost = {354686.4213639435 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 182.5423213739202, cumulative cost = {709986.575226363 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.5423213739202, cumulative cost = {709804.0329049891 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 165.87720780683773, cumulative cost = {355117.0757795572 rows, 919983.063658211 cpu, 6162732.0 io, 30665.40623645814 network, 139304.55066183486 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 165.87720780683773, cumulative cost = {354951.19857175037 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.87720780683773, cumulative cost = {354785.3213639435 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 308.7048130596219, cumulative cost = {7943681.930733207 rows, 2.978011973706047E8 cpu, 1.04741556E8 io, 3.742598559853355E7 network, 2.1061654742467105E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 308.7048130596219, cumulative cost = {7943373.225920147 rows, 2.977518046005151E8 cpu, 1.04741556E8 io, 3.7418576683020115E7 network, 2.1061654742467105E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 308.7048130596219, cumulative cost = {7943064.521107088 rows, 2.977518046005151E8 cpu, 1.04741556E8 io, 3.7418576683020115E7 network, 2.1061654742467105E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7942641.816294028 rows, 2.977262203438186E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.1059602742467105E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 2001.0320870641465, cumulative cost = {7940640.784206964 rows, 2.9769420383042556E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.0931536688895E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7938639.7521199 rows, 2.9734202218310225E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.0931536688895E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 11039.004801101139, cumulative cost = {7936638.720032835 rows, 2.971653981062846E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.080347063532289E7 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 8450.107378821602, cumulative cost = {5042025.26956421 rows, 1.7951273260930353E8 cpu, 6.7774896E7 io, 2.242434670634686E7 network, 1.2518994528768292E7 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 8102.825860991299, cumulative cost = {3592348.4765346176 rows, 1.2078547449581553E8 cpu, 4.9290732E7 io, 1.497742908732787E7 network, 8436260.56066702 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 5826.687227674545, cumulative cost = {1788717.8702249888 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 5826.687227674545, cumulative cost = {1782891.1829973143 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
                        :           :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 347.28151783030177, cumulative cost = {1441226.685650771 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 347.28151783030177, cumulative cost = {1440879.4041329408 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#5] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right])\n:        :- Calc(select=[y, X0])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#2] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#4] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[1,1,0,0,1,0,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[1])\n:  :  :     :  +- [#7] Exchange(distribution=[hash[X0, X1]])\n:  :  :     +- [#4] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#5] Calc(select=[x, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[X0, X1])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n      :- Reused(reference_id=[1])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[20])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[6])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[11])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[8])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[3])
         :        :           :     +- Reused(reference_id=[4])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[7])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[23])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[6])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[9])
         :        :           :                       :- Reused(reference_id=[7])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[x, X1])(reuse_id=[21])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :           :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[broadcast])
         :        :           :        +- Reused(reference_id=[8])
         :        :           :- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[hash[X0, X1]])
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Union(all=[true], union=[X0, X1])
         :        :                    :- Calc(select=[y AS X0, x AS X1])
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[12])
         :        :                    :     :- Reused(reference_id=[1])
         :        :                    :     +- Reused(reference_id=[5])
         :        :                    +- Calc(select=[y AS X0, x0 AS X1])
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[13])
         :        :                          :- Exchange(distribution=[hash[x]])
         :        :                          :  +- Reused(reference_id=[1])
         :        :                          +- Exchange(distribution=[hash[y]])
         :        :                             +- Calc(select=[y, x0])(reuse_id=[10])
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :                                   :- Reused(reference_id=[1])
         :        :                                   +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[19])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- Reused(reference_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[4])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[7])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[10])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[4])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[12])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[13])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[14])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[broadcast])
         :  +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[16])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[7])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[10])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[17])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[18])
         :                 +- Reused(reference_id=[4])
         :- Reused(reference_id=[4])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Reused(reference_id=[19])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[20])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[22])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[4])
                  :- Reused(reference_id=[21])
                  :- Reused(reference_id=[4])
                  :- Reused(reference_id=[22])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[23])

Job has been submitted with JobID 454d63ea442985e0ef6ef0ccac3b1aeb
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 12fdd5df_636e_45b3_89e8_fbcf81501192

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1157.4316277882783, cumulative cost = {2.89887190068808E7 rows, 9.405100257207614E8 cpu, 4.004907E8 io, 1.1643332146641056E8 network, 6.969908205299437E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1157.4316277882783, cumulative cost = {2.8987561575253014E7 rows, 9.404915068147168E8 cpu, 4.004907E8 io, 1.1643332146641056E8 network, 6.962500642881592E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1157.4316277882783, cumulative cost = {2.8986404143625226E7 rows, 9.402877988482261E8 cpu, 4.004907E8 io, 1.1640554310734364E8 network, 6.962500642881592E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 6385.151631849632, cumulative cost = {2.898524671199744E7 rows, 9.401856364221165E8 cpu, 4.004907E8 io, 1.1640554310734364E8 network, 6.955093080463746E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 6272.02309185713, cumulative cost = {1.8525785262318585E7 rows, 5.808434307914654E8 cpu, 2.58778572E8 io, 7.143606678230748E7 network, 4.3902495569215864E7 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 186.11900292142056, cumulative cost = {7708041.879914666 rows, 2.19360348162024E8 cpu, 1.10906448E8 io, 2.64176897651352E7 network, 1.8142792075854708E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 186.11900292142056, cumulative cost = {7707855.760911744 rows, 2.19360348162024E8 cpu, 1.10906448E8 io, 2.64176897651352E7 network, 1.8142792075854708E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 795.3810916499892, cumulative cost = {5186855.262834073 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 795.3810916499892, cumulative cost = {5186059.881742423 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5185170.500650774 rows, 1.5825179321121204E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.3553057121836245E7 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 5255.5406109999285, cumulative cost = {5179914.960039774 rows, 1.5816770456143603E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.321670252273225E7 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5174659.419428774 rows, 1.5724272941390005E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.321670252273225E7 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 28993.007364679215, cumulative cost = {5169403.878817774 rows, 1.5677884129606518E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.2880347923628256E7 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 17389.84038700467, cumulative cost = {2929085.5652102754 rows, 8.006378941531472E7 cpu, 4.3130352E7 io, 9381737.448108813 network, 6516898.188870337 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 5833.587227674545, cumulative cost = {1788823.6702249886 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 5833.587227674545, cumulative cost = {1782990.0829973142 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :           :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 11556.253159330126, cumulative cost = {1122872.054598282 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 11556.253159330126, cumulative cost = {1111315.8014389519 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38529.787728867515, cumulative cost = {727430.8482796218 rows, 9455796.595825966 cpu, 1.2324192E7 io, 955893.1862369755 network, 149706.05411241902 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 38529.787728867515, cumulative cost = {688901.0605507543 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.787728867515, cumulative cost = {650371.2728218868 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 11603.166977674546, cumulative cost = {2211325.30624282 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 11603.166977674546, cumulative cost = {2199722.139265145 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 38842.5465178303, cumulative cost = {1815790.2722874705 rows, 6.753573610124314E7 cpu, 2.4643716E7 io, 8431946.178299764 network, 4205091.3347579185 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 38842.5465178303, cumulative cost = {1776947.7257696402 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38842.5465178303, cumulative cost = {1738105.1792518098 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 6085.904088935709, cumulative cost = {1.0811471359312061E7 rows, 3.614768106063495E8 cpu, 1.47872124E8 io, 4.501837701717228E7 network, 2.575970349336116E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right]): rowcount = 6085.904088935709, cumulative cost = {1.0805385455223126E7 rows, 3.614768106063495E8 cpu, 1.47872124E8 io, 4.501837701717228E7 network, 2.575970349336116E7 memory}
         :        :- Calc(select=[y, X0]): rowcount = 38571.66183917392, cumulative cost = {2854656.7027530978 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38571.66183917392, cumulative cost = {2816085.0409139236 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :        :                    :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :        :                    :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :        :                    :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :        :                    :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :        :                    :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :        :                    :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                    :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                    :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                    :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                    :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                    :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                          :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :        :                             +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 2001.0320870641465, cumulative cost = {7944642.848381093 rows, 2.980463854777489E8 cpu, 1.04740872E8 io, 3.746591745310965E7 network, 2.1059602742467105E7 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7942641.816294028 rows, 2.977262203438186E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.1059602742467105E7 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 2001.0320870641465, cumulative cost = {7940640.784206964 rows, 2.9769420383042556E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.0931536688895E7 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7938639.7521199 rows, 2.9734202218310225E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.0931536688895E7 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 11039.004801101139, cumulative cost = {7936638.720032835 rows, 2.971653981062846E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.080347063532289E7 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 8450.107378821602, cumulative cost = {5042025.26956421 rows, 1.7951273260930353E8 cpu, 6.7774896E7 io, 2.242434670634686E7 network, 1.2518994528768292E7 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 8102.825860991299, cumulative cost = {3592348.4765346176 rows, 1.2078547449581553E8 cpu, 4.9290732E7 io, 1.497742908732787E7 network, 8436260.56066702 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 5826.687227674545, cumulative cost = {1788717.8702249888 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 5826.687227674545, cumulative cost = {1782891.1829973143 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :                       :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 347.28151783030177, cumulative cost = {1441226.685650771 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 347.28151783030177, cumulative cost = {1440879.4041329408 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
         :                       :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                             :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :                                +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                                      :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 113.12853999250278, cumulative cost = {1.0453076298047002E7 rows, 3.5933582047901934E8 cpu, 1.41712128E8 io, 4.4969476325036176E7 network, 2.56484352354216E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 113.12853999250278, cumulative cost = {1.045296316950701E7 rows, 3.5933582047901934E8 cpu, 1.41712128E8 io, 4.4969476325036176E7 network, 2.56484352354216E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2509168.110233811 rows, 6.152858958628172E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4569493.023423157 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.48545355706335, cumulative cost = {2508722.624780254 rows, 6.15214618190248E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4540981.954395505 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2508277.1393266967 rows, 6.144305637919876E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4540981.954395505 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 2457.589806994182, cumulative cost = {2507831.6538731395 rows, 6.140373494228686E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4512470.885367853 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 2275.047485620262, cumulative cost = {1795387.4888397823 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2275.047485620262, cumulative cost = {1793112.441354162 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 158.97720780683773, cumulative cost = {355004.37577955716 rows, 903731.127293892 cpu, 6162192.0 io, 29959.80623645814 network, 137640.55066183486 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 158.97720780683773, cumulative cost = {354845.3985717503 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 158.97720780683773, cumulative cost = {354686.4213639435 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 182.5423213739202, cumulative cost = {709986.575226363 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.5423213739202, cumulative cost = {709804.0329049891 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 165.87720780683773, cumulative cost = {355117.0757795572 rows, 919983.063658211 cpu, 6162732.0 io, 30665.40623645814 network, 139304.55066183486 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 165.87720780683773, cumulative cost = {354951.19857175037 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.87720780683773, cumulative cost = {354785.3213639435 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 308.7048130596219, cumulative cost = {7943681.930733207 rows, 2.978011973706047E8 cpu, 1.04741556E8 io, 3.742598559853355E7 network, 2.1061654742467105E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 308.7048130596219, cumulative cost = {7943373.225920147 rows, 2.977518046005151E8 cpu, 1.04741556E8 io, 3.7418576683020115E7 network, 2.1061654742467105E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 308.7048130596219, cumulative cost = {7943064.521107088 rows, 2.977518046005151E8 cpu, 1.04741556E8 io, 3.7418576683020115E7 network, 2.1061654742467105E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7942641.816294028 rows, 2.977262203438186E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.1059602742467105E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 2001.0320870641465, cumulative cost = {7940640.784206964 rows, 2.9769420383042556E8 cpu, 1.04740872E8 io, 3.7417892683020115E7 network, 2.0931536688895E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2001.0320870641465, cumulative cost = {7938639.7521199 rows, 2.9734202218310225E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.0931536688895E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 11039.004801101139, cumulative cost = {7936638.720032835 rows, 2.971653981062846E8 cpu, 1.04740872E8 io, 3.736986791293058E7 network, 2.080347063532289E7 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 8450.107378821602, cumulative cost = {5042025.26956421 rows, 1.7951273260930353E8 cpu, 6.7774896E7 io, 2.242434670634686E7 network, 1.2518994528768292E7 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 8102.825860991299, cumulative cost = {3592348.4765346176 rows, 1.2078547449581553E8 cpu, 4.9290732E7 io, 1.497742908732787E7 network, 8436260.56066702 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 5826.687227674545, cumulative cost = {1788717.8702249888 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 5826.687227674545, cumulative cost = {1782891.1829973143 rows, 6.1163141206646E7 cpu, 2.464428E7 io, 7500454.6618718365 network, 4207169.734757918 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
                        :           :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 347.28151783030177, cumulative cost = {1441226.685650771 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 347.28151783030177, cumulative cost = {1440879.4041329408 rows, 5.8718808006109186E7 cpu, 1.8484164E7 io, 7446917.619018989 network, 4082733.9681012724 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#5] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right])\n:        :- Calc(select=[y, X0])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#2] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#4] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[1,1,0,0,1,0,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[1])\n:  :  :     :  +- [#7] Exchange(distribution=[hash[X0, X1]])\n:  :  :     +- [#4] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#5] Calc(select=[x, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[X0, X1])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n      :- Reused(reference_id=[1])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[20])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[6])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[11])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[8])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[3])
         :        :           :     +- Reused(reference_id=[4])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[7])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[23])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[6])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[9])
         :        :           :                       :- Reused(reference_id=[7])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[x, X1])(reuse_id=[21])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :           :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[broadcast])
         :        :           :        +- Reused(reference_id=[8])
         :        :           :- Reused(reference_id=[2])
         :        :           +- Exchange(distribution=[hash[X0, X1]])
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Union(all=[true], union=[X0, X1])
         :        :                    :- Calc(select=[y AS X0, x AS X1])
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[12])
         :        :                    :     :- Reused(reference_id=[1])
         :        :                    :     +- Reused(reference_id=[5])
         :        :                    +- Calc(select=[y AS X0, x0 AS X1])
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[13])
         :        :                          :- Exchange(distribution=[hash[x]])
         :        :                          :  +- Reused(reference_id=[1])
         :        :                          +- Exchange(distribution=[hash[y]])
         :        :                             +- Calc(select=[y, x0])(reuse_id=[10])
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :                                   :- Reused(reference_id=[1])
         :        :                                   +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[19])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- Reused(reference_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[4])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[7])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[10])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[4])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[12])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[13])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[14])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[broadcast])
         :  +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[16])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[7])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[10])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[17])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[18])
         :                 +- Reused(reference_id=[4])
         :- Reused(reference_id=[4])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Reused(reference_id=[19])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[20])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[22])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[4])
                  :- Reused(reference_id=[21])
                  :- Reused(reference_id=[4])
                  :- Reused(reference_id=[22])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[23])

Job has been submitted with JobID e53148ced9d0cad93bac60f53572fb77
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 1d4b3303_9cc6_4fd1_98c3_e9f189e73569

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 10401.060660277017, cumulative cost = {2.6047381949470195E8 rows, 8.451680390325749E9 cpu, 3.5992677E9 io, 1.0463489578336293E9 network, 6.261726320921783E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 10401.060660277017, cumulative cost = {2.6046341843404168E8 rows, 8.451513973355185E9 cpu, 3.5992677E9 io, 1.0463489578336293E9 network, 6.255069642099206E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 10401.060660277017, cumulative cost = {2.604530173733814E8 rows, 8.449683386678976E9 cpu, 3.5992677E9 io, 1.0460993323777826E9 network, 6.255069642099206E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 57379.06918514171, cumulative cost = {2.6044261631272113E8 rows, 8.448765321572014E9 cpu, 3.5992677E9 io, 1.0460993323777826E9 network, 6.24841296327663E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 56366.581626222236, cumulative cost = {1.6646732235885328E8 rows, 5.219659844200831E9 cpu, 2.325682608E9 io, 6.41975408315207E8 network, 3.944323038325934E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 1671.089068396039, cumulative cost = {6.927031679594983E7 rows, 1.9712105814663045E9 cpu, 9.96731604E8 io, 2.3740466606861275E8 network, 1.6299635857858327E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 1671.089068396039, cumulative cost = {6.926864570688143E7 rows, 1.9712105814663045E9 cpu, 9.96731604E8 io, 2.3740466606861275E8 network, 1.6299635857858327E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :              :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 7138.217802845699, cumulative cost = {4.6613699360719904E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 7138.217802845699, cumulative cost = {4.660656114291706E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.6598708925114214E7 rows, 1.4221080681434228E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.2177008759609509E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 47231.11868563799, cumulative cost = {4.6551477806428574E7 rows, 1.4213523702444527E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.1874729600021425E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.650424668774293E7 rows, 1.4130396933557804E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1874729600021425E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 260557.8137915295, cumulative cost = {4.645701556905729E7 rows, 1.408870768335116E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1572450440433341E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 156277.13282013452, cumulative cost = {2.6322785123969078E7 rows, 7.194299750545319E8 cpu, 3.87618636E8 io, 8.430694160712057E7 network, 5.85397877826215E7 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 52418.68497139499, cumulative cost = {1.6076355019487392E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 52418.68497139499, cumulative cost = {1.6023936334515996E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :           :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 103858.44784873951, cumulative cost = {1.009015297166155E7 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 103858.44784873951, cumulative cost = {9986294.523812812 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346278.0023249301, cumulative cost = {6536333.125964073 rows, 8.4897866814722E7 cpu, 1.10754996E8 io, 8584474.907712582 network, 1326404.7609096025 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 346278.0023249301, cumulative cost = {6190055.123639143 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.0023249301, cumulative cost = {5843777.121314213 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 104280.68097139499, cumulative cost = {1.9873672631296687E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 104280.68097139499, cumulative cost = {1.976939195032529E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 349092.8898093, cumulative cost = {1.6319008319353897E7 rows, 6.069554339483182E8 cpu, 2.21481516E8 io, 7.577990685483117E7 network, 3.7789612221711904E7 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 349092.8898093, cumulative cost = {1.5969915429544598E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 349092.8898093, cumulative cost = {1.5620822539735299E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 20231.932061999894, cumulative cost = {1.2964675649926E7 rows, 5.296895410038599E8 cpu, 1.6611222E8 io, 6.740167749940798E7 network, 3.665662402623991E7 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 20231.932061999894, cumulative cost = {1.2944443717864E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.932061999894, cumulative cost = {1.2924211785802E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 54695.4925578262, cumulative cost = {9.714063898127723E7 rows, 3.2483928961529007E9 cpu, 1.328951004E9 io, 4.0457074224659425E8 network, 2.314359452540101E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right]): rowcount = 54695.4925578262, cumulative cost = {9.70859434887194E7 rows, 3.2483928961529007E9 cpu, 1.328951004E9 io, 4.0457074224659425E8 network, 2.314359452540101E8 memory}
         :        :- Calc(select=[y, X0]): rowcount = 346658.45639796916, cumulative cost = {2.5653646169889066E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346658.45639796916, cumulative cost = {2.5306987713491097E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :        :                    :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                    :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :        :                    :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :        :                    :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :        :                    :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :        :                    :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                    :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                    :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                    :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                    :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                    :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :        :                    :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                    :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                    :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                    :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                    :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                    :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                    :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                          :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :        :                             +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 17978.16065420545, cumulative cost = {7.137760182627252E7 rows, 2.67841178858551E9 cpu, 9.4132812E8 io, 3.3670171908838856E8 network, 1.8921574927488643E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.135962366561832E7 rows, 2.675535282880837E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.8921574927488643E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 17978.16065420545, cumulative cost = {7.134164550496411E7 rows, 2.6752476323103695E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.880651469930173E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.132366734430991E7 rows, 2.672083476035229E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.880651469930173E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 99179.32004174781, cumulative cost = {7.130568918365571E7 rows, 2.6704966069145613E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.8691454471114814E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 75912.76101790581, cumulative cost = {4.529137666184382E7 rows, 1.6131533155724554E9 cpu, 6.09103956E8 io, 2.0152127050720713E8 network, 1.1246917034734097E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 72816.88370860582, cumulative cost = {3.228362611040532E7 rows, 1.0854022996514418E9 cpu, 4.42983444E8 io, 1.3459686737728715E8 network, 7.578762632110107E7 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 52365.28497139499, cumulative cost = {1.6075536219487391E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 52365.28497139499, cumulative cost = {1.6023170934515996E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :                       :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 3095.877309299984, cumulative cost = {1.29318377904206E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x0)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3095.877309299984, cumulative cost = {1.29287419131113E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
         :                       :        :- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20282.182061999894, cumulative cost = {1.2924932035802E7 rows, 5.274528697034999E8 cpu, 1.66116228E8 io, 6.692011912991998E7 network, 3.666869202623991E7 memory}
         :                       :        :  :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :                       :        :  :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :                       :        :  :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :                       :        :  :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :                       :        :  :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :  :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :  :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :        :  :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :  :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :        :  :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :  :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :  :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :  :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :  :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :  :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :        :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :        :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :  :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :        :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :        :  +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :        :     +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :                             :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                             :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                             :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1012.4875589194678, cumulative cost = {9.391791488468273E7 rows, 3.229048098301997E9 cpu, 1.273585092E9 io, 4.0412392406257564E8 network, 2.3040899249506962E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1012.4875589194678, cumulative cost = {9.391690239712381E7 rows, 3.229048098301997E9 cpu, 1.273585092E9 io, 4.0412392406257564E8 network, 2.3040899249506962E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.2547352871652175E7 rows, 5.528190029437503E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.102730827068786E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.7929613323013, cumulative cost = {2.254335007869084E7 rows, 5.52754958256369E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.07711295211626E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.253934728572951E7 rows, 5.520504666951745E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.07711295211626E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 22082.030070187793, cumulative cost = {2.2535344492768176E7 rows, 5.516971542140515E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.0514950771637335E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 20445.007666607664, cumulative cost = {1.6134251344242299E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 20445.007666607664, cumulative cost = {1.611380633657569E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 1422.0750288462589, cumulative cost = {3189436.6381634637 rows, 8078380.879230922 cpu, 5.5377408E7 io, 265717.80530771165 network, 1225528.0246154743 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 1422.0750288462589, cumulative cost = {3188014.5631346176 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1422.0750288462589, cumulative cost = {3186592.4881057716 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 1637.02240358013, cumulative cost = {6379011.11845569 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1637.02240358013, cumulative cost = {6377374.09605211 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
               :                 :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 1475.475028846259, cumulative cost = {3190308.838163465 rows, 8213097.380577081 cpu, 5.5381668E7 io, 271259.4053077117 network, 1238352.0246154743 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 1475.475028846259, cumulative cost = {3188833.3631346184 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1475.475028846259, cumulative cost = {3187357.888105772 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 2747.1240981308174, cumulative cost = {7.136853703791273E7 rows, 2.6761750960217714E9 cpu, 9.41332152E8 io, 3.363402062110428E8 network, 1.8922784527488643E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 2747.1240981308174, cumulative cost = {7.136578991381459E7 rows, 2.6757355561660705E9 cpu, 9.41332152E8 io, 3.3627427523268765E8 network, 1.8922784527488643E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2747.1240981308174, cumulative cost = {7.136304278971645E7 rows, 2.6757355561660705E9 cpu, 9.41332152E8 io, 3.3627427523268765E8 network, 1.8922784527488643E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.135962366561832E7 rows, 2.675535282880837E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.8921574927488643E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 17978.16065420545, cumulative cost = {7.134164550496411E7 rows, 2.6752476323103695E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.880651469930173E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.132366734430991E7 rows, 2.672083476035229E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.880651469930173E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 99179.32004174781, cumulative cost = {7.130568918365571E7 rows, 2.6704966069145613E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.8691454471114814E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 75912.76101790581, cumulative cost = {4.529137666184382E7 rows, 1.6131533155724554E9 cpu, 6.09103956E8 io, 2.0152127050720713E8 network, 1.1246917034734097E8 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 72816.88370860582, cumulative cost = {3.228362611040532E7 rows, 1.0854022996514418E9 cpu, 4.42983444E8 io, 1.3459686737728715E8 network, 7.578762632110107E7 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 52365.28497139499, cumulative cost = {1.6075536219487391E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 52365.28497139499, cumulative cost = {1.6023170934515996E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
                        :           :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 3095.877309299984, cumulative cost = {1.29318377904206E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x0)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3095.877309299984, cumulative cost = {1.29287419131113E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
                        :           :        :- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20282.182061999894, cumulative cost = {1.2924932035802E7 rows, 5.274528697034999E8 cpu, 1.66116228E8 io, 6.692011912991998E7 network, 3.666869202623991E7 memory}
                        :           :        :  :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :           :        :  :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :           :        :  :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :           :        :  :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :           :        :  :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :  :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :  :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :        :  :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :  :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :        :  :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :  :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :  :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :  :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :  :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :  :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :  :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :        :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :        :  +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :        :     +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                        :                    +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#5] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right])\n:        :- Calc(select=[y, X0])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#2] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#4] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,0,1,0,2,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#5] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#6] Calc(select=[x, X1])\n:  :        +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x0)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :  :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        :  +- [#9] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X10 AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :        :           :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :           :- Exchange(distribution=[hash[y]])
         :        :           :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :           :- Exchange(distribution=[hash[x]])
         :        :           :           :  +- Calc(select=[x, y0])(reuse_id=[6])
         :        :           :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :           :        :- Reused(reference_id=[1])
         :        :           :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :           :- Reused(reference_id=[1])
         :        :           :           +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[7])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X1, y])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :        :           :- Calc(select=[y AS X0, x AS X1])
         :        :           :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[12])
         :        :           :        :           :     :- Reused(reference_id=[1])
         :        :           :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[11])
         :        :           :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :        :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[13])
         :        :           :        :                 :- Exchange(distribution=[hash[x]])
         :        :           :        :                 :  +- Reused(reference_id=[1])
         :        :           :        :                 +- Exchange(distribution=[hash[y]])
         :        :           :        :                    +- Calc(select=[y, x0])(reuse_id=[10])
         :        :           :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :                          :- Reused(reference_id=[1])
         :        :           :        :                          +- Reused(reference_id=[2])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Reused(reference_id=[4])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[22])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[6])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x0 AS X0, x0 AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[9])
         :        :           :                       :- Reused(reference_id=[7])
         :        :           :                       +- Reused(reference_id=[5])
         :        :           :- Calc(select=[x, X1])(reuse_id=[20])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :           :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[broadcast])
         :        :           :        +- Calc(select=[X0, X1])
         :        :           :           +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :              :- Reused(reference_id=[8])
         :        :           :              +- Reused(reference_id=[3])
         :        :           :- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[8])
         :        :           +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[19])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x AS X0, x AS X1])
         :              :           :  +- Reused(reference_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[3])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[7])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[10])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[3])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[12])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[13])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[14])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[broadcast])
         :  +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[16])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[11])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[10])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[17])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[18])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[3])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Reused(reference_id=[19])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X1, x])
                  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :                 :- Reused(reference_id=[8])
                  :                 +- Reused(reference_id=[2])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[21])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[3])
                  :- Reused(reference_id=[20])
                  :- Reused(reference_id=[3])
                  :- Reused(reference_id=[21])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[22])

Job has been submitted with JobID ebca7e30fc58d9bf0ffd1aa37710b38b
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 2de9075e_8ec2_4855_9d5a_31bf125510a1

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 10401.060660277017, cumulative cost = {2.6047381949470195E8 rows, 8.451680390325749E9 cpu, 3.5992677E9 io, 1.0463489578336293E9 network, 6.261726320921783E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 10401.060660277017, cumulative cost = {2.6046341843404168E8 rows, 8.451513973355185E9 cpu, 3.5992677E9 io, 1.0463489578336293E9 network, 6.255069642099206E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 10401.060660277017, cumulative cost = {2.604530173733814E8 rows, 8.449683386678976E9 cpu, 3.5992677E9 io, 1.0460993323777826E9 network, 6.255069642099206E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 57379.06918514171, cumulative cost = {2.6044261631272113E8 rows, 8.448765321572014E9 cpu, 3.5992677E9 io, 1.0460993323777826E9 network, 6.24841296327663E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 56366.581626222236, cumulative cost = {1.6646732235885328E8 rows, 5.219659844200831E9 cpu, 2.325682608E9 io, 6.41975408315207E8 network, 3.944323038325934E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 1671.089068396039, cumulative cost = {6.927031679594983E7 rows, 1.9712105814663045E9 cpu, 9.96731604E8 io, 2.3740466606861275E8 network, 1.6299635857858327E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 1671.089068396039, cumulative cost = {6.926864570688143E7 rows, 1.9712105814663045E9 cpu, 9.96731604E8 io, 2.3740466606861275E8 network, 1.6299635857858327E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :              :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 7138.217802845699, cumulative cost = {4.6613699360719904E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 7138.217802845699, cumulative cost = {4.660656114291706E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.6598708925114214E7 rows, 1.4221080681434228E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.2177008759609509E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 47231.11868563799, cumulative cost = {4.6551477806428574E7 rows, 1.4213523702444527E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.1874729600021425E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.650424668774293E7 rows, 1.4130396933557804E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1874729600021425E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 260557.8137915295, cumulative cost = {4.645701556905729E7 rows, 1.408870768335116E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1572450440433341E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 156277.13282013452, cumulative cost = {2.6322785123969078E7 rows, 7.194299750545319E8 cpu, 3.87618636E8 io, 8.430694160712057E7 network, 5.85397877826215E7 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 52418.68497139499, cumulative cost = {1.6076355019487392E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 52418.68497139499, cumulative cost = {1.6023936334515996E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :           :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 103858.44784873951, cumulative cost = {1.009015297166155E7 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 103858.44784873951, cumulative cost = {9986294.523812812 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346278.0023249301, cumulative cost = {6536333.125964073 rows, 8.4897866814722E7 cpu, 1.10754996E8 io, 8584474.907712582 network, 1326404.7609096025 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 346278.0023249301, cumulative cost = {6190055.123639143 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.0023249301, cumulative cost = {5843777.121314213 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 104280.68097139499, cumulative cost = {1.9873672631296687E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 104280.68097139499, cumulative cost = {1.976939195032529E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 349092.8898093, cumulative cost = {1.6319008319353897E7 rows, 6.069554339483182E8 cpu, 2.21481516E8 io, 7.577990685483117E7 network, 3.7789612221711904E7 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 349092.8898093, cumulative cost = {1.5969915429544598E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 349092.8898093, cumulative cost = {1.5620822539735299E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 20231.932061999894, cumulative cost = {1.2964675649926E7 rows, 5.296895410038599E8 cpu, 1.6611222E8 io, 6.740167749940798E7 network, 3.665662402623991E7 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 20231.932061999894, cumulative cost = {1.2944443717864E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.932061999894, cumulative cost = {1.2924211785802E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 54695.4925578262, cumulative cost = {9.714063898127723E7 rows, 3.2483928961529007E9 cpu, 1.328951004E9 io, 4.0457074224659425E8 network, 2.314359452540101E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right]): rowcount = 54695.4925578262, cumulative cost = {9.70859434887194E7 rows, 3.2483928961529007E9 cpu, 1.328951004E9 io, 4.0457074224659425E8 network, 2.314359452540101E8 memory}
         :        :- Calc(select=[y, X0]): rowcount = 346658.45639796916, cumulative cost = {2.5653646169889066E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346658.45639796916, cumulative cost = {2.5306987713491097E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :        :                    :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                    :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :        :                    :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :        :                    :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :        :                    :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :        :                    :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                    :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                    :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                    :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                    :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                    :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :        :                    :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                    :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                    :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                    :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                    :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                    :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                    :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                          :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :        :                             +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 17978.16065420545, cumulative cost = {7.137760182627252E7 rows, 2.67841178858551E9 cpu, 9.4132812E8 io, 3.3670171908838856E8 network, 1.8921574927488643E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.135962366561832E7 rows, 2.675535282880837E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.8921574927488643E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 17978.16065420545, cumulative cost = {7.134164550496411E7 rows, 2.6752476323103695E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.880651469930173E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.132366734430991E7 rows, 2.672083476035229E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.880651469930173E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 99179.32004174781, cumulative cost = {7.130568918365571E7 rows, 2.6704966069145613E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.8691454471114814E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 75912.76101790581, cumulative cost = {4.529137666184382E7 rows, 1.6131533155724554E9 cpu, 6.09103956E8 io, 2.0152127050720713E8 network, 1.1246917034734097E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 72816.88370860582, cumulative cost = {3.228362611040532E7 rows, 1.0854022996514418E9 cpu, 4.42983444E8 io, 1.3459686737728715E8 network, 7.578762632110107E7 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 52365.28497139499, cumulative cost = {1.6075536219487391E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 52365.28497139499, cumulative cost = {1.6023170934515996E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :                       :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 3095.877309299984, cumulative cost = {1.29318377904206E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x0)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3095.877309299984, cumulative cost = {1.29287419131113E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
         :                       :        :- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20282.182061999894, cumulative cost = {1.2924932035802E7 rows, 5.274528697034999E8 cpu, 1.66116228E8 io, 6.692011912991998E7 network, 3.666869202623991E7 memory}
         :                       :        :  :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :                       :        :  :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :                       :        :  :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :                       :        :  :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :                       :        :  :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :  :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :  :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :        :  :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :  :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :        :  :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :  :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :  :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :  :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :  :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :  :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :        :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :        :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :  :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :        :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :        :  +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :        :     +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :                             :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                             :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                             :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1012.4875589194678, cumulative cost = {9.391791488468273E7 rows, 3.229048098301997E9 cpu, 1.273585092E9 io, 4.0412392406257564E8 network, 2.3040899249506962E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1012.4875589194678, cumulative cost = {9.391690239712381E7 rows, 3.229048098301997E9 cpu, 1.273585092E9 io, 4.0412392406257564E8 network, 2.3040899249506962E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.2547352871652175E7 rows, 5.528190029437503E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.102730827068786E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.7929613323013, cumulative cost = {2.254335007869084E7 rows, 5.52754958256369E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.07711295211626E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.253934728572951E7 rows, 5.520504666951745E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.07711295211626E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 22082.030070187793, cumulative cost = {2.2535344492768176E7 rows, 5.516971542140515E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.0514950771637335E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 20445.007666607664, cumulative cost = {1.6134251344242299E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 20445.007666607664, cumulative cost = {1.611380633657569E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 1422.0750288462589, cumulative cost = {3189436.6381634637 rows, 8078380.879230922 cpu, 5.5377408E7 io, 265717.80530771165 network, 1225528.0246154743 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 1422.0750288462589, cumulative cost = {3188014.5631346176 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1422.0750288462589, cumulative cost = {3186592.4881057716 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 1637.02240358013, cumulative cost = {6379011.11845569 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1637.02240358013, cumulative cost = {6377374.09605211 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
               :                 :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 1475.475028846259, cumulative cost = {3190308.838163465 rows, 8213097.380577081 cpu, 5.5381668E7 io, 271259.4053077117 network, 1238352.0246154743 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 1475.475028846259, cumulative cost = {3188833.3631346184 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1475.475028846259, cumulative cost = {3187357.888105772 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 2747.1240981308174, cumulative cost = {7.136853703791273E7 rows, 2.6761750960217714E9 cpu, 9.41332152E8 io, 3.363402062110428E8 network, 1.8922784527488643E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 2747.1240981308174, cumulative cost = {7.136578991381459E7 rows, 2.6757355561660705E9 cpu, 9.41332152E8 io, 3.3627427523268765E8 network, 1.8922784527488643E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2747.1240981308174, cumulative cost = {7.136304278971645E7 rows, 2.6757355561660705E9 cpu, 9.41332152E8 io, 3.3627427523268765E8 network, 1.8922784527488643E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.135962366561832E7 rows, 2.675535282880837E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.8921574927488643E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 17978.16065420545, cumulative cost = {7.134164550496411E7 rows, 2.6752476323103695E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.880651469930173E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.132366734430991E7 rows, 2.672083476035229E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.880651469930173E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 99179.32004174781, cumulative cost = {7.130568918365571E7 rows, 2.6704966069145613E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.8691454471114814E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 75912.76101790581, cumulative cost = {4.529137666184382E7 rows, 1.6131533155724554E9 cpu, 6.09103956E8 io, 2.0152127050720713E8 network, 1.1246917034734097E8 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 72816.88370860582, cumulative cost = {3.228362611040532E7 rows, 1.0854022996514418E9 cpu, 4.42983444E8 io, 1.3459686737728715E8 network, 7.578762632110107E7 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 52365.28497139499, cumulative cost = {1.6075536219487391E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 52365.28497139499, cumulative cost = {1.6023170934515996E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
                        :           :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 3095.877309299984, cumulative cost = {1.29318377904206E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x0)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3095.877309299984, cumulative cost = {1.29287419131113E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
                        :           :        :- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20282.182061999894, cumulative cost = {1.2924932035802E7 rows, 5.274528697034999E8 cpu, 1.66116228E8 io, 6.692011912991998E7 network, 3.666869202623991E7 memory}
                        :           :        :  :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :           :        :  :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :           :        :  :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :           :        :  :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :           :        :  :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :  :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :  :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :        :  :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :  :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :        :  :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :  :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :  :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :  :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :  :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :  :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :  :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :        :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :        :  +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :        :     +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                        :                    +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#5] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right])\n:        :- Calc(select=[y, X0])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#2] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#4] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,0,1,0,2,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#5] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#6] Calc(select=[x, X1])\n:  :        +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x0)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :  :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        :  +- [#9] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X10 AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :        :           :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :           :- Exchange(distribution=[hash[y]])
         :        :           :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :           :- Exchange(distribution=[hash[x]])
         :        :           :           :  +- Calc(select=[x, y0])(reuse_id=[6])
         :        :           :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :           :        :- Reused(reference_id=[1])
         :        :           :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :           :- Reused(reference_id=[1])
         :        :           :           +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[7])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X1, y])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :        :           :- Calc(select=[y AS X0, x AS X1])
         :        :           :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[12])
         :        :           :        :           :     :- Reused(reference_id=[1])
         :        :           :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[11])
         :        :           :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :        :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[13])
         :        :           :        :                 :- Exchange(distribution=[hash[x]])
         :        :           :        :                 :  +- Reused(reference_id=[1])
         :        :           :        :                 +- Exchange(distribution=[hash[y]])
         :        :           :        :                    +- Calc(select=[y, x0])(reuse_id=[10])
         :        :           :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :                          :- Reused(reference_id=[1])
         :        :           :        :                          +- Reused(reference_id=[2])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Reused(reference_id=[4])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[22])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[6])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x0 AS X0, x0 AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[9])
         :        :           :                       :- Reused(reference_id=[7])
         :        :           :                       +- Reused(reference_id=[5])
         :        :           :- Calc(select=[x, X1])(reuse_id=[20])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :           :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[broadcast])
         :        :           :        +- Calc(select=[X0, X1])
         :        :           :           +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :              :- Reused(reference_id=[8])
         :        :           :              +- Reused(reference_id=[3])
         :        :           :- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[8])
         :        :           +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[19])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x AS X0, x AS X1])
         :              :           :  +- Reused(reference_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[3])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[7])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[10])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[3])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[12])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[13])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[14])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[broadcast])
         :  +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[16])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[11])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[10])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[17])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[18])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[3])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Reused(reference_id=[19])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X1, x])
                  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :                 :- Reused(reference_id=[8])
                  :                 +- Reused(reference_id=[2])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[21])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[3])
                  :- Reused(reference_id=[20])
                  :- Reused(reference_id=[3])
                  :- Reused(reference_id=[21])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[22])

Job has been submitted with JobID 83a705fc6eeb9dfc43eee2dbc75b3e80
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 0d8ac599_26dd_4304_a7dc_2744ded59f2e

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 10401.060660277017, cumulative cost = {2.6047381949470195E8 rows, 8.451680390325749E9 cpu, 3.5992677E9 io, 1.0463489578336293E9 network, 6.261726320921783E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 10401.060660277017, cumulative cost = {2.6046341843404168E8 rows, 8.451513973355185E9 cpu, 3.5992677E9 io, 1.0463489578336293E9 network, 6.255069642099206E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 10401.060660277017, cumulative cost = {2.604530173733814E8 rows, 8.449683386678976E9 cpu, 3.5992677E9 io, 1.0460993323777826E9 network, 6.255069642099206E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 57379.06918514171, cumulative cost = {2.6044261631272113E8 rows, 8.448765321572014E9 cpu, 3.5992677E9 io, 1.0460993323777826E9 network, 6.24841296327663E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 56366.581626222236, cumulative cost = {1.6646732235885328E8 rows, 5.219659844200831E9 cpu, 2.325682608E9 io, 6.41975408315207E8 network, 3.944323038325934E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 1671.089068396039, cumulative cost = {6.927031679594983E7 rows, 1.9712105814663045E9 cpu, 9.96731604E8 io, 2.3740466606861275E8 network, 1.6299635857858327E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 1671.089068396039, cumulative cost = {6.926864570688143E7 rows, 1.9712105814663045E9 cpu, 9.96731604E8 io, 2.3740466606861275E8 network, 1.6299635857858327E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :              :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 7138.217802845699, cumulative cost = {4.6613699360719904E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 7138.217802845699, cumulative cost = {4.660656114291706E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.6598708925114214E7 rows, 1.4221080681434228E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.2177008759609509E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 47231.11868563799, cumulative cost = {4.6551477806428574E7 rows, 1.4213523702444527E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.1874729600021425E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.650424668774293E7 rows, 1.4130396933557804E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1874729600021425E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 260557.8137915295, cumulative cost = {4.645701556905729E7 rows, 1.408870768335116E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1572450440433341E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 156277.13282013452, cumulative cost = {2.6322785123969078E7 rows, 7.194299750545319E8 cpu, 3.87618636E8 io, 8.430694160712057E7 network, 5.85397877826215E7 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 52418.68497139499, cumulative cost = {1.6076355019487392E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 52418.68497139499, cumulative cost = {1.6023936334515996E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :           :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 103858.44784873951, cumulative cost = {1.009015297166155E7 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 103858.44784873951, cumulative cost = {9986294.523812812 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346278.0023249301, cumulative cost = {6536333.125964073 rows, 8.4897866814722E7 cpu, 1.10754996E8 io, 8584474.907712582 network, 1326404.7609096025 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 346278.0023249301, cumulative cost = {6190055.123639143 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.0023249301, cumulative cost = {5843777.121314213 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 104280.68097139499, cumulative cost = {1.9873672631296687E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 104280.68097139499, cumulative cost = {1.976939195032529E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 349092.8898093, cumulative cost = {1.6319008319353897E7 rows, 6.069554339483182E8 cpu, 2.21481516E8 io, 7.577990685483117E7 network, 3.7789612221711904E7 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 349092.8898093, cumulative cost = {1.5969915429544598E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 349092.8898093, cumulative cost = {1.5620822539735299E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 20231.932061999894, cumulative cost = {1.2964675649926E7 rows, 5.296895410038599E8 cpu, 1.6611222E8 io, 6.740167749940798E7 network, 3.665662402623991E7 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 20231.932061999894, cumulative cost = {1.2944443717864E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.932061999894, cumulative cost = {1.2924211785802E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 54695.4925578262, cumulative cost = {9.714063898127723E7 rows, 3.2483928961529007E9 cpu, 1.328951004E9 io, 4.0457074224659425E8 network, 2.314359452540101E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right]): rowcount = 54695.4925578262, cumulative cost = {9.70859434887194E7 rows, 3.2483928961529007E9 cpu, 1.328951004E9 io, 4.0457074224659425E8 network, 2.314359452540101E8 memory}
         :        :- Calc(select=[y, X0]): rowcount = 346658.45639796916, cumulative cost = {2.5653646169889066E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346658.45639796916, cumulative cost = {2.5306987713491097E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :        :                    :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                    :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :        :                    :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :        :                    :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :        :                    :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :        :                    :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                    :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                    :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                    :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                    :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                    :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :        :                    :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                    :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                    :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                    :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                    :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                    :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                    :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                          :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :        :                             +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 17978.16065420545, cumulative cost = {7.137760182627252E7 rows, 2.67841178858551E9 cpu, 9.4132812E8 io, 3.3670171908838856E8 network, 1.8921574927488643E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.135962366561832E7 rows, 2.675535282880837E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.8921574927488643E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 17978.16065420545, cumulative cost = {7.134164550496411E7 rows, 2.6752476323103695E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.880651469930173E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.132366734430991E7 rows, 2.672083476035229E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.880651469930173E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 99179.32004174781, cumulative cost = {7.130568918365571E7 rows, 2.6704966069145613E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.8691454471114814E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 75912.76101790581, cumulative cost = {4.529137666184382E7 rows, 1.6131533155724554E9 cpu, 6.09103956E8 io, 2.0152127050720713E8 network, 1.1246917034734097E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 72816.88370860582, cumulative cost = {3.228362611040532E7 rows, 1.0854022996514418E9 cpu, 4.42983444E8 io, 1.3459686737728715E8 network, 7.578762632110107E7 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 52365.28497139499, cumulative cost = {1.6075536219487391E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 52365.28497139499, cumulative cost = {1.6023170934515996E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :                       :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 3095.877309299984, cumulative cost = {1.29318377904206E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x0)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3095.877309299984, cumulative cost = {1.29287419131113E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
         :                       :        :- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20282.182061999894, cumulative cost = {1.2924932035802E7 rows, 5.274528697034999E8 cpu, 1.66116228E8 io, 6.692011912991998E7 network, 3.666869202623991E7 memory}
         :                       :        :  :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :                       :        :  :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :                       :        :  :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :                       :        :  :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :                       :        :  :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :  :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :  :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :        :  :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :  :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :        :  :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :  :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :  :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :  :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :  :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :  :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :        :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :        :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :  :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :        :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :        :  +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :        :     +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :                             :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                             :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                             :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1012.4875589194678, cumulative cost = {9.391791488468273E7 rows, 3.229048098301997E9 cpu, 1.273585092E9 io, 4.0412392406257564E8 network, 2.3040899249506962E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1012.4875589194678, cumulative cost = {9.391690239712381E7 rows, 3.229048098301997E9 cpu, 1.273585092E9 io, 4.0412392406257564E8 network, 2.3040899249506962E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.2547352871652175E7 rows, 5.528190029437503E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.102730827068786E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.7929613323013, cumulative cost = {2.254335007869084E7 rows, 5.52754958256369E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.07711295211626E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.253934728572951E7 rows, 5.520504666951745E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.07711295211626E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 22082.030070187793, cumulative cost = {2.2535344492768176E7 rows, 5.516971542140515E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.0514950771637335E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 20445.007666607664, cumulative cost = {1.6134251344242299E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 20445.007666607664, cumulative cost = {1.611380633657569E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 1422.0750288462589, cumulative cost = {3189436.6381634637 rows, 8078380.879230922 cpu, 5.5377408E7 io, 265717.80530771165 network, 1225528.0246154743 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 1422.0750288462589, cumulative cost = {3188014.5631346176 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1422.0750288462589, cumulative cost = {3186592.4881057716 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 1637.02240358013, cumulative cost = {6379011.11845569 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1637.02240358013, cumulative cost = {6377374.09605211 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
               :                 :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 1475.475028846259, cumulative cost = {3190308.838163465 rows, 8213097.380577081 cpu, 5.5381668E7 io, 271259.4053077117 network, 1238352.0246154743 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 1475.475028846259, cumulative cost = {3188833.3631346184 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1475.475028846259, cumulative cost = {3187357.888105772 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 2747.1240981308174, cumulative cost = {7.136853703791273E7 rows, 2.6761750960217714E9 cpu, 9.41332152E8 io, 3.363402062110428E8 network, 1.8922784527488643E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 2747.1240981308174, cumulative cost = {7.136578991381459E7 rows, 2.6757355561660705E9 cpu, 9.41332152E8 io, 3.3627427523268765E8 network, 1.8922784527488643E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2747.1240981308174, cumulative cost = {7.136304278971645E7 rows, 2.6757355561660705E9 cpu, 9.41332152E8 io, 3.3627427523268765E8 network, 1.8922784527488643E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.135962366561832E7 rows, 2.675535282880837E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.8921574927488643E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 17978.16065420545, cumulative cost = {7.134164550496411E7 rows, 2.6752476323103695E9 cpu, 9.4132812E8 io, 3.3627024323268765E8 network, 1.880651469930173E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 17978.16065420545, cumulative cost = {7.132366734430991E7 rows, 2.672083476035229E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.880651469930173E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 99179.32004174781, cumulative cost = {7.130568918365571E7 rows, 2.6704966069145613E9 cpu, 9.4132812E8 io, 3.3583876737698674E8 network, 1.8691454471114814E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 75912.76101790581, cumulative cost = {4.529137666184382E7 rows, 1.6131533155724554E9 cpu, 6.09103956E8 io, 2.0152127050720713E8 network, 1.1246917034734097E8 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 72816.88370860582, cumulative cost = {3.228362611040532E7 rows, 1.0854022996514418E9 cpu, 4.42983444E8 io, 1.3459686737728715E8 network, 7.578762632110107E7 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 52365.28497139499, cumulative cost = {1.6075536219487391E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 52365.28497139499, cumulative cost = {1.6023170934515996E7 rows, 5.496700263897252E8 cpu, 2.214858E8 io, 6.740724309940799E7 network, 3.78054546217119E7 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
                        :           :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 3095.877309299984, cumulative cost = {1.29318377904206E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x0)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3095.877309299984, cumulative cost = {1.29287419131113E7 rows, 5.276751031599959E8 cpu, 1.66120512E8 io, 6.692440312991998E7 network, 3.668154402623991E7 memory}
                        :           :        :- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20282.182061999894, cumulative cost = {1.2924932035802E7 rows, 5.274528697034999E8 cpu, 1.66116228E8 io, 6.692011912991998E7 network, 3.666869202623991E7 memory}
                        :           :        :  :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :           :        :  :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :           :        :  :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :           :        :  :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :           :        :  :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :  :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :  :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :        :  :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :  :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :        :  :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :  :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :  :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :  :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :  :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :  :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :  :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :        :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :        :  +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :        :     +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                        :                    +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#5] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right])\n:        :- Calc(select=[y, X0])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#2] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#4] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,0,1,0,2,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#5] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#6] Calc(select=[x, X1])\n:  :        +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x0)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :  :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        :  +- [#9] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X10 AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :        :           :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :           :- Exchange(distribution=[hash[y]])
         :        :           :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :           :- Exchange(distribution=[hash[x]])
         :        :           :           :  +- Calc(select=[x, y0])(reuse_id=[6])
         :        :           :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :           :        :- Reused(reference_id=[1])
         :        :           :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :           :- Reused(reference_id=[1])
         :        :           :           +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :        :           :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[7])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X1, y])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :        :           :- Calc(select=[y AS X0, x AS X1])
         :        :           :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[12])
         :        :           :        :           :     :- Reused(reference_id=[1])
         :        :           :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[11])
         :        :           :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :        :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[13])
         :        :           :        :                 :- Exchange(distribution=[hash[x]])
         :        :           :        :                 :  +- Reused(reference_id=[1])
         :        :           :        :                 +- Exchange(distribution=[hash[y]])
         :        :           :        :                    +- Calc(select=[y, x0])(reuse_id=[10])
         :        :           :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :                          :- Reused(reference_id=[1])
         :        :           :        :                          +- Reused(reference_id=[2])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Reused(reference_id=[4])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[22])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[6])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x0 AS X0, x0 AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[9])
         :        :           :                       :- Reused(reference_id=[7])
         :        :           :                       +- Reused(reference_id=[5])
         :        :           :- Calc(select=[x, X1])(reuse_id=[20])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :           :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[broadcast])
         :        :           :        +- Calc(select=[X0, X1])
         :        :           :           +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :              :- Reused(reference_id=[8])
         :        :           :              +- Reused(reference_id=[3])
         :        :           :- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[8])
         :        :           +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[19])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x AS X0, x AS X1])
         :              :           :  +- Reused(reference_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[10])
         :              :                 +- Reused(reference_id=[3])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[7])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[10])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[3])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[12])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[13])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[14])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[broadcast])
         :  +- Reused(reference_id=[15])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[16])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[11])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[10])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[17])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[18])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[3])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Reused(reference_id=[19])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X1, x])
                  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :                 :- Reused(reference_id=[8])
                  :                 +- Reused(reference_id=[2])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[21])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[3])
                  :- Reused(reference_id=[20])
                  :- Reused(reference_id=[3])
                  :- Reused(reference_id=[21])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[22])

Job has been submitted with JobID 90fd3bd13f81f875840db3a2b69d2a1c
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: f6bb63b8_cb13_40e3_8a51_48d3ffbbdfa1

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 28895.290967768946, cumulative cost = {7.511290236056157E8 rows, 2.8077821471381195E10 cpu, 1.0000189068E10 io, 3.563476421460978E9 network, 1.7390298388030863E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 28895.290967768946, cumulative cost = {7.511001283146479E8 rows, 2.807735914672571E10 cpu, 1.0000189068E10 io, 3.563476421460978E9 network, 1.737180540181149E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 28895.290967768946, cumulative cost = {7.510712330236801E8 rows, 2.8072273575515385E10 cpu, 1.0000189068E10 io, 3.5627829344777517E9 network, 1.737180540181149E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 159405.3677522016, cumulative cost = {7.510423377327123E8 rows, 2.8069723089631348E10 cpu, 1.0000189068E10 io, 3.5627829344777517E9 network, 1.7353312415592117E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 156600.54465840707, cumulative cost = {4.831138406429642E8 rows, 1.7958243206458492E10 cpu, 6.461661696E9 io, 2.2771922780099463E9 network, 1.0954387631633863E9 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 4632.668617758766, cumulative cost = {2.0526823933223084E8 rows, 7.6306014182839155E9 cpu, 2.76929994E9 io, 9.672285019282395E8 network, 4.5264191754447496E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 4632.668617758766, cumulative cost = {2.0526360666361308E8 rows, 7.6306014182839155E9 cpu, 2.76929994E9 io, 9.672285019282395E8 network, 4.5264191754447496E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 19766.99363206918, cumulative cost = {1.423244492281868E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19766.99363206918, cumulative cost = {1.423046822345547E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4228378524092263E8 rows, 6.105312264482921E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.381827836107407E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 131214.95754712788, cumulative cost = {1.421525702833755E8 rows, 6.103212825162167E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.297850263277245E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4202135532582837E8 rows, 6.080118992633872E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.297850263277245E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 723867.7259114801, cumulative cost = {1.4189014036828125E8 rows, 6.068537109019288E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.213872690447083E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 434135.9698540041, cumulative cost = {7.953980905368534E7 rows, 3.075755645924015E9 cpu, 1.076951508E9 io, 3.8804849938685584E8 network, 1.625369236107142E8 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 145578.55955747602, cumulative cost = {5.1074726335301235E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 145578.55955747602, cumulative cost = {5.092914777574376E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :           :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 288557.4102965281, cumulative cost = {2.8030946748530105E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 288557.4102965281, cumulative cost = {2.7742389338233575E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 962117.0686435205, cumulative cost = {1.815780992793705E7 rows, 2.3569002502525926E8 cpu, 3.07712964E8 io, 2.3837071183496352E7 network, 3641188.576720077 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 962117.0686435205, cumulative cost = {1.7195692859293528E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.0686435205, cumulative cost = {1.6233575790650006E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 289731.75605747604, cumulative cost = {6.162646358868442E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 289731.75605747604, cumulative cost = {6.133673183262694E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 969946.0403831735, cumulative cost = {5.175097807656946E7 rows, 2.763680923046296E9 cpu, 6.15375948E8 io, 3.6438941077255565E8 network, 1.0498046143399411E8 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 969946.0403831735, cumulative cost = {5.0781032036186285E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 969946.0403831735, cumulative cost = {4.981108599580311E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :           :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 151967.87604064832, cumulative cost = {2.7768900076607496E8 rows, 1.0327485187629917E10 cpu, 3.692361756E9 io, 1.3099637760817068E9 network, 6.427968456189113E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 151967.87604064832, cumulative cost = {2.775370328900343E8 rows, 1.0327485187629917E10 cpu, 3.692361756E9 io, 1.3099637760817068E9 network, 6.427968456189113E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 963181.8695729483, cumulative cost = {7.223416537552741E7 rows, 1.7370816922798169E9 cpu, 1.076958924E9 io, 2.1166586165744773E8 network, 1.1443879393373422E8 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 963181.8695729483, cumulative cost = {7.127098350595446E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 963181.8695729483, cumulative cost = {7.03078016363815E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 49937.304031373824, cumulative cost = {2.0515089963846627E8 rows, 8.582298541961266E9 cpu, 2.615402832E9 io, 1.098297914424259E9 network, 5.255615626594201E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.051009623344349E8 rows, 8.573909074883995E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.255615626594201E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 49937.304031373824, cumulative cost = {2.0505102503040352E8 rows, 8.573110078019493E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.2236557520141214E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.0500108772637215E8 rows, 8.564321112509972E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.2236557520141214E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 275486.90624205436, cumulative cost = {2.0495115042234078E8 rows, 8.559913322010098E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.191695877434042E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 210843.18722152544, cumulative cost = {1.3229827917897491E8 rows, 5.558838022964954E9 cpu, 1.6923351E9 io, 7.137188312634399E8 network, 3.1235517947220016E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 202308.70683835194, cumulative cost = {9.610313181145492E7 rows, 4.092698063270199E9 cpu, 1.230787476E9 io, 5.277855359213882E8 network, 2.1048067444792414E8 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 145493.95955747602, cumulative cost = {5.107342913530123E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 145493.95955747602, cumulative cost = {5.092793517574376E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :                       :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 8534.480383173515, cumulative cost = {3.598430418029846E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 8534.480383173515, cumulative cost = {3.597576969991529E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
         :                       :        :- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :                             :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                             :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :                                +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                                      :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2804.8230937945277, cumulative cost = {2.6776909172199586E8 rows, 1.0111320477805105E10 cpu, 3.538527372E9 io, 1.2855906564678056E9 network, 6.398924783958253E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2804.8230937945277, cumulative cost = {2.6776628689890206E8 rows, 1.0111320477805105E10 cpu, 3.538527372E9 io, 1.2855906564678056E9 network, 6.398924783958253E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.263857795455921E7 rows, 1.5355486186271033E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.1388480238254161E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11118.225020590779, cumulative cost = {6.262745972953862E7 rows, 1.535370727026774E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.131732359812238E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.261634150451803E7 rows, 1.53341391942315E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.131732359812238E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 61335.41794529453, cumulative cost = {6.2605223279497445E7 rows, 1.5324325527360253E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.12461669579906E8 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 56803.004187689134, cumulative cost = {4.4825714625507E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 56803.004187689134, cumulative cost = {4.476891162131931E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 3940.5036688916416, cumulative cost = {8859707.86438451 rows, 2.2367324227663238E7 cpu, 1.53856728E8 io, 732276.6750760621 network, 3384091.130787534 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 3940.5036688916416, cumulative cost = {8855767.360715618 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 3940.5036688916416, cumulative cost = {8851826.857046727 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 4532.413757605399, cumulative cost = {1.771817323604515E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4532.413757605399, cumulative cost = {1.7713640822287545E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 4025.1036688916415, cumulative cost = {8861089.664384509 rows, 2.2659503398878183E7 cpu, 1.53863484E8 io, 741063.075076062 network, 3404403.130787534 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 4025.1036688916415, cumulative cost = {8857064.560715618 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4025.1036688916415, cumulative cost = {8853039.457046727 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 7580.595604706074, cumulative cost = {2.0512490412124905E8 rows, 8.575622268612999E9 cpu, 2.615410032E9 io, 1.097288553422019E9 network, 5.255831626594201E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 7580.595604706074, cumulative cost = {2.0511732352564433E8 rows, 8.574409373316246E9 cpu, 2.615410032E9 io, 1.097106619127506E9 network, 5.255831626594201E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 7580.595604706074, cumulative cost = {2.051097429300396E8 rows, 8.574409373316246E9 cpu, 2.615410032E9 io, 1.097106619127506E9 network, 5.255831626594201E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.051009623344349E8 rows, 8.573909074883995E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.255615626594201E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 49937.304031373824, cumulative cost = {2.0505102503040352E8 rows, 8.573110078019493E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.2236557520141214E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.0500108772637215E8 rows, 8.564321112509972E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.2236557520141214E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 275486.90624205436, cumulative cost = {2.0495115042234078E8 rows, 8.559913322010098E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.191695877434042E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 210843.18722152544, cumulative cost = {1.3229827917897491E8 rows, 5.558838022964954E9 cpu, 1.6923351E9 io, 7.137188312634399E8 network, 3.1235517947220016E8 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 202308.70683835194, cumulative cost = {9.610313181145492E7 rows, 4.092698063270199E9 cpu, 1.230787476E9 io, 5.277855359213882E8 network, 2.1048067444792414E8 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 145493.95955747602, cumulative cost = {5.107342913530123E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 145493.95955747602, cumulative cost = {5.092793517574376E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
                        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 8534.480383173515, cumulative cost = {3.598430418029846E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 8534.480383173515, cumulative cost = {3.597576969991529E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#7] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#6] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#7] Calc(select=[x, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :- [#3] Calc(select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[11])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[7])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[9])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[3])
         :        :           :     +- Reused(reference_id=[4])
         :        :           :- Reused(reference_id=[5])
         :        :           :- Reused(reference_id=[6])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[24])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[7])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[10])
         :        :           :                       :- Reused(reference_id=[8])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[x, X1])(reuse_id=[22])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :     :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[hash[X0]])
         :        :           :        +- Reused(reference_id=[9])
         :        :           +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[16])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- Reused(reference_id=[10])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[4])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[12])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[8])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[4])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[13])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[15])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0]])
         :  +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[18])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[8])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[11])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[19])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[20])
         :                 +- Reused(reference_id=[4])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
                  :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[23])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[4])
                  :- Reused(reference_id=[22])
                  :- Reused(reference_id=[4])
                  :- Reused(reference_id=[23])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[24])

Job has been submitted with JobID 2fc18b22120de55107a62b202f628846
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...

------------> using sink uuid: feca0efc_b2bb_4924_95d6_af99f23d7b8f

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 28895.290967768946, cumulative cost = {7.511290236056157E8 rows, 2.8077821471381195E10 cpu, 1.0000189068E10 io, 3.563476421460978E9 network, 1.7390298388030863E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 28895.290967768946, cumulative cost = {7.511001283146479E8 rows, 2.807735914672571E10 cpu, 1.0000189068E10 io, 3.563476421460978E9 network, 1.737180540181149E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 28895.290967768946, cumulative cost = {7.510712330236801E8 rows, 2.8072273575515385E10 cpu, 1.0000189068E10 io, 3.5627829344777517E9 network, 1.737180540181149E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 159405.3677522016, cumulative cost = {7.510423377327123E8 rows, 2.8069723089631348E10 cpu, 1.0000189068E10 io, 3.5627829344777517E9 network, 1.7353312415592117E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 156600.54465840707, cumulative cost = {4.831138406429642E8 rows, 1.7958243206458492E10 cpu, 6.461661696E9 io, 2.2771922780099463E9 network, 1.0954387631633863E9 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 4632.668617758766, cumulative cost = {2.0526823933223084E8 rows, 7.6306014182839155E9 cpu, 2.76929994E9 io, 9.672285019282395E8 network, 4.5264191754447496E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 4632.668617758766, cumulative cost = {2.0526360666361308E8 rows, 7.6306014182839155E9 cpu, 2.76929994E9 io, 9.672285019282395E8 network, 4.5264191754447496E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 19766.99363206918, cumulative cost = {1.423244492281868E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19766.99363206918, cumulative cost = {1.423046822345547E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4228378524092263E8 rows, 6.105312264482921E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.381827836107407E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 131214.95754712788, cumulative cost = {1.421525702833755E8 rows, 6.103212825162167E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.297850263277245E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4202135532582837E8 rows, 6.080118992633872E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.297850263277245E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 723867.7259114801, cumulative cost = {1.4189014036828125E8 rows, 6.068537109019288E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.213872690447083E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 434135.9698540041, cumulative cost = {7.953980905368534E7 rows, 3.075755645924015E9 cpu, 1.076951508E9 io, 3.8804849938685584E8 network, 1.625369236107142E8 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 145578.55955747602, cumulative cost = {5.1074726335301235E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 145578.55955747602, cumulative cost = {5.092914777574376E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :           :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 288557.4102965281, cumulative cost = {2.8030946748530105E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 288557.4102965281, cumulative cost = {2.7742389338233575E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 962117.0686435205, cumulative cost = {1.815780992793705E7 rows, 2.3569002502525926E8 cpu, 3.07712964E8 io, 2.3837071183496352E7 network, 3641188.576720077 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 962117.0686435205, cumulative cost = {1.7195692859293528E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.0686435205, cumulative cost = {1.6233575790650006E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 289731.75605747604, cumulative cost = {6.162646358868442E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 289731.75605747604, cumulative cost = {6.133673183262694E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 969946.0403831735, cumulative cost = {5.175097807656946E7 rows, 2.763680923046296E9 cpu, 6.15375948E8 io, 3.6438941077255565E8 network, 1.0498046143399411E8 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 969946.0403831735, cumulative cost = {5.0781032036186285E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 969946.0403831735, cumulative cost = {4.981108599580311E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :           :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 151967.87604064832, cumulative cost = {2.7768900076607496E8 rows, 1.0327485187629917E10 cpu, 3.692361756E9 io, 1.3099637760817068E9 network, 6.427968456189113E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 151967.87604064832, cumulative cost = {2.775370328900343E8 rows, 1.0327485187629917E10 cpu, 3.692361756E9 io, 1.3099637760817068E9 network, 6.427968456189113E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 963181.8695729483, cumulative cost = {7.223416537552741E7 rows, 1.7370816922798169E9 cpu, 1.076958924E9 io, 2.1166586165744773E8 network, 1.1443879393373422E8 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 963181.8695729483, cumulative cost = {7.127098350595446E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 963181.8695729483, cumulative cost = {7.03078016363815E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 49937.304031373824, cumulative cost = {2.0515089963846627E8 rows, 8.582298541961266E9 cpu, 2.615402832E9 io, 1.098297914424259E9 network, 5.255615626594201E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.051009623344349E8 rows, 8.573909074883995E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.255615626594201E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 49937.304031373824, cumulative cost = {2.0505102503040352E8 rows, 8.573110078019493E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.2236557520141214E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.0500108772637215E8 rows, 8.564321112509972E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.2236557520141214E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 275486.90624205436, cumulative cost = {2.0495115042234078E8 rows, 8.559913322010098E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.191695877434042E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 210843.18722152544, cumulative cost = {1.3229827917897491E8 rows, 5.558838022964954E9 cpu, 1.6923351E9 io, 7.137188312634399E8 network, 3.1235517947220016E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 202308.70683835194, cumulative cost = {9.610313181145492E7 rows, 4.092698063270199E9 cpu, 1.230787476E9 io, 5.277855359213882E8 network, 2.1048067444792414E8 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 145493.95955747602, cumulative cost = {5.107342913530123E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 145493.95955747602, cumulative cost = {5.092793517574376E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :                       :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 8534.480383173515, cumulative cost = {3.598430418029846E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 8534.480383173515, cumulative cost = {3.597576969991529E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
         :                       :        :- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :                             :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                             :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :                                +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                                      :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2804.8230937945277, cumulative cost = {2.6776909172199586E8 rows, 1.0111320477805105E10 cpu, 3.538527372E9 io, 1.2855906564678056E9 network, 6.398924783958253E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2804.8230937945277, cumulative cost = {2.6776628689890206E8 rows, 1.0111320477805105E10 cpu, 3.538527372E9 io, 1.2855906564678056E9 network, 6.398924783958253E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.263857795455921E7 rows, 1.5355486186271033E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.1388480238254161E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11118.225020590779, cumulative cost = {6.262745972953862E7 rows, 1.535370727026774E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.131732359812238E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.261634150451803E7 rows, 1.53341391942315E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.131732359812238E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 61335.41794529453, cumulative cost = {6.2605223279497445E7 rows, 1.5324325527360253E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.12461669579906E8 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 56803.004187689134, cumulative cost = {4.4825714625507E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 56803.004187689134, cumulative cost = {4.476891162131931E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 3940.5036688916416, cumulative cost = {8859707.86438451 rows, 2.2367324227663238E7 cpu, 1.53856728E8 io, 732276.6750760621 network, 3384091.130787534 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 3940.5036688916416, cumulative cost = {8855767.360715618 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 3940.5036688916416, cumulative cost = {8851826.857046727 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 4532.413757605399, cumulative cost = {1.771817323604515E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4532.413757605399, cumulative cost = {1.7713640822287545E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 4025.1036688916415, cumulative cost = {8861089.664384509 rows, 2.2659503398878183E7 cpu, 1.53863484E8 io, 741063.075076062 network, 3404403.130787534 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 4025.1036688916415, cumulative cost = {8857064.560715618 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4025.1036688916415, cumulative cost = {8853039.457046727 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 7580.595604706074, cumulative cost = {2.0512490412124905E8 rows, 8.575622268612999E9 cpu, 2.615410032E9 io, 1.097288553422019E9 network, 5.255831626594201E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 7580.595604706074, cumulative cost = {2.0511732352564433E8 rows, 8.574409373316246E9 cpu, 2.615410032E9 io, 1.097106619127506E9 network, 5.255831626594201E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 7580.595604706074, cumulative cost = {2.051097429300396E8 rows, 8.574409373316246E9 cpu, 2.615410032E9 io, 1.097106619127506E9 network, 5.255831626594201E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.051009623344349E8 rows, 8.573909074883995E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.255615626594201E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 49937.304031373824, cumulative cost = {2.0505102503040352E8 rows, 8.573110078019493E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.2236557520141214E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.0500108772637215E8 rows, 8.564321112509972E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.2236557520141214E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 275486.90624205436, cumulative cost = {2.0495115042234078E8 rows, 8.559913322010098E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.191695877434042E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 210843.18722152544, cumulative cost = {1.3229827917897491E8 rows, 5.558838022964954E9 cpu, 1.6923351E9 io, 7.137188312634399E8 network, 3.1235517947220016E8 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 202308.70683835194, cumulative cost = {9.610313181145492E7 rows, 4.092698063270199E9 cpu, 1.230787476E9 io, 5.277855359213882E8 network, 2.1048067444792414E8 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 145493.95955747602, cumulative cost = {5.107342913530123E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 145493.95955747602, cumulative cost = {5.092793517574376E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
                        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 8534.480383173515, cumulative cost = {3.598430418029846E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 8534.480383173515, cumulative cost = {3.597576969991529E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#7] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#6] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#7] Calc(select=[x, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :- [#3] Calc(select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[11])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[7])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[9])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[3])
         :        :           :     +- Reused(reference_id=[4])
         :        :           :- Reused(reference_id=[5])
         :        :           :- Reused(reference_id=[6])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[24])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[7])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[10])
         :        :           :                       :- Reused(reference_id=[8])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[x, X1])(reuse_id=[22])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :     :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[hash[X0]])
         :        :           :        +- Reused(reference_id=[9])
         :        :           +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[16])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- Reused(reference_id=[10])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[4])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[12])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[8])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[4])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[13])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[15])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0]])
         :  +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[18])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[8])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[11])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[19])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[20])
         :                 +- Reused(reference_id=[4])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
                  :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[23])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[4])
                  :- Reused(reference_id=[22])
                  :- Reused(reference_id=[4])
                  :- Reused(reference_id=[23])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[24])

Job has been submitted with JobID 0eefa219570c1190286f0851ff4b1964
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...

------------> using sink uuid: c106430e_5480_4630_8bcb_37ee1104d77d

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 28895.290967768946, cumulative cost = {7.511290236056157E8 rows, 2.8077821471381195E10 cpu, 1.0000189068E10 io, 3.563476421460978E9 network, 1.7390298388030863E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 28895.290967768946, cumulative cost = {7.511001283146479E8 rows, 2.807735914672571E10 cpu, 1.0000189068E10 io, 3.563476421460978E9 network, 1.737180540181149E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 28895.290967768946, cumulative cost = {7.510712330236801E8 rows, 2.8072273575515385E10 cpu, 1.0000189068E10 io, 3.5627829344777517E9 network, 1.737180540181149E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 159405.3677522016, cumulative cost = {7.510423377327123E8 rows, 2.8069723089631348E10 cpu, 1.0000189068E10 io, 3.5627829344777517E9 network, 1.7353312415592117E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 156600.54465840707, cumulative cost = {4.831138406429642E8 rows, 1.7958243206458492E10 cpu, 6.461661696E9 io, 2.2771922780099463E9 network, 1.0954387631633863E9 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 4632.668617758766, cumulative cost = {2.0526823933223084E8 rows, 7.6306014182839155E9 cpu, 2.76929994E9 io, 9.672285019282395E8 network, 4.5264191754447496E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 4632.668617758766, cumulative cost = {2.0526360666361308E8 rows, 7.6306014182839155E9 cpu, 2.76929994E9 io, 9.672285019282395E8 network, 4.5264191754447496E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 19766.99363206918, cumulative cost = {1.423244492281868E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19766.99363206918, cumulative cost = {1.423046822345547E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4228378524092263E8 rows, 6.105312264482921E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.381827836107407E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 131214.95754712788, cumulative cost = {1.421525702833755E8 rows, 6.103212825162167E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.297850263277245E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4202135532582837E8 rows, 6.080118992633872E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.297850263277245E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 723867.7259114801, cumulative cost = {1.4189014036828125E8 rows, 6.068537109019288E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.213872690447083E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 434135.9698540041, cumulative cost = {7.953980905368534E7 rows, 3.075755645924015E9 cpu, 1.076951508E9 io, 3.8804849938685584E8 network, 1.625369236107142E8 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 145578.55955747602, cumulative cost = {5.1074726335301235E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 145578.55955747602, cumulative cost = {5.092914777574376E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :           :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 288557.4102965281, cumulative cost = {2.8030946748530105E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 288557.4102965281, cumulative cost = {2.7742389338233575E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 962117.0686435205, cumulative cost = {1.815780992793705E7 rows, 2.3569002502525926E8 cpu, 3.07712964E8 io, 2.3837071183496352E7 network, 3641188.576720077 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 962117.0686435205, cumulative cost = {1.7195692859293528E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.0686435205, cumulative cost = {1.6233575790650006E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 289731.75605747604, cumulative cost = {6.162646358868442E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 289731.75605747604, cumulative cost = {6.133673183262694E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 969946.0403831735, cumulative cost = {5.175097807656946E7 rows, 2.763680923046296E9 cpu, 6.15375948E8 io, 3.6438941077255565E8 network, 1.0498046143399411E8 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 969946.0403831735, cumulative cost = {5.0781032036186285E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 969946.0403831735, cumulative cost = {4.981108599580311E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :           :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 151967.87604064832, cumulative cost = {2.7768900076607496E8 rows, 1.0327485187629917E10 cpu, 3.692361756E9 io, 1.3099637760817068E9 network, 6.427968456189113E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 151967.87604064832, cumulative cost = {2.775370328900343E8 rows, 1.0327485187629917E10 cpu, 3.692361756E9 io, 1.3099637760817068E9 network, 6.427968456189113E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 963181.8695729483, cumulative cost = {7.223416537552741E7 rows, 1.7370816922798169E9 cpu, 1.076958924E9 io, 2.1166586165744773E8 network, 1.1443879393373422E8 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 963181.8695729483, cumulative cost = {7.127098350595446E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 963181.8695729483, cumulative cost = {7.03078016363815E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 49937.304031373824, cumulative cost = {2.0515089963846627E8 rows, 8.582298541961266E9 cpu, 2.615402832E9 io, 1.098297914424259E9 network, 5.255615626594201E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.051009623344349E8 rows, 8.573909074883995E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.255615626594201E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 49937.304031373824, cumulative cost = {2.0505102503040352E8 rows, 8.573110078019493E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.2236557520141214E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.0500108772637215E8 rows, 8.564321112509972E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.2236557520141214E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 275486.90624205436, cumulative cost = {2.0495115042234078E8 rows, 8.559913322010098E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.191695877434042E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 210843.18722152544, cumulative cost = {1.3229827917897491E8 rows, 5.558838022964954E9 cpu, 1.6923351E9 io, 7.137188312634399E8 network, 3.1235517947220016E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 202308.70683835194, cumulative cost = {9.610313181145492E7 rows, 4.092698063270199E9 cpu, 1.230787476E9 io, 5.277855359213882E8 network, 2.1048067444792414E8 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 145493.95955747602, cumulative cost = {5.107342913530123E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 145493.95955747602, cumulative cost = {5.092793517574376E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :                       :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 8534.480383173515, cumulative cost = {3.598430418029846E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 8534.480383173515, cumulative cost = {3.597576969991529E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
         :                       :        :- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :                             :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                             :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :                                +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                                      :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2804.8230937945277, cumulative cost = {2.6776909172199586E8 rows, 1.0111320477805105E10 cpu, 3.538527372E9 io, 1.2855906564678056E9 network, 6.398924783958253E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2804.8230937945277, cumulative cost = {2.6776628689890206E8 rows, 1.0111320477805105E10 cpu, 3.538527372E9 io, 1.2855906564678056E9 network, 6.398924783958253E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.263857795455921E7 rows, 1.5355486186271033E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.1388480238254161E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11118.225020590779, cumulative cost = {6.262745972953862E7 rows, 1.535370727026774E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.131732359812238E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.261634150451803E7 rows, 1.53341391942315E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.131732359812238E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 61335.41794529453, cumulative cost = {6.2605223279497445E7 rows, 1.5324325527360253E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.12461669579906E8 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 56803.004187689134, cumulative cost = {4.4825714625507E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 56803.004187689134, cumulative cost = {4.476891162131931E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 3940.5036688916416, cumulative cost = {8859707.86438451 rows, 2.2367324227663238E7 cpu, 1.53856728E8 io, 732276.6750760621 network, 3384091.130787534 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 3940.5036688916416, cumulative cost = {8855767.360715618 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 3940.5036688916416, cumulative cost = {8851826.857046727 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 4532.413757605399, cumulative cost = {1.771817323604515E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4532.413757605399, cumulative cost = {1.7713640822287545E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 4025.1036688916415, cumulative cost = {8861089.664384509 rows, 2.2659503398878183E7 cpu, 1.53863484E8 io, 741063.075076062 network, 3404403.130787534 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 4025.1036688916415, cumulative cost = {8857064.560715618 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4025.1036688916415, cumulative cost = {8853039.457046727 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 7580.595604706074, cumulative cost = {2.0512490412124905E8 rows, 8.575622268612999E9 cpu, 2.615410032E9 io, 1.097288553422019E9 network, 5.255831626594201E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 7580.595604706074, cumulative cost = {2.0511732352564433E8 rows, 8.574409373316246E9 cpu, 2.615410032E9 io, 1.097106619127506E9 network, 5.255831626594201E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 7580.595604706074, cumulative cost = {2.051097429300396E8 rows, 8.574409373316246E9 cpu, 2.615410032E9 io, 1.097106619127506E9 network, 5.255831626594201E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.051009623344349E8 rows, 8.573909074883995E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.255615626594201E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 49937.304031373824, cumulative cost = {2.0505102503040352E8 rows, 8.573110078019493E9 cpu, 2.615402832E9 io, 1.097099419127506E9 network, 5.2236557520141214E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 49937.304031373824, cumulative cost = {2.0500108772637215E8 rows, 8.564321112509972E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.2236557520141214E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 275486.90624205436, cumulative cost = {2.0495115042234078E8 rows, 8.559913322010098E9 cpu, 2.615402832E9 io, 1.095900923830753E9 network, 5.191695877434042E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 210843.18722152544, cumulative cost = {1.3229827917897491E8 rows, 5.558838022964954E9 cpu, 1.6923351E9 io, 7.137188312634399E8 network, 3.1235517947220016E8 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 202308.70683835194, cumulative cost = {9.610313181145492E7 rows, 4.092698063270199E9 cpu, 1.230787476E9 io, 5.277855359213882E8 network, 2.1048067444792414E8 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 145493.95955747602, cumulative cost = {5.107342913530123E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 145493.95955747602, cumulative cost = {5.092793517574376E7 rows, 2.6044329732670717E9 cpu, 6.15382728E8 io, 3.411195162033595E8 network, 1.0500553903399411E8 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
                        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 8534.480383173515, cumulative cost = {3.598430418029846E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 8534.480383173515, cumulative cost = {3.597576969991529E7 rows, 1.465929116507534E9 cpu, 4.61547624E8 io, 1.8593329534205174E8 network, 1.01874505024276E8 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#7] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#6] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#7] Calc(select=[x, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :- [#3] Calc(select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[11])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[7])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[9])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[3])
         :        :           :     +- Reused(reference_id=[4])
         :        :           :- Reused(reference_id=[5])
         :        :           :- Reused(reference_id=[6])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[24])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[7])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[10])
         :        :           :                       :- Reused(reference_id=[8])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[x, X1])(reuse_id=[22])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :     :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[hash[X0]])
         :        :           :        +- Reused(reference_id=[9])
         :        :           +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[16])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- Reused(reference_id=[10])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[4])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[12])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[8])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[4])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[13])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[15])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0]])
         :  +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[18])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[8])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[11])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[19])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[20])
         :                 +- Reused(reference_id=[4])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
                  :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[23])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[4])
                  :- Reused(reference_id=[22])
                  :- Reused(reference_id=[4])
                  :- Reused(reference_id=[23])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[24])

Job has been submitted with JobID 70af261689e2c096a788285472369ba3
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...

------------> using sink uuid: bb13cdb7_9589_437c_a930_582083b8c74e

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 18490.34171519193, cumulative cost = {4.806422741028849E8 rows, 1.796713893551983E10 cpu, 6.398923116E9 io, 2.2802383063491206E9 network, 1.1129678934647279E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 18490.34171519193, cumulative cost = {4.806237837611697E8 rows, 1.7966843090052387E10 cpu, 6.398923116E9 io, 2.2802383063491206E9 network, 1.1117845115949557E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 18490.34171519193, cumulative cost = {4.8060529341945446E8 rows, 1.7963588789910515E10 cpu, 6.398923116E9 io, 2.279794538147956E9 network, 1.1117845115949557E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 102004.8465427037, cumulative cost = {4.8058680307773924E8 rows, 1.7961956712365833E10 cpu, 6.398923116E9 io, 2.279794538147956E9 network, 1.1106011297251835E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 100207.45802442101, cumulative cost = {3.0914085017074883E8 rows, 1.149154428049545E10 cpu, 4.134689664E9 io, 1.4571541508898597E9 network, 7.010687948995063E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2966.798865134839, cumulative cost = {1.3135013648599558E8 rows, 4.882882155905179E9 cpu, 1.77202326E9 io, 6.18923134509238E8 network, 2.896949192132584E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 2966.798865134839, cumulative cost = {1.3134716968713044E8 rows, 4.882882155905179E9 cpu, 1.77202326E9 io, 6.18923134509238E8 network, 2.896949192132584E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 12664.130373469034, cumulative cost = {9.107223914980967E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 12664.130373469034, cumulative cost = {9.105957501943621E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.104598488906275E7 rows, 3.90679358973234E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1643305817582297E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 83964.53582312689, cumulative cost = {9.096202035323963E7 rows, 3.9054501571591697E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1105932788314286E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.08780558174165E7 rows, 3.8906723988542995E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.1105932788314286E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 463203.42390592233, cumulative cost = {9.079409128159338E7 rows, 3.883261144071805E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.0568559759046274E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 277809.81555339345, cumulative cost = {5.089730975551337E7 rows, 1.9682254884479215E9 cpu, 6.89121396E8 io, 2.4831166988655582E8 network, 1.0403310630603433E8 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 93167.25510252891, cumulative cost = {3.268204719665723E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 93167.25510252891, cumulative cost = {3.25888799415547E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :           :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 184642.56045086452, cumulative cost = {1.793745274330275E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 184642.56045086452, cumulative cost = {1.775281018285189E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615634.6530057634, cumulative cost = {1.1619652372401021E7 rows, 1.5087171368682057E8 cpu, 1.96902108E8 io, 1.525719135920814E7 network, 2343426.221605916 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 615634.6530057634, cumulative cost = {1.1004017719395258E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.6530057634, cumulative cost = {1.0388383066389494E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 185393.6083525289, cumulative cost = {3.9433578102174096E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 185393.6083525289, cumulative cost = {3.924818449382157E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 620641.6390168595, cumulative cost = {3.3114275635469038E7 rows, 1.7684208270878427E9 cpu, 3.93763236E8 io, 2.3316399266375232E8 network, 6.71781412844284E7 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 620641.6390168595, cumulative cost = {3.249363399645218E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 620641.6390168595, cumulative cost = {3.187299235743532E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :           :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 97240.65915928617, cumulative cost = {1.776905062267288E8 rows, 6.608561917132246E9 cpu, 2.362666404E9 io, 8.382310163806217E8 network, 4.1137387568624794E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 97240.65915928617, cumulative cost = {1.7759326556756952E8 rows, 6.608561917132246E9 cpu, 2.362666404E9 io, 8.382310163806217E8 network, 4.1137387568624794E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 616313.4793091145, cumulative cost = {4.622254617638297E7 rows, 1.1115915533671973E9 cpu, 6.89127516E8 io, 1.354451566025936E8 network, 7.32451930374354E7 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 616313.4793091145, cumulative cost = {4.5606232697073855E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 616313.4793091145, cumulative cost = {4.498991921776474E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 31957.581752793307, cumulative cost = {1.3127347873202726E8 rows, 5.491784195276553E9 cpu, 1.673538888E9 io, 7.02785859778028E8 network, 3.363390580706561E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3124152115027447E8 rows, 5.486415321542084E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.363390580706561E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 31957.581752793307, cumulative cost = {1.3120956356852168E8 rows, 5.485904000234039E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.342937728384774E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3117760598676889E8 rows, 5.480279465845548E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.342937728384774E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 176298.97125650564, cumulative cost = {1.311456484050161E8 rows, 5.477458682305444E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.322484876062986E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 134934.737182399, cumulative cost = {8.465653025983298E7 rows, 3.5571161859465637E9 cpu, 1.082890908E9 io, 4.567014133082272E8 network, 1.999053480063527E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 129455.20316553948, cumulative cost = {6.149549206297746E7 rows, 2.618920613858897E9 cpu, 7.87555644E8 io, 3.37724046223577E8 network, 1.3470711462155184E8 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 93097.95510252893, cumulative cost = {3.2680984596657228E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 93097.95510252893, cumulative cost = {3.25878866415547E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :                       :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 5479.534016859524, cumulative cost = {2.3026103459673107E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 5479.534016859524, cumulative cost = {2.3020623925656248E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
         :                       :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :                             :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                             :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :                                +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                                      :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1797.388518282695, cumulative cost = {1.713439480604477E8 rows, 6.470310427023841E9 cpu, 2.264233452E9 io, 8.226403872580962E8 network, 4.0953233482567704E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1797.388518282695, cumulative cost = {1.7134215067192942E8 rows, 6.470310427023841E9 cpu, 2.264233452E9 io, 8.226403872580962E8 network, 4.0953233482567704E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0083245821347915E7 rows, 9.826821381446933E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.290298826829742E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7115.152858965637, cumulative cost = {4.007613066848895E7 rows, 9.825682956989498E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.244761848532362E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0069015515629984E7 rows, 9.813160287957718E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.244761848532362E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 39251.84762325718, cumulative cost = {4.006190036277102E7 rows, 9.806879992337997E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.199224870234983E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 36347.62296013249, cumulative cost = {2.868367641384097E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 36347.62296013249, cumulative cost = {2.8647328790880837E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 2524.8526859025365, cumulative cost = {5669749.814275759 rows, 1.4337513866439002E7 cpu, 9.8451264E7 io, 470500.8942060667 network, 2172180.958636831 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 2524.8526859025365, cumulative cost = {5667224.961589857 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2524.8526859025365, cumulative cost = {5664700.108903955 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 2904.224663124692, cumulative cost = {1.1338972101306796E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2904.224663124692, cumulative cost = {1.133606787664367E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 2594.152685902536, cumulative cost = {5670881.714275759 rows, 1.4544045325114453E7 cpu, 9.8456796E7 io, 477696.0942060667 network, 2188820.958636831 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 2594.152685902536, cumulative cost = {5668287.561589857 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2594.152685902536, cumulative cost = {5665693.408903955 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 4867.437262918996, cumulative cost = {1.3125710746206324E8 rows, 5.487532428158173E9 cpu, 1.673544792E9 io, 7.02141600310271E8 network, 3.363567700706561E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 4867.437262918996, cumulative cost = {1.3125224002480032E8 rows, 5.486753638196106E9 cpu, 1.673544792E9 io, 7.02024781815961E8 network, 3.363567700706561E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4867.437262918996, cumulative cost = {1.312473725875374E8 rows, 5.486753638196106E9 cpu, 1.673544792E9 io, 7.02024781815961E8 network, 3.363567700706561E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3124152115027447E8 rows, 5.486415321542084E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.363390580706561E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 31957.581752793307, cumulative cost = {1.3120956356852168E8 rows, 5.485904000234039E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.342937728384774E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3117760598676889E8 rows, 5.480279465845548E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.342937728384774E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 176298.97125650564, cumulative cost = {1.311456484050161E8 rows, 5.477458682305444E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.322484876062986E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 134934.737182399, cumulative cost = {8.465653025983298E7 rows, 3.5571161859465637E9 cpu, 1.082890908E9 io, 4.567014133082272E8 network, 1.999053480063527E8 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 129455.20316553948, cumulative cost = {6.149549206297746E7 rows, 2.618920613858897E9 cpu, 7.87555644E8 io, 3.37724046223577E8 network, 1.3470711462155184E8 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 93097.95510252893, cumulative cost = {3.2680984596657228E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 93097.95510252893, cumulative cost = {3.25878866415547E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
                        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 5479.534016859524, cumulative cost = {2.3026103459673107E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 5479.534016859524, cumulative cost = {2.3020623925656248E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#7] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#6] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#7] Calc(select=[x, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :- [#3] Calc(select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[11])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[7])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[9])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[3])
         :        :           :     +- Reused(reference_id=[4])
         :        :           :- Reused(reference_id=[5])
         :        :           :- Reused(reference_id=[6])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[24])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[7])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[10])
         :        :           :                       :- Reused(reference_id=[8])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[x, X1])(reuse_id=[22])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :     :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[hash[X0]])
         :        :           :        +- Reused(reference_id=[9])
         :        :           +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[16])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- Reused(reference_id=[10])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[4])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[12])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[8])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[4])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[13])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[15])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0]])
         :  +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[18])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[8])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[11])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[19])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[20])
         :                 +- Reused(reference_id=[4])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
                  :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[23])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[4])
                  :- Reused(reference_id=[22])
                  :- Reused(reference_id=[4])
                  :- Reused(reference_id=[23])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[24])

Job has been submitted with JobID 64bcc275500a0854d9a473183cf2938d
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 75778889_e68d_4ca8_a98c_62b914e84a0f

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 18490.34171519193, cumulative cost = {4.806422741028849E8 rows, 1.796713893551983E10 cpu, 6.398923116E9 io, 2.2802383063491206E9 network, 1.1129678934647279E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 18490.34171519193, cumulative cost = {4.806237837611697E8 rows, 1.7966843090052387E10 cpu, 6.398923116E9 io, 2.2802383063491206E9 network, 1.1117845115949557E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 18490.34171519193, cumulative cost = {4.8060529341945446E8 rows, 1.7963588789910515E10 cpu, 6.398923116E9 io, 2.279794538147956E9 network, 1.1117845115949557E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 102004.8465427037, cumulative cost = {4.8058680307773924E8 rows, 1.7961956712365833E10 cpu, 6.398923116E9 io, 2.279794538147956E9 network, 1.1106011297251835E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 100207.45802442101, cumulative cost = {3.0914085017074883E8 rows, 1.149154428049545E10 cpu, 4.134689664E9 io, 1.4571541508898597E9 network, 7.010687948995063E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2966.798865134839, cumulative cost = {1.3135013648599558E8 rows, 4.882882155905179E9 cpu, 1.77202326E9 io, 6.18923134509238E8 network, 2.896949192132584E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 2966.798865134839, cumulative cost = {1.3134716968713044E8 rows, 4.882882155905179E9 cpu, 1.77202326E9 io, 6.18923134509238E8 network, 2.896949192132584E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 12664.130373469034, cumulative cost = {9.107223914980967E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 12664.130373469034, cumulative cost = {9.105957501943621E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.104598488906275E7 rows, 3.90679358973234E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1643305817582297E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 83964.53582312689, cumulative cost = {9.096202035323963E7 rows, 3.9054501571591697E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1105932788314286E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.08780558174165E7 rows, 3.8906723988542995E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.1105932788314286E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 463203.42390592233, cumulative cost = {9.079409128159338E7 rows, 3.883261144071805E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.0568559759046274E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 277809.81555339345, cumulative cost = {5.089730975551337E7 rows, 1.9682254884479215E9 cpu, 6.89121396E8 io, 2.4831166988655582E8 network, 1.0403310630603433E8 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 93167.25510252891, cumulative cost = {3.268204719665723E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 93167.25510252891, cumulative cost = {3.25888799415547E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :           :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 184642.56045086452, cumulative cost = {1.793745274330275E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 184642.56045086452, cumulative cost = {1.775281018285189E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615634.6530057634, cumulative cost = {1.1619652372401021E7 rows, 1.5087171368682057E8 cpu, 1.96902108E8 io, 1.525719135920814E7 network, 2343426.221605916 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 615634.6530057634, cumulative cost = {1.1004017719395258E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.6530057634, cumulative cost = {1.0388383066389494E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 185393.6083525289, cumulative cost = {3.9433578102174096E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 185393.6083525289, cumulative cost = {3.924818449382157E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 620641.6390168595, cumulative cost = {3.3114275635469038E7 rows, 1.7684208270878427E9 cpu, 3.93763236E8 io, 2.3316399266375232E8 network, 6.71781412844284E7 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 620641.6390168595, cumulative cost = {3.249363399645218E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 620641.6390168595, cumulative cost = {3.187299235743532E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :           :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 97240.65915928617, cumulative cost = {1.776905062267288E8 rows, 6.608561917132246E9 cpu, 2.362666404E9 io, 8.382310163806217E8 network, 4.1137387568624794E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 97240.65915928617, cumulative cost = {1.7759326556756952E8 rows, 6.608561917132246E9 cpu, 2.362666404E9 io, 8.382310163806217E8 network, 4.1137387568624794E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 616313.4793091145, cumulative cost = {4.622254617638297E7 rows, 1.1115915533671973E9 cpu, 6.89127516E8 io, 1.354451566025936E8 network, 7.32451930374354E7 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 616313.4793091145, cumulative cost = {4.5606232697073855E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 616313.4793091145, cumulative cost = {4.498991921776474E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 31957.581752793307, cumulative cost = {1.3127347873202726E8 rows, 5.491784195276553E9 cpu, 1.673538888E9 io, 7.02785859778028E8 network, 3.363390580706561E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3124152115027447E8 rows, 5.486415321542084E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.363390580706561E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 31957.581752793307, cumulative cost = {1.3120956356852168E8 rows, 5.485904000234039E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.342937728384774E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3117760598676889E8 rows, 5.480279465845548E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.342937728384774E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 176298.97125650564, cumulative cost = {1.311456484050161E8 rows, 5.477458682305444E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.322484876062986E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 134934.737182399, cumulative cost = {8.465653025983298E7 rows, 3.5571161859465637E9 cpu, 1.082890908E9 io, 4.567014133082272E8 network, 1.999053480063527E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 129455.20316553948, cumulative cost = {6.149549206297746E7 rows, 2.618920613858897E9 cpu, 7.87555644E8 io, 3.37724046223577E8 network, 1.3470711462155184E8 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 93097.95510252893, cumulative cost = {3.2680984596657228E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 93097.95510252893, cumulative cost = {3.25878866415547E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :                       :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 5479.534016859524, cumulative cost = {2.3026103459673107E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 5479.534016859524, cumulative cost = {2.3020623925656248E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
         :                       :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :                             :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                             :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :                                +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                                      :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1797.388518282695, cumulative cost = {1.713439480604477E8 rows, 6.470310427023841E9 cpu, 2.264233452E9 io, 8.226403872580962E8 network, 4.0953233482567704E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1797.388518282695, cumulative cost = {1.7134215067192942E8 rows, 6.470310427023841E9 cpu, 2.264233452E9 io, 8.226403872580962E8 network, 4.0953233482567704E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0083245821347915E7 rows, 9.826821381446933E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.290298826829742E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7115.152858965637, cumulative cost = {4.007613066848895E7 rows, 9.825682956989498E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.244761848532362E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0069015515629984E7 rows, 9.813160287957718E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.244761848532362E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 39251.84762325718, cumulative cost = {4.006190036277102E7 rows, 9.806879992337997E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.199224870234983E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 36347.62296013249, cumulative cost = {2.868367641384097E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 36347.62296013249, cumulative cost = {2.8647328790880837E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 2524.8526859025365, cumulative cost = {5669749.814275759 rows, 1.4337513866439002E7 cpu, 9.8451264E7 io, 470500.8942060667 network, 2172180.958636831 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 2524.8526859025365, cumulative cost = {5667224.961589857 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2524.8526859025365, cumulative cost = {5664700.108903955 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 2904.224663124692, cumulative cost = {1.1338972101306796E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2904.224663124692, cumulative cost = {1.133606787664367E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 2594.152685902536, cumulative cost = {5670881.714275759 rows, 1.4544045325114453E7 cpu, 9.8456796E7 io, 477696.0942060667 network, 2188820.958636831 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 2594.152685902536, cumulative cost = {5668287.561589857 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2594.152685902536, cumulative cost = {5665693.408903955 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 4867.437262918996, cumulative cost = {1.3125710746206324E8 rows, 5.487532428158173E9 cpu, 1.673544792E9 io, 7.02141600310271E8 network, 3.363567700706561E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 4867.437262918996, cumulative cost = {1.3125224002480032E8 rows, 5.486753638196106E9 cpu, 1.673544792E9 io, 7.02024781815961E8 network, 3.363567700706561E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4867.437262918996, cumulative cost = {1.312473725875374E8 rows, 5.486753638196106E9 cpu, 1.673544792E9 io, 7.02024781815961E8 network, 3.363567700706561E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3124152115027447E8 rows, 5.486415321542084E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.363390580706561E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 31957.581752793307, cumulative cost = {1.3120956356852168E8 rows, 5.485904000234039E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.342937728384774E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3117760598676889E8 rows, 5.480279465845548E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.342937728384774E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 176298.97125650564, cumulative cost = {1.311456484050161E8 rows, 5.477458682305444E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.322484876062986E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 134934.737182399, cumulative cost = {8.465653025983298E7 rows, 3.5571161859465637E9 cpu, 1.082890908E9 io, 4.567014133082272E8 network, 1.999053480063527E8 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 129455.20316553948, cumulative cost = {6.149549206297746E7 rows, 2.618920613858897E9 cpu, 7.87555644E8 io, 3.37724046223577E8 network, 1.3470711462155184E8 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 93097.95510252893, cumulative cost = {3.2680984596657228E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 93097.95510252893, cumulative cost = {3.25878866415547E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
                        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 5479.534016859524, cumulative cost = {2.3026103459673107E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 5479.534016859524, cumulative cost = {2.3020623925656248E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#7] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#6] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#7] Calc(select=[x, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :- [#3] Calc(select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[11])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[7])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[9])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[3])
         :        :           :     +- Reused(reference_id=[4])
         :        :           :- Reused(reference_id=[5])
         :        :           :- Reused(reference_id=[6])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[24])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[7])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[10])
         :        :           :                       :- Reused(reference_id=[8])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[x, X1])(reuse_id=[22])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :     :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[hash[X0]])
         :        :           :        +- Reused(reference_id=[9])
         :        :           +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[16])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- Reused(reference_id=[10])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[4])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[12])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[8])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[4])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[13])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[15])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0]])
         :  +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[18])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[8])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[11])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[19])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[20])
         :                 +- Reused(reference_id=[4])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
                  :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[23])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[4])
                  :- Reused(reference_id=[22])
                  :- Reused(reference_id=[4])
                  :- Reused(reference_id=[23])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[24])

Job has been submitted with JobID 45dc049f322fc61f3015de4506e0d14b
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT s_3.x AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN s AS s_3 ON r_1.x = s_3.y) UNION (SELECT a_0.x AS X0, p31_2.X1 AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 53433ffd_a9ba_4fde_a4ff_cd9481cba3a8

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1
             FROM a AS a_0
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN a AS a_2 ON r_1.y = a_2.x)),
     p42 AS (SELECT r_0.y AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN a AS a_1 ON r_0.x = a_1.x
             UNION
             (SELECT r_1.y AS X0, s_2.x AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_0.x = s_2.y)),
     p21 AS (SELECT s_2.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN r AS r_1 ON a_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x)),
     p31 AS (SELECT r_0.x AS X0, s_2.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT r_0.x AS X0, r_0.y AS X1
              FROM r AS r_0
                       INNER JOIN b AS b_1 ON r_0.y = b_1.x)),

     p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1
             FROM a AS a_0
                      INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0
                      INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1
             UNION
             (SELECT s_3.x AS X0, p31_2.X1 AS X1
              FROM b AS b_0
                       INNER JOIN r AS r_1 ON b_0.x = r_1.y
                       INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                       INNER JOIN s AS s_3 ON r_1.x = s_3.y)
             UNION
             (SELECT a_0.x AS X0, p31_2.X1 AS X1
              FROM a AS a_0
                       INNER JOIN b AS b_1 ON a_0.x = b_1.x
                       INNER JOIN p31 AS p31_2 ON a_0.x = p31_2.X0)
             UNION
             (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1
              FROM p42 AS p42_0
                       INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x
                       INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)),
     p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1
            FROM b AS b_0
                     INNER JOIN r AS r_1 ON b_0.x = r_1.y
                     INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0
                     INNER JOIN b AS b_3 ON r_1.x = b_3.x
            UNION
            (SELECT p21_3.X0 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
                      INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)
            UNION
            (SELECT p31_3.X1 AS X0, r_0.x AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0
                      INNER JOIN b AS b_4 ON r_0.x = b_4.x)),
     p5 AS (SELECT a_0.x AS X0, r_1.y AS X1
            FROM a AS a_0
                     INNER JOIN r AS r_1 ON a_0.x = r_1.x
            UNION
            (SELECT s_0.x AS X0, r_2.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN r AS r_2 ON r_1.y = r_2.x)),
     p14 AS (SELECT s_1.y AS X0, a_0.x AS X1
             FROM a AS a_0
                      INNER JOIN s AS s_1 ON a_0.x = s_1.x
             UNION
             (SELECT s_2.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p15 AS (SELECT b_0.x AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN a AS a_1 ON b_0.x = a_1.x
             UNION
             (SELECT s_0.x AS X0, r_1.y AS X1
              FROM s AS s_0
                       INNER JOIN r AS r_1 ON s_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_1.y = b_2.x)),
     p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0
             UNION
             (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1
              FROM p15 AS p15_0
                       INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                       INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)),
     p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1
            FROM p15 AS p15_0
                     INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x
                     INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1
            UNION
            (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1
             FROM p5 AS p5_0
                      INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x
                      INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)),
     p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1
            FROM p2 AS p2_0
                     INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x
                     INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1
            UNION
            (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1
             FROM p2 AS p2_0
                      INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x
                      INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0)
            UNION
            (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1
             FROM p36 AS p36_0
                      INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x
                      INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  +- LogicalProject(X0=[$5], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  +- LogicalUnion(all=[false])
   :           :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
   :           :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
   :           :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  +- LogicalProject(X0=[$0], X1=[$3])
   :           :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :     +- LogicalUnion(all=[false])
            :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  +- LogicalProject(X0=[$5], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  +- LogicalUnion(all=[false])
            :  :        :     :- LogicalProject(X0=[$0], X1=[$5])
            :  :        :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :  :        :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalProject(X0=[$0], X1=[$1])
            :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  +- LogicalProject(X0=[$0], X1=[$3])
            :     +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 18490.34171519193, cumulative cost = {4.806422741028849E8 rows, 1.796713893551983E10 cpu, 6.398923116E9 io, 2.2802383063491206E9 network, 1.1129678934647279E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 18490.34171519193, cumulative cost = {4.806237837611697E8 rows, 1.7966843090052387E10 cpu, 6.398923116E9 io, 2.2802383063491206E9 network, 1.1117845115949557E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 18490.34171519193, cumulative cost = {4.8060529341945446E8 rows, 1.7963588789910515E10 cpu, 6.398923116E9 io, 2.279794538147956E9 network, 1.1117845115949557E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 102004.8465427037, cumulative cost = {4.8058680307773924E8 rows, 1.7961956712365833E10 cpu, 6.398923116E9 io, 2.279794538147956E9 network, 1.1106011297251835E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 100207.45802442101, cumulative cost = {3.0914085017074883E8 rows, 1.149154428049545E10 cpu, 4.134689664E9 io, 1.4571541508898597E9 network, 7.010687948995063E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2966.798865134839, cumulative cost = {1.3135013648599558E8 rows, 4.882882155905179E9 cpu, 1.77202326E9 io, 6.18923134509238E8 network, 2.896949192132584E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 2966.798865134839, cumulative cost = {1.3134716968713044E8 rows, 4.882882155905179E9 cpu, 1.77202326E9 io, 6.18923134509238E8 network, 2.896949192132584E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 12664.130373469034, cumulative cost = {9.107223914980967E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 12664.130373469034, cumulative cost = {9.105957501943621E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.104598488906275E7 rows, 3.90679358973234E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1643305817582297E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 83964.53582312689, cumulative cost = {9.096202035323963E7 rows, 3.9054501571591697E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1105932788314286E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.08780558174165E7 rows, 3.8906723988542995E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.1105932788314286E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 463203.42390592233, cumulative cost = {9.079409128159338E7 rows, 3.883261144071805E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.0568559759046274E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 277809.81555339345, cumulative cost = {5.089730975551337E7 rows, 1.9682254884479215E9 cpu, 6.89121396E8 io, 2.4831166988655582E8 network, 1.0403310630603433E8 memory}
         :  :           :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 93167.25510252891, cumulative cost = {3.268204719665723E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :           :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 93167.25510252891, cumulative cost = {3.25888799415547E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :           :           :  :     :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :           :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :           :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
         :  :           :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :           :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :           :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :           :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :           :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :           :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :           :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[X0, x AS X1]): rowcount = 184642.56045086452, cumulative cost = {1.793745274330275E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 184642.56045086452, cumulative cost = {1.775281018285189E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615634.6530057634, cumulative cost = {1.1619652372401021E7 rows, 1.5087171368682057E8 cpu, 1.96902108E8 io, 1.525719135920814E7 network, 2343426.221605916 memory}
         :  :           :           :           +- Calc(select=[x, X0]): rowcount = 615634.6530057634, cumulative cost = {1.1004017719395258E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.6530057634, cumulative cost = {1.0388383066389494E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :  :           :           :                    +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :  :           :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :  :           :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :  :           :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :  :           :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 185393.6083525289, cumulative cost = {3.9433578102174096E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 185393.6083525289, cumulative cost = {3.924818449382157E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 620641.6390168595, cumulative cost = {3.3114275635469038E7 rows, 1.7684208270878427E9 cpu, 3.93763236E8 io, 2.3316399266375232E8 network, 6.71781412844284E7 memory}
         :  :           :                 :  +- Calc(select=[x, X1]): rowcount = 620641.6390168595, cumulative cost = {3.249363399645218E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 620641.6390168595, cumulative cost = {3.187299235743532E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :           :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :  :           :                 :           +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :           :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :           :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :           :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :           :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :           :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :                    +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 97240.65915928617, cumulative cost = {1.776905062267288E8 rows, 6.608561917132246E9 cpu, 2.362666404E9 io, 8.382310163806217E8 network, 4.1137387568624794E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 97240.65915928617, cumulative cost = {1.7759326556756952E8 rows, 6.608561917132246E9 cpu, 2.362666404E9 io, 8.382310163806217E8 network, 4.1137387568624794E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 616313.4793091145, cumulative cost = {4.622254617638297E7 rows, 1.1115915533671973E9 cpu, 6.89127516E8 io, 1.354451566025936E8 network, 7.32451930374354E7 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 616313.4793091145, cumulative cost = {4.5606232697073855E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 616313.4793091145, cumulative cost = {4.498991921776474E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 31957.581752793307, cumulative cost = {1.3127347873202726E8 rows, 5.491784195276553E9 cpu, 1.673538888E9 io, 7.02785859778028E8 network, 3.363390580706561E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3124152115027447E8 rows, 5.486415321542084E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.363390580706561E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 31957.581752793307, cumulative cost = {1.3120956356852168E8 rows, 5.485904000234039E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.342937728384774E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3117760598676889E8 rows, 5.480279465845548E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.342937728384774E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 176298.97125650564, cumulative cost = {1.311456484050161E8 rows, 5.477458682305444E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.322484876062986E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 134934.737182399, cumulative cost = {8.465653025983298E7 rows, 3.5571161859465637E9 cpu, 1.082890908E9 io, 4.567014133082272E8 network, 1.999053480063527E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 129455.20316553948, cumulative cost = {6.149549206297746E7 rows, 2.618920613858897E9 cpu, 7.87555644E8 io, 3.37724046223577E8 network, 1.3470711462155184E8 memory}
         :                       :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :                       :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :                       :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :                       :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :                       :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :                       :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 93097.95510252893, cumulative cost = {3.2680984596657228E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
         :                       :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 93097.95510252893, cumulative cost = {3.25878866415547E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
         :                       :  :        :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :                       :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
         :                       :  :        :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :                       :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :                       :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :                       :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :                       :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[x AS X0, X1]): rowcount = 5479.534016859524, cumulative cost = {2.3026103459673107E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 5479.534016859524, cumulative cost = {2.3020623925656248E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
         :                       :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :                             :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                             :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :                                +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                                      :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1797.388518282695, cumulative cost = {1.713439480604477E8 rows, 6.470310427023841E9 cpu, 2.264233452E9 io, 8.226403872580962E8 network, 4.0953233482567704E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1797.388518282695, cumulative cost = {1.7134215067192942E8 rows, 6.470310427023841E9 cpu, 2.264233452E9 io, 8.226403872580962E8 network, 4.0953233482567704E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0083245821347915E7 rows, 9.826821381446933E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.290298826829742E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7115.152858965637, cumulative cost = {4.007613066848895E7 rows, 9.825682956989498E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.244761848532362E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0069015515629984E7 rows, 9.813160287957718E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.244761848532362E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 39251.84762325718, cumulative cost = {4.006190036277102E7 rows, 9.806879992337997E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.199224870234983E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 36347.62296013249, cumulative cost = {2.868367641384097E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 36347.62296013249, cumulative cost = {2.8647328790880837E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 2524.8526859025365, cumulative cost = {5669749.814275759 rows, 1.4337513866439002E7 cpu, 9.8451264E7 io, 470500.8942060667 network, 2172180.958636831 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 2524.8526859025365, cumulative cost = {5667224.961589857 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2524.8526859025365, cumulative cost = {5664700.108903955 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 2904.224663124692, cumulative cost = {1.1338972101306796E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2904.224663124692, cumulative cost = {1.133606787664367E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 2594.152685902536, cumulative cost = {5670881.714275759 rows, 1.4544045325114453E7 cpu, 9.8456796E7 io, 477696.0942060667 network, 2188820.958636831 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 2594.152685902536, cumulative cost = {5668287.561589857 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2594.152685902536, cumulative cost = {5665693.408903955 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 4867.437262918996, cumulative cost = {1.3125710746206324E8 rows, 5.487532428158173E9 cpu, 1.673544792E9 io, 7.02141600310271E8 network, 3.363567700706561E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 4867.437262918996, cumulative cost = {1.3125224002480032E8 rows, 5.486753638196106E9 cpu, 1.673544792E9 io, 7.02024781815961E8 network, 3.363567700706561E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4867.437262918996, cumulative cost = {1.312473725875374E8 rows, 5.486753638196106E9 cpu, 1.673544792E9 io, 7.02024781815961E8 network, 3.363567700706561E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3124152115027447E8 rows, 5.486415321542084E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.363390580706561E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 31957.581752793307, cumulative cost = {1.3120956356852168E8 rows, 5.485904000234039E9 cpu, 1.673538888E9 io, 7.02018877815961E8 network, 3.342937728384774E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31957.581752793307, cumulative cost = {1.3117760598676889E8 rows, 5.480279465845548E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.342937728384774E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 176298.97125650564, cumulative cost = {1.311456484050161E8 rows, 5.477458682305444E9 cpu, 1.673538888E9 io, 7.01251895853894E8 network, 3.322484876062986E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 134934.737182399, cumulative cost = {8.465653025983298E7 rows, 3.5571161859465637E9 cpu, 1.082890908E9 io, 4.567014133082272E8 network, 1.999053480063527E8 memory}
                        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 129455.20316553948, cumulative cost = {6.149549206297746E7 rows, 2.618920613858897E9 cpu, 7.87555644E8 io, 3.37724046223577E8 network, 1.3470711462155184E8 memory}
                        :           :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :           :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :           :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :           :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :           :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
                        :           :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
                        :           :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
                        :           :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
                        :           :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
                        :           :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :  +- Calc(select=[x0 AS X0, X1]): rowcount = 93097.95510252893, cumulative cost = {3.2680984596657228E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
                        :           :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, X1, x0, y], build=[right]): rowcount = 93097.95510252893, cumulative cost = {3.25878866415547E7 rows, 1.6665422074833834E9 cpu, 3.93768792E8 io, 2.1827581252734768E8 network, 6.71986900844284E7 memory}
                        :           :  :        :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
                        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
                        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
                        :           :  :        :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :           :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :           :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :           :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :           :  :        :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :        :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :        :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :  :        :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :        :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :        :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :  :        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[x AS X0, X1]): rowcount = 5479.534016859524, cumulative cost = {2.3026103459673107E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 5479.534016859524, cumulative cost = {2.3020623925656248E7 rows, 9.380606373504839E8 cpu, 2.95335264E8 io, 1.1897736708465016E8 network, 6.5198233384800844E7 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,1,0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#7] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :     :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :     +- [#6] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x0 AS X0, X1])\n:  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, X1, x0, y], build=[right])\n:  :        :- [#7] Calc(select=[x, X1])\n:  :        +- [#8] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:        :- [#3] Calc(select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[6])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[11])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[7])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[9])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[3])
         :        :           :     +- Reused(reference_id=[4])
         :        :           :- Reused(reference_id=[5])
         :        :           :- Reused(reference_id=[6])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[24])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[7])
         :        :           :                 :     +- Reused(reference_id=[5])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[10])
         :        :           :                       :- Reused(reference_id=[8])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[x, X1])(reuse_id=[22])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :     :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :     :  +- Reused(reference_id=[1])
         :        :           :     +- Exchange(distribution=[hash[X0]])
         :        :           :        +- Reused(reference_id=[9])
         :        :           +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])(reuse_id=[16])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- Reused(reference_id=[10])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[11])
         :              :                 +- Reused(reference_id=[4])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[12])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[8])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[11])
         :              :        :           +- Reused(reference_id=[2])
         :              :        +- Reused(reference_id=[4])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- Reused(reference_id=[13])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- Reused(reference_id=[14])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[15])
         :                       +- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[16])
         :- Exchange(distribution=[hash[X0]])
         :  +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[18])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[8])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[11])
         :        :        :                 +- Reused(reference_id=[5])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[19])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[20])
         :                 +- Reused(reference_id=[4])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- [#3] Calc(select=[x, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
                  :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y]])(reuse_id=[23])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[4])
                  :- Reused(reference_id=[22])
                  :- Reused(reference_id=[4])
                  :- Reused(reference_id=[23])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, X0])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                           :  +- Reused(reference_id=[1])
                           +- Reused(reference_id=[24])

Job has been submitted with JobID 3fa01aafff43a7b149c6c8afeb4dc346
