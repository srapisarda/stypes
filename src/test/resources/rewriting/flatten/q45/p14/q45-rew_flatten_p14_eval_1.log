WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: e165b365_9667_4e75_b46d_c383e84cf6ee

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1253.6353934284057, cumulative cost = {3.332164136080103E7 rows, 1.0632053740450734E9 cpu, 4.6211094E8 io, 1.3154302774461834E8 network, 7.874973271196711E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1253.6353934284057, cumulative cost = {3.33203877254076E7 rows, 1.0631853158787786E9 cpu, 4.6211094E8 io, 1.3154302774461834E8 network, 7.86695000467877E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1253.6353934284057, cumulative cost = {3.331913409001417E7 rows, 1.0629646760495352E9 cpu, 4.6211094E8 io, 1.3151294049517606E8 network, 7.86695000467877E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 6915.8746710506175, cumulative cost = {3.331788045462074E7 rows, 1.0628540220547984E9 cpu, 4.6211094E8 io, 1.3151294049517606E8 network, 7.858926738160828E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 6825.902456378203, cumulative cost = {2.431392137227752E7 rows, 7.639679656211064E8 cpu, 3.38881164E8 io, 9.402140448753944E7 network, 5.709362349623616E7 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 573.8076117434233, cumulative cost = {1.1329134625261756E7 rows, 3.4104095903463405E8 cpu, 1.6019892E8 io, 4.1433010847856194E7 network, 2.6776676547668472E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 573.8076117434233, cumulative cost = {1.1328560817650013E7 rows, 3.4104095903463405E8 cpu, 1.6019892E8 io, 4.1433010847856194E7 network, 2.6776676547668472E7 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6140336.366112546 rows, 1.825813614512437E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.317738608469983E7 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 3030.0029866394993, cumulative cost = {6137306.363125906 rows, 1.8253288140345746E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.2983465893554902E7 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6134276.360139267 rows, 1.819996008778089E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2983465893554902E7 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 16715.48284162621, cumulative cost = {6131246.357152627 rows, 1.817321531523429E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2789545702409973E7 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 14463.201937176975, cumulative cost = {4674118.694413118 rows, 1.2304089386839268E8 cpu, 6.77793E7 io, 1.5029954484192796E7 network, 8709903.330613293 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 8349.74930150959, cumulative cost = {2871124.5164022744 rows, 6.350300955078336E7 cpu, 4.3135416E7 io, 7530053.917774137 network, 4504358.9081674535 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 6097.243397060353, cumulative cost = {1422347.6372028817 rows, 4807789.995549531 cpu, 2.4651648E7 io, 83988.97306225884 network, 424418.93637077213 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 5938.363156857459, cumulative cost = {1061286.2285213578 rows, 3908695.391881944 cpu, 1.8487884E7 io, 57219.33462979572 network, 285784.89139763545 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 158.91399020289455, cumulative cost = {354979.40778446366 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 158.91399020289455, cumulative cost = {354820.4937942608 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 8.355, cumulative cost = {157.165 rows, 3354.7000000000003 cpu, 1272.0 io, 433.32 network, 271.59999999999997 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 8.355, cumulative cost = {148.81 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :  :     :           :  :  :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.355, cumulative cost = {140.455 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 5779.449166654565, cumulative cost = {700368.4575800366 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 5779.449166654565, cumulative cost = {694589.008413382 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 38528.66111103043, cumulative cost = {688807.5592467274 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 38528.66111103043, cumulative cost = {650278.898135697 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 158.74074020289456, cumulative cost = {355051.23702466657 rows, 915850.7814219072 cpu, 6163200.0 io, 30384.296197332595 network, 138178.76497313668 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 158.74074020289456, cumulative cost = {354892.4962844637 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :  :     :           :  :  :  :        :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[right]): rowcount = 158.74074020289456, cumulative cost = {354733.7555442608 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 158.88024020289456, cumulative cost = {354964.16528446367 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 158.88024020289456, cumulative cost = {354805.2850442608 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.13, cumulative cost = {141.99 rows, 2998.2000000000003 cpu, 1152.0 io, 391.91999999999996 network, 229.59999999999997 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 8.13, cumulative cost = {133.86 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :           :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.13, cumulative cost = {125.73000000000002 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.505904449236, cumulative cost = {1440427.129897883 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 2252.505904449236, cumulative cost = {1438174.6239934338 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {89.10000000000001 rows, 1770.0 cpu, 732.0 io, 268.79999999999995 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 8.7, cumulative cost = {80.4 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 8.7, cumulative cost = {71.7 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6113.452635667386, cumulative cost = {1788530.9760736665 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6113.452635667386, cumulative cost = {1782417.5234379992 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :  :     :           :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442593.070802332 rows, 5.894051130843656E7 cpu, 1.8483084E7 io, 7499876.56641866 network, 4079440.771796681 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 2251.350904449236, cumulative cost = {1440341.7198978828 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438090.3689934337 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.280904449236, cumulative cost = {1440412.1798978832 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :  :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], build=[right]): rowcount = 2252.280904449236, cumulative cost = {1438159.898993434 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {74.60000000000001 rows, 1520.0 cpu, 612.0 io, 220.79999999999998 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 7.199999999999999, cumulative cost = {67.4 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 7.199999999999999, cumulative cost = {60.2 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 795.3810916499892, cumulative cost = {5187650.643925723 rows, 1.5842899451076403E8 cpu, 7.3935972E7 io, 1.8884319347272176E7 network, 1.3554749121836245E7 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 795.3810916499892, cumulative cost = {5186855.262834073 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 795.3810916499892, cumulative cost = {5186059.881742423 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5185170.500650774 rows, 1.5825179321121204E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.3553057121836245E7 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 5255.5406109999285, cumulative cost = {5179914.960039774 rows, 1.5816770456143603E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.321670252273225E7 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5174659.419428774 rows, 1.5724272941390005E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.321670252273225E7 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 28993.007364679215, cumulative cost = {5169403.878817774 rows, 1.5677884129606518E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.2880347923628256E7 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 17389.84038700467, cumulative cost = {2929085.5652102754 rows, 8.006378941531472E7 cpu, 4.3130352E7 io, 9381737.448108813 network, 6516898.188870337 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 5833.587227674545, cumulative cost = {1788823.6702249886 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 5833.587227674545, cumulative cost = {1782990.0829973142 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :              :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 11556.253159330126, cumulative cost = {1122872.054598282 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 11556.253159330126, cumulative cost = {1111315.8014389519 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38529.787728867515, cumulative cost = {727430.8482796218 rows, 9455796.595825966 cpu, 1.2324192E7 io, 955893.1862369755 network, 149706.05411241902 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 38529.787728867515, cumulative cost = {688901.0605507543 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.787728867515, cumulative cost = {650371.2728218868 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 11603.166977674546, cumulative cost = {2211325.30624282 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 11603.166977674546, cumulative cost = {2199722.139265145 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 38842.5465178303, cumulative cost = {1815790.2722874705 rows, 6.753573610124314E7 cpu, 2.4643716E7 io, 8431946.178299764 network, 4205091.3347579185 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 38842.5465178303, cumulative cost = {1776947.7257696402 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38842.5465178303, cumulative cost = {1738105.1792518098 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :              :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 6252.09484463478, cumulative cost = {1.2977960844559385E7 rows, 4.2292018068401587E8 cpu, 1.78682244E8 io, 5.2588393639683254E7 network, 3.031694694856769E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], isBroadcast=[true], build=[right]): rowcount = 6252.09484463478, cumulative cost = {1.2971708749714749E7 rows, 4.2292018068401587E8 cpu, 1.78682244E8 io, 5.2588393639683254E7 network, 3.031694694856769E7 memory}
         :        :- Calc(select=[x, X1]): rowcount = 38650.6293109257, cumulative cost = {6822090.2857709285 rows, 2.3952057369652933E8 cpu, 9.2419296E7 io, 2.9966982067419887E7 network, 1.696988069661605E7 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38650.6293109257, cumulative cost = {6783439.656460003 rows, 2.3952057369652933E8 cpu, 9.2419296E7 io, 2.9966982067419887E7 network, 1.696988069661605E7 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 971.8620728380032, cumulative cost = {6488090.0271490775 rows, 2.3745920679994664E8 cpu, 8.625852E7 io, 2.9966982067419887E7 network, 1.691545642053712E7 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6487118.16507624 rows, 2.3730370886829257E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.691545642053712E7 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 971.8620728380032, cumulative cost = {6486146.303003402 rows, 2.3728815907512715E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.685325724787549E7 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6485174.440930565 rows, 2.3711711135030767E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.685325724787549E7 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 5361.428313629488, cumulative cost = {6484202.578857727 rows, 2.370313284972896E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.6791058075213857E7 memory}
         :        :                    :- Union(all=[true], union=[X0, X1]): rowcount = 2772.5308913499503, cumulative cost = {3595266.7048765747 rows, 1.1938434057679603E8 cpu, 4.9292544E7 io, 1.4974811481339948E7 network, 8506581.968659256 memory}
         :        :                    :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :        :                    :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :        :                    :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                    :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                    :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                    :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                    :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                    :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                    :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                    :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                    :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                    :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :        :                    :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :        :                    :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :        :                    :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :        :                    :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :        :                    :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :        :                    :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :        :                    :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :        :                    :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :        :                    :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                    :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                    :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  +- Calc(select=[X00 AS X0, X1]): rowcount = 496.3922580331963, cumulative cost = {1796966.3935365875 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
         :        :                    :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 496.3922580331963, cumulative cost = {1796470.0012785543 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
         :        :                    :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :                    :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :                    :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :                    :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :                    :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :                    :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :                    :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                    :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                    :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                    :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                    :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :        +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
         :        :                    :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :        :                    :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :        :                    :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :        :                    :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :        :                    :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :                       :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :                       :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :                             +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :        :                             +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :                                   :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                                   :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                                   :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                                   :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                                   :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                                   :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 3030.0029866394993, cumulative cost = {6143366.369099186 rows, 1.8306616192910603E8 cpu, 8.6262948E7 io, 2.2621411572263367E7 network, 1.317738608469983E7 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6140336.366112546 rows, 1.825813614512437E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.317738608469983E7 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 3030.0029866394993, cumulative cost = {6137306.363125906 rows, 1.8253288140345746E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.2983465893554902E7 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6134276.360139267 rows, 1.819996008778089E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2983465893554902E7 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 16715.48284162621, cumulative cost = {6131246.357152627 rows, 1.817321531523429E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2789545702409973E7 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 14463.201937176975, cumulative cost = {4674118.694413118 rows, 1.2304089386839268E8 cpu, 6.77793E7 io, 1.5029954484192796E7 network, 8709903.330613293 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 8349.74930150959, cumulative cost = {2871124.5164022744 rows, 6.350300955078336E7 cpu, 4.3135416E7 io, 7530053.917774137 network, 4504358.9081674535 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 6097.243397060353, cumulative cost = {1422347.6372028817 rows, 4807789.995549531 cpu, 2.4651648E7 io, 83988.97306225884 network, 424418.93637077213 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 5938.363156857459, cumulative cost = {1061286.2285213578 rows, 3908695.391881944 cpu, 1.8487884E7 io, 57219.33462979572 network, 285784.89139763545 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 158.91399020289455, cumulative cost = {354979.40778446366 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 158.91399020289455, cumulative cost = {354820.4937942608 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 8.355, cumulative cost = {157.165 rows, 3354.7000000000003 cpu, 1272.0 io, 433.32 network, 271.59999999999997 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 8.355, cumulative cost = {148.81 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :                       :  :  :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.355, cumulative cost = {140.455 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 5779.449166654565, cumulative cost = {700368.4575800366 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 5779.449166654565, cumulative cost = {694589.008413382 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 38528.66111103043, cumulative cost = {688807.5592467274 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 38528.66111103043, cumulative cost = {650278.898135697 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 158.74074020289456, cumulative cost = {355051.23702466657 rows, 915850.7814219072 cpu, 6163200.0 io, 30384.296197332595 network, 138178.76497313668 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 158.74074020289456, cumulative cost = {354892.4962844637 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :                       :  :  :  :        :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[right]): rowcount = 158.74074020289456, cumulative cost = {354733.7555442608 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 158.88024020289456, cumulative cost = {354964.16528446367 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 158.88024020289456, cumulative cost = {354805.2850442608 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.13, cumulative cost = {141.99 rows, 2998.2000000000003 cpu, 1152.0 io, 391.91999999999996 network, 229.59999999999997 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 8.13, cumulative cost = {133.86 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :                       :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.13, cumulative cost = {125.73000000000002 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.505904449236, cumulative cost = {1440427.129897883 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 2252.505904449236, cumulative cost = {1438174.6239934338 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {89.10000000000001 rows, 1770.0 cpu, 732.0 io, 268.79999999999995 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 8.7, cumulative cost = {80.4 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 8.7, cumulative cost = {71.7 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6113.452635667386, cumulative cost = {1788530.9760736665 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6113.452635667386, cumulative cost = {1782417.5234379992 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :                       :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442593.070802332 rows, 5.894051130843656E7 cpu, 1.8483084E7 io, 7499876.56641866 network, 4079440.771796681 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 2251.350904449236, cumulative cost = {1440341.7198978828 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438090.3689934337 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.280904449236, cumulative cost = {1440412.1798978832 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], build=[right]): rowcount = 2252.280904449236, cumulative cost = {1438159.898993434 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {74.60000000000001 rows, 1520.0 cpu, 612.0 io, 220.79999999999998 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 7.199999999999999, cumulative cost = {67.4 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 7.199999999999999, cumulative cost = {60.2 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 89.97221467241458, cumulative cost = {8997043.207672173 rows, 2.9887914055902094E8 cpu, 1.23229776E8 io, 3.749153600763662E7 network, 2.1495643885372117E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 89.97221467241458, cumulative cost = {8996953.2354575 rows, 2.9887914055902094E8 cpu, 1.23229776E8 io, 3.749153600763662E7 network, 2.1495643885372117E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2509168.110233811 rows, 6.152858958628172E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4569493.023423157 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.48545355706335, cumulative cost = {2508722.624780254 rows, 6.15214618190248E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4540981.954395505 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2508277.1393266967 rows, 6.144305637919876E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4540981.954395505 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 2457.589806994182, cumulative cost = {2507831.6538731395 rows, 6.140373494228686E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4512470.885367853 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 2275.047485620262, cumulative cost = {1795387.4888397823 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2275.047485620262, cumulative cost = {1793112.441354162 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 158.97720780683773, cumulative cost = {355004.37577955716 rows, 903731.127293892 cpu, 6162192.0 io, 29959.80623645814 network, 137640.55066183486 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 158.97720780683773, cumulative cost = {354845.3985717503 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 158.97720780683773, cumulative cost = {354686.4213639435 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 182.5423213739202, cumulative cost = {709986.575226363 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.5423213739202, cumulative cost = {709804.0329049891 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 165.87720780683773, cumulative cost = {355117.0757795572 rows, 919983.063658211 cpu, 6162732.0 io, 30665.40623645814 network, 139304.55066183486 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 165.87720780683773, cumulative cost = {354951.19857175037 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.87720780683773, cumulative cost = {354785.3213639435 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 154.3293109257005, cumulative cost = {6487695.153009017 rows, 2.3734575245462337E8 cpu, 8.6259204E7 io, 2.994804528113399E7 network, 1.691750842053712E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 154.3293109257005, cumulative cost = {6487540.823698091 rows, 2.3732105976487526E8 cpu, 8.6259204E7 io, 2.9944341377671774E7 network, 1.691750842053712E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 154.3293109257005, cumulative cost = {6487386.494387166 rows, 2.3732105976487526E8 cpu, 8.6259204E7 io, 2.9944341377671774E7 network, 1.691750842053712E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6487118.16507624 rows, 2.3730370886829257E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.691545642053712E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 971.8620728380032, cumulative cost = {6486146.303003402 rows, 2.3728815907512715E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.685325724787549E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6485174.440930565 rows, 2.3711711135030767E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.685325724787549E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 5361.428313629488, cumulative cost = {6484202.578857727 rows, 2.370313284972896E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.6791058075213857E7 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 2772.5308913499503, cumulative cost = {3595266.7048765747 rows, 1.1938434057679603E8 cpu, 4.9292544E7 io, 1.4974811481339948E7 network, 8506581.968659256 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 496.3922580331963, cumulative cost = {1796966.3935365875 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 496.3922580331963, cumulative cost = {1796470.0012785543 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], isBroadcast=[true], build=[right])\n:        :- Calc(select=[x, X1])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#7] Exchange(distribution=[broadcast])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[1,0,1,0,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[1])\n:  :     :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:        :- [#3] Calc(select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n      :- Reused(reference_id=[1])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[21])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[3])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[13])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[23])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[3])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])(reuse_id=[8])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[6])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[24])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[7])
         :        :           :     +- Reused(reference_id=[6])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[x0 AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[18])
         :        :           :              :     :- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :              :     :     :- Reused(reference_id=[1])
         :        :           :              :     :     +- Reused(reference_id=[2])
         :        :           :              :     +- Reused(reference_id=[6])
         :        :           :              +- Reused(reference_id=[8])
         :        :           +- Exchange(distribution=[hash[X0, X1]])
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Union(all=[true], union=[X0, X1])
         :        :                    :- Calc(select=[y AS X0, x AS X1])
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[10])
         :        :                    :     :- Reused(reference_id=[1])
         :        :                    :     +- Reused(reference_id=[4])
         :        :                    +- Calc(select=[y AS X0, x0 AS X1])
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[11])
         :        :                          :- Exchange(distribution=[hash[x]])
         :        :                          :  +- Reused(reference_id=[1])
         :        :                          +- Exchange(distribution=[hash[y]])
         :        :                             +- Reused(reference_id=[9])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right])\n:        :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[10])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[11])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[12])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[15])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[16])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[13])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[3])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[14])
         :           :        +- Reused(reference_id=[15])
         :           :- Reused(reference_id=[14])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[5])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[16])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :           :           :  +- Reused(reference_id=[17])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[18])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[12])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[12])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[19])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[12])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[5])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[right])
         :                    :- Reused(reference_id=[19])
         :                    +- Reused(reference_id=[20])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[6])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[broadcast])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[21])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[22])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[6])
         :                 :- Reused(reference_id=[6])
         :                 :- Reused(reference_id=[22])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Reused(reference_id=[24])
         :- Exchange(distribution=[broadcast])
         :  +- Reused(reference_id=[25])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[14])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[26])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[5])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[9])
         :        :        :                 +- Reused(reference_id=[4])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[19])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[26])
         :                 +- Reused(reference_id=[6])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[27])

Job has been submitted with JobID 019167091f28e3163f9fc1774d476255
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: c3ee56fd_95bc_4705_8a33_441437820c7c

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1253.6353934284057, cumulative cost = {3.332164136080103E7 rows, 1.0632053740450734E9 cpu, 4.6211094E8 io, 1.3154302774461834E8 network, 7.874973271196711E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1253.6353934284057, cumulative cost = {3.33203877254076E7 rows, 1.0631853158787786E9 cpu, 4.6211094E8 io, 1.3154302774461834E8 network, 7.86695000467877E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1253.6353934284057, cumulative cost = {3.331913409001417E7 rows, 1.0629646760495352E9 cpu, 4.6211094E8 io, 1.3151294049517606E8 network, 7.86695000467877E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 6915.8746710506175, cumulative cost = {3.331788045462074E7 rows, 1.0628540220547984E9 cpu, 4.6211094E8 io, 1.3151294049517606E8 network, 7.858926738160828E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 6825.902456378203, cumulative cost = {2.431392137227752E7 rows, 7.639679656211064E8 cpu, 3.38881164E8 io, 9.402140448753944E7 network, 5.709362349623616E7 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 573.8076117434233, cumulative cost = {1.1329134625261756E7 rows, 3.4104095903463405E8 cpu, 1.6019892E8 io, 4.1433010847856194E7 network, 2.6776676547668472E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 573.8076117434233, cumulative cost = {1.1328560817650013E7 rows, 3.4104095903463405E8 cpu, 1.6019892E8 io, 4.1433010847856194E7 network, 2.6776676547668472E7 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6140336.366112546 rows, 1.825813614512437E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.317738608469983E7 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 3030.0029866394993, cumulative cost = {6137306.363125906 rows, 1.8253288140345746E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.2983465893554902E7 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6134276.360139267 rows, 1.819996008778089E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2983465893554902E7 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 16715.48284162621, cumulative cost = {6131246.357152627 rows, 1.817321531523429E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2789545702409973E7 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 14463.201937176975, cumulative cost = {4674118.694413118 rows, 1.2304089386839268E8 cpu, 6.77793E7 io, 1.5029954484192796E7 network, 8709903.330613293 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 8349.74930150959, cumulative cost = {2871124.5164022744 rows, 6.350300955078336E7 cpu, 4.3135416E7 io, 7530053.917774137 network, 4504358.9081674535 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 6097.243397060353, cumulative cost = {1422347.6372028817 rows, 4807789.995549531 cpu, 2.4651648E7 io, 83988.97306225884 network, 424418.93637077213 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 5938.363156857459, cumulative cost = {1061286.2285213578 rows, 3908695.391881944 cpu, 1.8487884E7 io, 57219.33462979572 network, 285784.89139763545 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 158.91399020289455, cumulative cost = {354979.40778446366 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 158.91399020289455, cumulative cost = {354820.4937942608 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 8.355, cumulative cost = {157.165 rows, 3354.7000000000003 cpu, 1272.0 io, 433.32 network, 271.59999999999997 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 8.355, cumulative cost = {148.81 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :  :     :           :  :  :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.355, cumulative cost = {140.455 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 5779.449166654565, cumulative cost = {700368.4575800366 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 5779.449166654565, cumulative cost = {694589.008413382 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 38528.66111103043, cumulative cost = {688807.5592467274 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 38528.66111103043, cumulative cost = {650278.898135697 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 158.74074020289456, cumulative cost = {355051.23702466657 rows, 915850.7814219072 cpu, 6163200.0 io, 30384.296197332595 network, 138178.76497313668 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 158.74074020289456, cumulative cost = {354892.4962844637 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :  :     :           :  :  :  :        :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[right]): rowcount = 158.74074020289456, cumulative cost = {354733.7555442608 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 158.88024020289456, cumulative cost = {354964.16528446367 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 158.88024020289456, cumulative cost = {354805.2850442608 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.13, cumulative cost = {141.99 rows, 2998.2000000000003 cpu, 1152.0 io, 391.91999999999996 network, 229.59999999999997 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 8.13, cumulative cost = {133.86 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :           :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.13, cumulative cost = {125.73000000000002 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.505904449236, cumulative cost = {1440427.129897883 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 2252.505904449236, cumulative cost = {1438174.6239934338 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {89.10000000000001 rows, 1770.0 cpu, 732.0 io, 268.79999999999995 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 8.7, cumulative cost = {80.4 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 8.7, cumulative cost = {71.7 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6113.452635667386, cumulative cost = {1788530.9760736665 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6113.452635667386, cumulative cost = {1782417.5234379992 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :  :     :           :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442593.070802332 rows, 5.894051130843656E7 cpu, 1.8483084E7 io, 7499876.56641866 network, 4079440.771796681 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 2251.350904449236, cumulative cost = {1440341.7198978828 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438090.3689934337 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.280904449236, cumulative cost = {1440412.1798978832 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :  :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], build=[right]): rowcount = 2252.280904449236, cumulative cost = {1438159.898993434 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {74.60000000000001 rows, 1520.0 cpu, 612.0 io, 220.79999999999998 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 7.199999999999999, cumulative cost = {67.4 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 7.199999999999999, cumulative cost = {60.2 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 795.3810916499892, cumulative cost = {5187650.643925723 rows, 1.5842899451076403E8 cpu, 7.3935972E7 io, 1.8884319347272176E7 network, 1.3554749121836245E7 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 795.3810916499892, cumulative cost = {5186855.262834073 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 795.3810916499892, cumulative cost = {5186059.881742423 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5185170.500650774 rows, 1.5825179321121204E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.3553057121836245E7 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 5255.5406109999285, cumulative cost = {5179914.960039774 rows, 1.5816770456143603E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.321670252273225E7 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5174659.419428774 rows, 1.5724272941390005E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.321670252273225E7 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 28993.007364679215, cumulative cost = {5169403.878817774 rows, 1.5677884129606518E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.2880347923628256E7 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 17389.84038700467, cumulative cost = {2929085.5652102754 rows, 8.006378941531472E7 cpu, 4.3130352E7 io, 9381737.448108813 network, 6516898.188870337 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 5833.587227674545, cumulative cost = {1788823.6702249886 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 5833.587227674545, cumulative cost = {1782990.0829973142 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :              :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 11556.253159330126, cumulative cost = {1122872.054598282 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 11556.253159330126, cumulative cost = {1111315.8014389519 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38529.787728867515, cumulative cost = {727430.8482796218 rows, 9455796.595825966 cpu, 1.2324192E7 io, 955893.1862369755 network, 149706.05411241902 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 38529.787728867515, cumulative cost = {688901.0605507543 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.787728867515, cumulative cost = {650371.2728218868 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 11603.166977674546, cumulative cost = {2211325.30624282 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 11603.166977674546, cumulative cost = {2199722.139265145 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 38842.5465178303, cumulative cost = {1815790.2722874705 rows, 6.753573610124314E7 cpu, 2.4643716E7 io, 8431946.178299764 network, 4205091.3347579185 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 38842.5465178303, cumulative cost = {1776947.7257696402 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38842.5465178303, cumulative cost = {1738105.1792518098 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :              :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 6252.09484463478, cumulative cost = {1.2977960844559385E7 rows, 4.2292018068401587E8 cpu, 1.78682244E8 io, 5.2588393639683254E7 network, 3.031694694856769E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], isBroadcast=[true], build=[right]): rowcount = 6252.09484463478, cumulative cost = {1.2971708749714749E7 rows, 4.2292018068401587E8 cpu, 1.78682244E8 io, 5.2588393639683254E7 network, 3.031694694856769E7 memory}
         :        :- Calc(select=[x, X1]): rowcount = 38650.6293109257, cumulative cost = {6822090.2857709285 rows, 2.3952057369652933E8 cpu, 9.2419296E7 io, 2.9966982067419887E7 network, 1.696988069661605E7 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38650.6293109257, cumulative cost = {6783439.656460003 rows, 2.3952057369652933E8 cpu, 9.2419296E7 io, 2.9966982067419887E7 network, 1.696988069661605E7 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 971.8620728380032, cumulative cost = {6488090.0271490775 rows, 2.3745920679994664E8 cpu, 8.625852E7 io, 2.9966982067419887E7 network, 1.691545642053712E7 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6487118.16507624 rows, 2.3730370886829257E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.691545642053712E7 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 971.8620728380032, cumulative cost = {6486146.303003402 rows, 2.3728815907512715E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.685325724787549E7 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6485174.440930565 rows, 2.3711711135030767E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.685325724787549E7 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 5361.428313629488, cumulative cost = {6484202.578857727 rows, 2.370313284972896E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.6791058075213857E7 memory}
         :        :                    :- Union(all=[true], union=[X0, X1]): rowcount = 2772.5308913499503, cumulative cost = {3595266.7048765747 rows, 1.1938434057679603E8 cpu, 4.9292544E7 io, 1.4974811481339948E7 network, 8506581.968659256 memory}
         :        :                    :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :        :                    :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :        :                    :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                    :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                    :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                    :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                    :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                    :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                    :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                    :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                    :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                    :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :        :                    :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :        :                    :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :        :                    :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :        :                    :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :        :                    :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :        :                    :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :        :                    :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :        :                    :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :        :                    :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                    :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                    :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  +- Calc(select=[X00 AS X0, X1]): rowcount = 496.3922580331963, cumulative cost = {1796966.3935365875 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
         :        :                    :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 496.3922580331963, cumulative cost = {1796470.0012785543 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
         :        :                    :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :                    :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :                    :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :                    :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :                    :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :                    :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :                    :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                    :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                    :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                    :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                    :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :        +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
         :        :                    :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :        :                    :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :        :                    :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :        :                    :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :        :                    :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :                       :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :                       :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :                             +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :        :                             +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :                                   :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                                   :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                                   :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                                   :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                                   :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                                   :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 3030.0029866394993, cumulative cost = {6143366.369099186 rows, 1.8306616192910603E8 cpu, 8.6262948E7 io, 2.2621411572263367E7 network, 1.317738608469983E7 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6140336.366112546 rows, 1.825813614512437E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.317738608469983E7 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 3030.0029866394993, cumulative cost = {6137306.363125906 rows, 1.8253288140345746E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.2983465893554902E7 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6134276.360139267 rows, 1.819996008778089E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2983465893554902E7 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 16715.48284162621, cumulative cost = {6131246.357152627 rows, 1.817321531523429E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2789545702409973E7 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 14463.201937176975, cumulative cost = {4674118.694413118 rows, 1.2304089386839268E8 cpu, 6.77793E7 io, 1.5029954484192796E7 network, 8709903.330613293 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 8349.74930150959, cumulative cost = {2871124.5164022744 rows, 6.350300955078336E7 cpu, 4.3135416E7 io, 7530053.917774137 network, 4504358.9081674535 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 6097.243397060353, cumulative cost = {1422347.6372028817 rows, 4807789.995549531 cpu, 2.4651648E7 io, 83988.97306225884 network, 424418.93637077213 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 5938.363156857459, cumulative cost = {1061286.2285213578 rows, 3908695.391881944 cpu, 1.8487884E7 io, 57219.33462979572 network, 285784.89139763545 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 158.91399020289455, cumulative cost = {354979.40778446366 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 158.91399020289455, cumulative cost = {354820.4937942608 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 8.355, cumulative cost = {157.165 rows, 3354.7000000000003 cpu, 1272.0 io, 433.32 network, 271.59999999999997 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 8.355, cumulative cost = {148.81 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :                       :  :  :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.355, cumulative cost = {140.455 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 5779.449166654565, cumulative cost = {700368.4575800366 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 5779.449166654565, cumulative cost = {694589.008413382 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 38528.66111103043, cumulative cost = {688807.5592467274 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 38528.66111103043, cumulative cost = {650278.898135697 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 158.74074020289456, cumulative cost = {355051.23702466657 rows, 915850.7814219072 cpu, 6163200.0 io, 30384.296197332595 network, 138178.76497313668 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 158.74074020289456, cumulative cost = {354892.4962844637 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :                       :  :  :  :        :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[right]): rowcount = 158.74074020289456, cumulative cost = {354733.7555442608 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 158.88024020289456, cumulative cost = {354964.16528446367 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 158.88024020289456, cumulative cost = {354805.2850442608 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.13, cumulative cost = {141.99 rows, 2998.2000000000003 cpu, 1152.0 io, 391.91999999999996 network, 229.59999999999997 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 8.13, cumulative cost = {133.86 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :                       :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.13, cumulative cost = {125.73000000000002 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.505904449236, cumulative cost = {1440427.129897883 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 2252.505904449236, cumulative cost = {1438174.6239934338 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {89.10000000000001 rows, 1770.0 cpu, 732.0 io, 268.79999999999995 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 8.7, cumulative cost = {80.4 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 8.7, cumulative cost = {71.7 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6113.452635667386, cumulative cost = {1788530.9760736665 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6113.452635667386, cumulative cost = {1782417.5234379992 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :                       :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442593.070802332 rows, 5.894051130843656E7 cpu, 1.8483084E7 io, 7499876.56641866 network, 4079440.771796681 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 2251.350904449236, cumulative cost = {1440341.7198978828 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438090.3689934337 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.280904449236, cumulative cost = {1440412.1798978832 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], build=[right]): rowcount = 2252.280904449236, cumulative cost = {1438159.898993434 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {74.60000000000001 rows, 1520.0 cpu, 612.0 io, 220.79999999999998 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 7.199999999999999, cumulative cost = {67.4 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 7.199999999999999, cumulative cost = {60.2 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 89.97221467241458, cumulative cost = {8997043.207672173 rows, 2.9887914055902094E8 cpu, 1.23229776E8 io, 3.749153600763662E7 network, 2.1495643885372117E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 89.97221467241458, cumulative cost = {8996953.2354575 rows, 2.9887914055902094E8 cpu, 1.23229776E8 io, 3.749153600763662E7 network, 2.1495643885372117E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2509168.110233811 rows, 6.152858958628172E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4569493.023423157 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.48545355706335, cumulative cost = {2508722.624780254 rows, 6.15214618190248E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4540981.954395505 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2508277.1393266967 rows, 6.144305637919876E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4540981.954395505 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 2457.589806994182, cumulative cost = {2507831.6538731395 rows, 6.140373494228686E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4512470.885367853 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 2275.047485620262, cumulative cost = {1795387.4888397823 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2275.047485620262, cumulative cost = {1793112.441354162 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 158.97720780683773, cumulative cost = {355004.37577955716 rows, 903731.127293892 cpu, 6162192.0 io, 29959.80623645814 network, 137640.55066183486 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 158.97720780683773, cumulative cost = {354845.3985717503 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 158.97720780683773, cumulative cost = {354686.4213639435 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 182.5423213739202, cumulative cost = {709986.575226363 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.5423213739202, cumulative cost = {709804.0329049891 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 165.87720780683773, cumulative cost = {355117.0757795572 rows, 919983.063658211 cpu, 6162732.0 io, 30665.40623645814 network, 139304.55066183486 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 165.87720780683773, cumulative cost = {354951.19857175037 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.87720780683773, cumulative cost = {354785.3213639435 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 154.3293109257005, cumulative cost = {6487695.153009017 rows, 2.3734575245462337E8 cpu, 8.6259204E7 io, 2.994804528113399E7 network, 1.691750842053712E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 154.3293109257005, cumulative cost = {6487540.823698091 rows, 2.3732105976487526E8 cpu, 8.6259204E7 io, 2.9944341377671774E7 network, 1.691750842053712E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 154.3293109257005, cumulative cost = {6487386.494387166 rows, 2.3732105976487526E8 cpu, 8.6259204E7 io, 2.9944341377671774E7 network, 1.691750842053712E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6487118.16507624 rows, 2.3730370886829257E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.691545642053712E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 971.8620728380032, cumulative cost = {6486146.303003402 rows, 2.3728815907512715E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.685325724787549E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6485174.440930565 rows, 2.3711711135030767E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.685325724787549E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 5361.428313629488, cumulative cost = {6484202.578857727 rows, 2.370313284972896E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.6791058075213857E7 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 2772.5308913499503, cumulative cost = {3595266.7048765747 rows, 1.1938434057679603E8 cpu, 4.9292544E7 io, 1.4974811481339948E7 network, 8506581.968659256 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 496.3922580331963, cumulative cost = {1796966.3935365875 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 496.3922580331963, cumulative cost = {1796470.0012785543 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], isBroadcast=[true], build=[right])\n:        :- Calc(select=[x, X1])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#7] Exchange(distribution=[broadcast])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[1,0,1,0,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[1])\n:  :     :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:        :- [#3] Calc(select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n      :- Reused(reference_id=[1])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[21])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[3])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[13])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[23])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[3])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])(reuse_id=[8])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[6])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[24])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[7])
         :        :           :     +- Reused(reference_id=[6])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[x0 AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[18])
         :        :           :              :     :- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :              :     :     :- Reused(reference_id=[1])
         :        :           :              :     :     +- Reused(reference_id=[2])
         :        :           :              :     +- Reused(reference_id=[6])
         :        :           :              +- Reused(reference_id=[8])
         :        :           +- Exchange(distribution=[hash[X0, X1]])
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Union(all=[true], union=[X0, X1])
         :        :                    :- Calc(select=[y AS X0, x AS X1])
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[10])
         :        :                    :     :- Reused(reference_id=[1])
         :        :                    :     +- Reused(reference_id=[4])
         :        :                    +- Calc(select=[y AS X0, x0 AS X1])
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[11])
         :        :                          :- Exchange(distribution=[hash[x]])
         :        :                          :  +- Reused(reference_id=[1])
         :        :                          +- Exchange(distribution=[hash[y]])
         :        :                             +- Reused(reference_id=[9])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right])\n:        :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[10])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[11])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[12])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[15])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[16])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[13])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[3])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[14])
         :           :        +- Reused(reference_id=[15])
         :           :- Reused(reference_id=[14])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[5])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[16])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :           :           :  +- Reused(reference_id=[17])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[18])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[12])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[12])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[19])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[12])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[5])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[right])
         :                    :- Reused(reference_id=[19])
         :                    +- Reused(reference_id=[20])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[6])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[broadcast])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[21])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[22])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[6])
         :                 :- Reused(reference_id=[6])
         :                 :- Reused(reference_id=[22])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Reused(reference_id=[24])
         :- Exchange(distribution=[broadcast])
         :  +- Reused(reference_id=[25])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[14])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[26])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[5])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[9])
         :        :        :                 +- Reused(reference_id=[4])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[19])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[26])
         :                 +- Reused(reference_id=[6])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[27])

Job has been submitted with JobID 5422ec7b5f2a642f27f98161931e12ac
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 3d0db7d8_534d_46da_9caa_a7c7f74bc528

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1253.6353934284057, cumulative cost = {3.332164136080103E7 rows, 1.0632053740450734E9 cpu, 4.6211094E8 io, 1.3154302774461834E8 network, 7.874973271196711E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1253.6353934284057, cumulative cost = {3.33203877254076E7 rows, 1.0631853158787786E9 cpu, 4.6211094E8 io, 1.3154302774461834E8 network, 7.86695000467877E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1253.6353934284057, cumulative cost = {3.331913409001417E7 rows, 1.0629646760495352E9 cpu, 4.6211094E8 io, 1.3151294049517606E8 network, 7.86695000467877E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 6915.8746710506175, cumulative cost = {3.331788045462074E7 rows, 1.0628540220547984E9 cpu, 4.6211094E8 io, 1.3151294049517606E8 network, 7.858926738160828E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 6825.902456378203, cumulative cost = {2.431392137227752E7 rows, 7.639679656211064E8 cpu, 3.38881164E8 io, 9.402140448753944E7 network, 5.709362349623616E7 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 573.8076117434233, cumulative cost = {1.1329134625261756E7 rows, 3.4104095903463405E8 cpu, 1.6019892E8 io, 4.1433010847856194E7 network, 2.6776676547668472E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 573.8076117434233, cumulative cost = {1.1328560817650013E7 rows, 3.4104095903463405E8 cpu, 1.6019892E8 io, 4.1433010847856194E7 network, 2.6776676547668472E7 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6140336.366112546 rows, 1.825813614512437E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.317738608469983E7 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 3030.0029866394993, cumulative cost = {6137306.363125906 rows, 1.8253288140345746E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.2983465893554902E7 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6134276.360139267 rows, 1.819996008778089E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2983465893554902E7 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 16715.48284162621, cumulative cost = {6131246.357152627 rows, 1.817321531523429E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2789545702409973E7 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 14463.201937176975, cumulative cost = {4674118.694413118 rows, 1.2304089386839268E8 cpu, 6.77793E7 io, 1.5029954484192796E7 network, 8709903.330613293 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 8349.74930150959, cumulative cost = {2871124.5164022744 rows, 6.350300955078336E7 cpu, 4.3135416E7 io, 7530053.917774137 network, 4504358.9081674535 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 6097.243397060353, cumulative cost = {1422347.6372028817 rows, 4807789.995549531 cpu, 2.4651648E7 io, 83988.97306225884 network, 424418.93637077213 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 5938.363156857459, cumulative cost = {1061286.2285213578 rows, 3908695.391881944 cpu, 1.8487884E7 io, 57219.33462979572 network, 285784.89139763545 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 158.91399020289455, cumulative cost = {354979.40778446366 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 158.91399020289455, cumulative cost = {354820.4937942608 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 8.355, cumulative cost = {157.165 rows, 3354.7000000000003 cpu, 1272.0 io, 433.32 network, 271.59999999999997 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 8.355, cumulative cost = {148.81 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :  :     :           :  :  :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.355, cumulative cost = {140.455 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 5779.449166654565, cumulative cost = {700368.4575800366 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 5779.449166654565, cumulative cost = {694589.008413382 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 38528.66111103043, cumulative cost = {688807.5592467274 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 38528.66111103043, cumulative cost = {650278.898135697 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 158.74074020289456, cumulative cost = {355051.23702466657 rows, 915850.7814219072 cpu, 6163200.0 io, 30384.296197332595 network, 138178.76497313668 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 158.74074020289456, cumulative cost = {354892.4962844637 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :  :     :           :  :  :  :        :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[right]): rowcount = 158.74074020289456, cumulative cost = {354733.7555442608 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 158.88024020289456, cumulative cost = {354964.16528446367 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 158.88024020289456, cumulative cost = {354805.2850442608 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.13, cumulative cost = {141.99 rows, 2998.2000000000003 cpu, 1152.0 io, 391.91999999999996 network, 229.59999999999997 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 8.13, cumulative cost = {133.86 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :           :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.13, cumulative cost = {125.73000000000002 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.505904449236, cumulative cost = {1440427.129897883 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 2252.505904449236, cumulative cost = {1438174.6239934338 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {89.10000000000001 rows, 1770.0 cpu, 732.0 io, 268.79999999999995 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 8.7, cumulative cost = {80.4 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 8.7, cumulative cost = {71.7 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6113.452635667386, cumulative cost = {1788530.9760736665 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6113.452635667386, cumulative cost = {1782417.5234379992 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :  :     :           :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442593.070802332 rows, 5.894051130843656E7 cpu, 1.8483084E7 io, 7499876.56641866 network, 4079440.771796681 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 2251.350904449236, cumulative cost = {1440341.7198978828 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438090.3689934337 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.280904449236, cumulative cost = {1440412.1798978832 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :  :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], build=[right]): rowcount = 2252.280904449236, cumulative cost = {1438159.898993434 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {74.60000000000001 rows, 1520.0 cpu, 612.0 io, 220.79999999999998 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 7.199999999999999, cumulative cost = {67.4 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 7.199999999999999, cumulative cost = {60.2 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 795.3810916499892, cumulative cost = {5187650.643925723 rows, 1.5842899451076403E8 cpu, 7.3935972E7 io, 1.8884319347272176E7 network, 1.3554749121836245E7 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 795.3810916499892, cumulative cost = {5186855.262834073 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 795.3810916499892, cumulative cost = {5186059.881742423 rows, 1.5830173353610003E8 cpu, 7.3935972E7 io, 1.8865230201072577E7 network, 1.3554749121836245E7 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5185170.500650774 rows, 1.5825179321121204E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.3553057121836245E7 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 5255.5406109999285, cumulative cost = {5179914.960039774 rows, 1.5816770456143603E8 cpu, 7.3935408E7 io, 1.8864666201072577E7 network, 1.321670252273225E7 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 5255.5406109999285, cumulative cost = {5174659.419428774 rows, 1.5724272941390005E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.321670252273225E7 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 28993.007364679215, cumulative cost = {5169403.878817774 rows, 1.5677884129606518E8 cpu, 7.3935408E7 io, 1.873853322640858E7 network, 1.2880347923628256E7 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 17389.84038700467, cumulative cost = {2929085.5652102754 rows, 8.006378941531472E7 cpu, 4.3130352E7 io, 9381737.448108813 network, 6516898.188870337 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 5833.587227674545, cumulative cost = {1788823.6702249886 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 5833.587227674545, cumulative cost = {1782990.0829973142 rows, 6.1442782277270816E7 cpu, 2.464482E7 io, 7500994.6618718365 network, 4208833.734757918 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 38843.5815178303, cumulative cost = {1777062.4957696397 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38843.5815178303, cumulative cost = {1738218.9142518095 rows, 6.112413762512817E7 cpu, 2.4644256E7 io, 7500430.6618718365 network, 4207141.734757918 memory}
         :  :              :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 2258.2101188686784, cumulative cost = {1442676.3327339792 rows, 5.9052479944177225E7 cpu, 1.848348E7 io, 7500430.6618718365 network, 4080681.9681012724 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 11556.253159330126, cumulative cost = {1122872.054598282 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 11556.253159330126, cumulative cost = {1111315.8014389519 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38529.787728867515, cumulative cost = {727430.8482796218 rows, 9455796.595825966 cpu, 1.2324192E7 io, 955893.1862369755 network, 149706.05411241902 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 38529.787728867515, cumulative cost = {688901.0605507543 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.787728867515, cumulative cost = {650371.2728218868 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 11603.166977674546, cumulative cost = {2211325.30624282 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 11603.166977674546, cumulative cost = {2199722.139265145 rows, 7.668605887338579E7 cpu, 3.0805056E7 io, 9356795.778299764 network, 6363449.734757919 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 38842.5465178303, cumulative cost = {1815790.2722874705 rows, 6.753573610124314E7 cpu, 2.4643716E7 io, 8431946.178299764 network, 4205091.3347579185 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 38842.5465178303, cumulative cost = {1776947.7257696402 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38842.5465178303, cumulative cost = {1738105.1792518098 rows, 6.101018828624764E7 cpu, 2.4643716E7 io, 7499725.061871837 network, 4205091.3347579185 memory}
         :  :              :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 6252.09484463478, cumulative cost = {1.2977960844559385E7 rows, 4.2292018068401587E8 cpu, 1.78682244E8 io, 5.2588393639683254E7 network, 3.031694694856769E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], isBroadcast=[true], build=[right]): rowcount = 6252.09484463478, cumulative cost = {1.2971708749714749E7 rows, 4.2292018068401587E8 cpu, 1.78682244E8 io, 5.2588393639683254E7 network, 3.031694694856769E7 memory}
         :        :- Calc(select=[x, X1]): rowcount = 38650.6293109257, cumulative cost = {6822090.2857709285 rows, 2.3952057369652933E8 cpu, 9.2419296E7 io, 2.9966982067419887E7 network, 1.696988069661605E7 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38650.6293109257, cumulative cost = {6783439.656460003 rows, 2.3952057369652933E8 cpu, 9.2419296E7 io, 2.9966982067419887E7 network, 1.696988069661605E7 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 971.8620728380032, cumulative cost = {6488090.0271490775 rows, 2.3745920679994664E8 cpu, 8.625852E7 io, 2.9966982067419887E7 network, 1.691545642053712E7 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6487118.16507624 rows, 2.3730370886829257E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.691545642053712E7 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 971.8620728380032, cumulative cost = {6486146.303003402 rows, 2.3728815907512715E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.685325724787549E7 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6485174.440930565 rows, 2.3711711135030767E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.685325724787549E7 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 5361.428313629488, cumulative cost = {6484202.578857727 rows, 2.370313284972896E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.6791058075213857E7 memory}
         :        :                    :- Union(all=[true], union=[X0, X1]): rowcount = 2772.5308913499503, cumulative cost = {3595266.7048765747 rows, 1.1938434057679603E8 cpu, 4.9292544E7 io, 1.4974811481339948E7 network, 8506581.968659256 memory}
         :        :                    :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :        :                    :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :        :                    :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                    :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                    :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                    :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                    :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                    :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                    :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                    :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                    :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                    :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :        :                    :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :        :                    :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :        :                    :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :        :                    :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :        :                    :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :        :                    :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :        :                    :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :        :                    :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :        :                    :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                    :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                    :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :  +- Calc(select=[X00 AS X0, X1]): rowcount = 496.3922580331963, cumulative cost = {1796966.3935365875 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
         :        :                    :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 496.3922580331963, cumulative cost = {1796470.0012785543 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
         :        :                    :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :                    :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
         :        :                    :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :                    :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :                    :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :                    :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :                    :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                    :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                    :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                    :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                    :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :        +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
         :        :                    :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :        :                    :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :        :                    :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :        :                    :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :        :                    :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :                       :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :                       :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :                             +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
         :        :                             +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :                                   :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                                   :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                                   :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                                   :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                                   :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                                   :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 3030.0029866394993, cumulative cost = {6143366.369099186 rows, 1.8306616192910603E8 cpu, 8.6262948E7 io, 2.2621411572263367E7 network, 1.317738608469983E7 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6140336.366112546 rows, 1.825813614512437E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.317738608469983E7 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 3030.0029866394993, cumulative cost = {6137306.363125906 rows, 1.8253288140345746E8 cpu, 8.6262948E7 io, 2.254869150058402E7 network, 1.2983465893554902E7 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3030.0029866394993, cumulative cost = {6134276.360139267 rows, 1.819996008778089E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2983465893554902E7 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 16715.48284162621, cumulative cost = {6131246.357152627 rows, 1.817321531523429E8 cpu, 8.6262948E7 io, 2.2475971428904675E7 network, 1.2789545702409973E7 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 14463.201937176975, cumulative cost = {4674118.694413118 rows, 1.2304089386839268E8 cpu, 6.77793E7 io, 1.5029954484192796E7 network, 8709903.330613293 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 8349.74930150959, cumulative cost = {2871124.5164022744 rows, 6.350300955078336E7 cpu, 4.3135416E7 io, 7530053.917774137 network, 4504358.9081674535 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 6097.243397060353, cumulative cost = {1422347.6372028817 rows, 4807789.995549531 cpu, 2.4651648E7 io, 83988.97306225884 network, 424418.93637077213 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 5938.363156857459, cumulative cost = {1061286.2285213578 rows, 3908695.391881944 cpu, 1.8487884E7 io, 57219.33462979572 network, 285784.89139763545 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 158.91399020289455, cumulative cost = {354979.40778446366 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 158.91399020289455, cumulative cost = {354820.4937942608 rows, 893355.6602705262 cpu, 6163884.0 io, 26811.038432463127 network, 138688.6449731367 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 8.355, cumulative cost = {157.165 rows, 3354.7000000000003 cpu, 1272.0 io, 433.32 network, 271.59999999999997 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 8.355, cumulative cost = {148.81 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :                       :  :  :  :  :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.355, cumulative cost = {140.455 rows, 2017.9 cpu, 1272.0 io, 232.79999999999998 network, 271.59999999999997 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {85.10000000000001 rows, 1609.0 cpu, 708.0 io, 232.79999999999998 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 5779.449166654565, cumulative cost = {700368.4575800366 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 5779.449166654565, cumulative cost = {694589.008413382 rows, 3009401.3684545606 cpu, 1.2324E7 io, 30408.296197332595 network, 147096.2464244988 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 38528.66111103043, cumulative cost = {688807.5592467274 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 38528.66111103043, cumulative cost = {650278.898135697 rows, 2970712.7073435304 cpu, 1.2323976E7 io, 30384.296197332595 network, 147068.2464244988 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 158.74074020289456, cumulative cost = {355051.23702466657 rows, 915850.7814219072 cpu, 6163200.0 io, 30384.296197332595 network, 138178.76497313668 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 158.74074020289456, cumulative cost = {354892.4962844637 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :                       :  :  :  :        :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], build=[right]): rowcount = 158.74074020289456, cumulative cost = {354733.7555442608 rows, 890452.2629894441 cpu, 6163200.0 io, 26574.518432463126 network, 138178.76497313668 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 158.88024020289456, cumulative cost = {354964.16528446367 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 158.88024020289456, cumulative cost = {354805.2850442608 rows, 892997.3602705261 cpu, 6163764.0 io, 26769.638432463125 network, 138634.04497313668 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.13, cumulative cost = {141.99 rows, 2998.2000000000003 cpu, 1152.0 io, 391.91999999999996 network, 229.59999999999997 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 8.13, cumulative cost = {133.86 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :                       :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 8.13, cumulative cost = {125.73000000000002 rows, 1697.4 cpu, 1152.0 io, 196.79999999999998 network, 229.59999999999997 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.505904449236, cumulative cost = {1440427.129897883 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 2252.505904449236, cumulative cost = {1438174.6239934338 rows, 5.868686980593232E7 cpu, 1.8483768E7 io, 7446064.944711878 network, 4079939.971796681 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 8.7, cumulative cost = {89.10000000000001 rows, 1770.0 cpu, 732.0 io, 268.79999999999995 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 8.7, cumulative cost = {80.4 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 8.7, cumulative cost = {71.7 rows, 378.0 cpu, 732.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6113.452635667386, cumulative cost = {1788530.9760736665 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 6113.452635667386, cumulative cost = {1782417.5234379992 rows, 5.952342111567215E7 cpu, 2.4643884E7 io, 7499900.56641866 network, 4205544.422445838 memory}
         :                       :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442593.070802332 rows, 5.894051130843656E7 cpu, 1.8483084E7 io, 7499876.56641866 network, 4079440.771796681 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 2251.350904449236, cumulative cost = {1440341.7198978828 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438090.3689934337 rows, 5.858029516372468E7 cpu, 1.8483084E7 io, 7445844.144711878 network, 4079440.771796681 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 2252.280904449236, cumulative cost = {1440412.1798978832 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], build=[right]): rowcount = 2252.280904449236, cumulative cost = {1438159.898993434 rows, 5.867454380110859E7 cpu, 1.8483648E7 io, 7446016.944711878 network, 4079642.371796681 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {74.60000000000001 rows, 1520.0 cpu, 612.0 io, 220.79999999999998 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 7.199999999999999, cumulative cost = {67.4 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 7.199999999999999, cumulative cost = {60.2 rows, 368.0 cpu, 612.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 89.97221467241458, cumulative cost = {8997043.207672173 rows, 2.9887914055902094E8 cpu, 1.23229776E8 io, 3.749153600763662E7 network, 2.1495643885372117E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 89.97221467241458, cumulative cost = {8996953.2354575 rows, 2.9887914055902094E8 cpu, 1.23229776E8 io, 3.749153600763662E7 network, 2.1495643885372117E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2509168.110233811 rows, 6.152858958628172E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4569493.023423157 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.48545355706335, cumulative cost = {2508722.624780254 rows, 6.15214618190248E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4540981.954395505 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2508277.1393266967 rows, 6.144305637919876E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4540981.954395505 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 2457.589806994182, cumulative cost = {2507831.6538731395 rows, 6.140373494228686E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4512470.885367853 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 2275.047485620262, cumulative cost = {1795387.4888397823 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2275.047485620262, cumulative cost = {1793112.441354162 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 158.97720780683773, cumulative cost = {355004.37577955716 rows, 903731.127293892 cpu, 6162192.0 io, 29959.80623645814 network, 137640.55066183486 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 158.97720780683773, cumulative cost = {354845.3985717503 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 158.97720780683773, cumulative cost = {354686.4213639435 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 182.5423213739202, cumulative cost = {709986.575226363 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.5423213739202, cumulative cost = {709804.0329049891 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 165.87720780683773, cumulative cost = {355117.0757795572 rows, 919983.063658211 cpu, 6162732.0 io, 30665.40623645814 network, 139304.55066183486 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 165.87720780683773, cumulative cost = {354951.19857175037 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.87720780683773, cumulative cost = {354785.3213639435 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 154.3293109257005, cumulative cost = {6487695.153009017 rows, 2.3734575245462337E8 cpu, 8.6259204E7 io, 2.994804528113399E7 network, 1.691750842053712E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 154.3293109257005, cumulative cost = {6487540.823698091 rows, 2.3732105976487526E8 cpu, 8.6259204E7 io, 2.9944341377671774E7 network, 1.691750842053712E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 154.3293109257005, cumulative cost = {6487386.494387166 rows, 2.3732105976487526E8 cpu, 8.6259204E7 io, 2.9944341377671774E7 network, 1.691750842053712E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6487118.16507624 rows, 2.3730370886829257E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.691545642053712E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 971.8620728380032, cumulative cost = {6486146.303003402 rows, 2.3728815907512715E8 cpu, 8.625852E7 io, 2.9943657377671774E7 network, 1.685325724787549E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 971.8620728380032, cumulative cost = {6485174.440930565 rows, 2.3711711135030767E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.685325724787549E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 5361.428313629488, cumulative cost = {6484202.578857727 rows, 2.370313284972896E8 cpu, 8.625852E7 io, 2.9920332687923662E7 network, 1.6791058075213857E7 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 2772.5308913499503, cumulative cost = {3595266.7048765747 rows, 1.1938434057679603E8 cpu, 4.9292544E7 io, 1.4974811481339948E7 network, 8506581.968659256 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 496.3922580331963, cumulative cost = {1796966.3935365875 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 496.3922580331963, cumulative cost = {1796470.0012785543 rows, 5.976733758259613E7 cpu, 2.4646092E7 io, 7497837.055883915 network, 4277491.142750156 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 2258.2101188686784, cumulative cost = {1440418.1226151106 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2258.2101188686784, cumulative cost = {1438159.912496242 rows, 5.869116632515824E7 cpu, 1.848348E7 io, 7446233.619018989 network, 4080681.9681012724 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 2588.8974222795378, cumulative cost = {2883574.4456675234 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2588.8974222795378, cumulative cost = {2880985.5482452437 rows, 1.1764162649217996E8 cpu, 3.6965976E7 io, 1.4945521206583716E7 network, 8284476.1065545995 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 2251.3101188686783, cumulative cost = {1442563.6327339795 rows, 5.893858580529669E7 cpu, 1.848294E7 io, 7499725.061871837 network, 4079017.9681012724 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 2251.3101188686783, cumulative cost = {1440312.3226151108 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.3101188686783, cumulative cost = {1438061.012496242 rows, 5.85783761862777E7 cpu, 1.848294E7 io, 7445693.619018989 network, 4079017.9681012724 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], isBroadcast=[true], build=[right])\n:        :- Calc(select=[x, X1])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#7] Exchange(distribution=[broadcast])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[1,0,1,0,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[1])\n:  :     :  +- [#5] Exchange(distribution=[hash[X0, X1]])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:        :- [#3] Calc(select=[X0, X1])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n      :- Reused(reference_id=[1])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[21])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[3])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :        :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[13])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[12])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[23])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[3])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])(reuse_id=[8])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :        :           :                       :- Reused(reference_id=[5])
         :        :           :                       +- Reused(reference_id=[6])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[24])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[7])
         :        :           :     +- Reused(reference_id=[6])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[x0 AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[18])
         :        :           :              :     :- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :              :     :     :- Reused(reference_id=[1])
         :        :           :              :     :     +- Reused(reference_id=[2])
         :        :           :              :     +- Reused(reference_id=[6])
         :        :           :              +- Reused(reference_id=[8])
         :        :           +- Exchange(distribution=[hash[X0, X1]])
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Union(all=[true], union=[X0, X1])
         :        :                    :- Calc(select=[y AS X0, x AS X1])
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[10])
         :        :                    :     :- Reused(reference_id=[1])
         :        :                    :     +- Reused(reference_id=[4])
         :        :                    +- Calc(select=[y AS X0, x0 AS X1])
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[11])
         :        :                          :- Exchange(distribution=[hash[x]])
         :        :                          :  +- Reused(reference_id=[1])
         :        :                          +- Exchange(distribution=[hash[y]])
         :        :                             +- Reused(reference_id=[9])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right])\n:        :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[10])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[11])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[12])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[15])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[16])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[13])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[3])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[14])
         :           :        +- Reused(reference_id=[15])
         :           :- Reused(reference_id=[14])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[5])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[16])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :           :           :  +- Reused(reference_id=[17])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[18])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[12])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[12])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[19])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[12])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[5])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], build=[right])
         :                    :- Reused(reference_id=[19])
         :                    +- Reused(reference_id=[20])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[6])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[broadcast])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[21])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[22])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[6])
         :                 :- Reused(reference_id=[6])
         :                 :- Reused(reference_id=[22])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Reused(reference_id=[24])
         :- Exchange(distribution=[broadcast])
         :  +- Reused(reference_id=[25])
         :- Exchange(distribution=[hash[X0, X1]])
         :  +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :     +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[14])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Calc(select=[X1, x])
         :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[26])
         :        :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        :        +- Union(all=[true], union=[X0, X1])
         :        :        :           :- Calc(select=[x AS X0, x AS X1])
         :        :        :           :  +- Reused(reference_id=[5])
         :        :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :        :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :        :        :                 :- Reused(reference_id=[9])
         :        :        :                 +- Reused(reference_id=[4])
         :        :        +- Reused(reference_id=[2])
         :        :- Reused(reference_id=[19])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- Reused(reference_id=[26])
         :                 +- Reused(reference_id=[6])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[27])

Job has been submitted with JobID 0cf864281be292340c6955d1bf66418f
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: a0b3ee96_5404_459c_b123_3fdb9b8b6702

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11265.724617581658, cumulative cost = {2.9979896814575315E8 rows, 9.61298790447755E9 cpu, 4.153044564E9 io, 1.1904640847960942E9 network, 7.074795720528173E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 11265.724617581658, cumulative cost = {2.9978770242113554E8 rows, 9.612807652883669E9 cpu, 4.153044564E9 io, 1.1904640847960942E9 network, 7.067585656772921E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11265.724617581658, cumulative cost = {2.9977643669651794E8 rows, 9.610824885350975E9 cpu, 4.153044564E9 io, 1.1901937074052722E9 network, 7.067585656772921E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 62149.12241803575, cumulative cost = {2.9976517097190034E8 rows, 9.609830499392286E9 cpu, 4.153044564E9 io, 1.1901937074052722E9 network, 7.060375593017669E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 61344.652174316165, cumulative cost = {2.1885056944109368E8 rows, 6.924041819344195E9 cpu, 3.045567384E9 io, 8.532748619809887E8 network, 5.129455952094703E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 5155.089272611638, cumulative cost = {1.0181206786663751E8 rows, 3.0647850549719515E9 cpu, 1.439727948E9 io, 3.7234172698503804E8 network, 2.405690114278915E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 5155.089272611638, cumulative cost = {1.018069127773649E8 rows, 3.0647850549719515E9 cpu, 1.439727948E9 io, 3.7234172698503804E8 network, 2.405690114278915E8 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.5180920109569535E7 rows, 1.640822108936049E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1838633163483706E8 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 27229.04401456522, cumulative cost = {5.515369106555497E7 rows, 1.640386444231816E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1664367281790489E8 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.51264620215404E7 rows, 1.6355941324852526E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1664367281790489E8 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 150213.25722326813, cumulative cost = {5.509923297752584E7 rows, 1.6331907203696804E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1490101400097272E8 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 129973.50581098741, cumulative cost = {4.200409142673239E7 rows, 1.1056380815585828E9 cpu, 6.09133656E8 io, 1.350641115650482E8 network, 7.824218386249316E7 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 75029.99134914529, cumulative cost = {2.5800432162015263E7 rows, 5.705845767342076E8 cpu, 3.87652344E8 io, 6.766265382518853E7 network, 4.0453349524925895E7 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 54790.712436864575, cumulative cost = {1.2780505272095935E7 rows, 4.310767138898416E7 cpu, 2.2153632E8 io, 745559.1992236084 network, 3794683.786446348 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 53365.77053761138, cumulative cost = {9536374.5253755 rows, 3.506244886670971E7 cpu, 1.66145808E8 io, 507915.6953430978 network, 2555157.7257502917 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 1424.871024253191, cumulative cost = {3189308.0250335713 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1424.871024253191, cumulative cost = {3187883.154009318 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :           :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 51940.89951335819, cumulative cost = {6293700.7298043175 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 51940.89951335819, cumulative cost = {6241759.830290959 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 346271.66342238797, cumulative cost = {6189816.930777601 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 346271.66342238797, cumulative cost = {5843545.267355213 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1423.7561492531913, cumulative cost = {3190219.603932825 rows, 8205027.153718099 cpu, 5.5386228E7 io, 270335.13146258716 network, 1236076.1806960565 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 1423.7561492531913, cumulative cost = {3188795.8477835716 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :  :     :           :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1423.7561492531913, cumulative cost = {3187372.091634318 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 1424.9418992531912, cumulative cost = {3189340.034283571 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 1424.9418992531912, cumulative cost = {3187915.092384318 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 61.605, cumulative cost = {1061.915 rows, 22251.4 cpu, 8592.0 io, 2791.3199999999997 network, 3035.2 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 61.605, cumulative cost = {1000.3100000000001 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :  :     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.605, cumulative cost = {938.705 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.27891228072, cumulative cost = {1.2944896898570182E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.27891228072, cumulative cost = {1.29246576196579E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {493.65000000000003 rows, 8745.0 cpu, 4080.0 io, 1273.1999999999998 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 50.55, cumulative cost = {443.1 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 50.55, cumulative cost = {392.55 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 54943.51446184211, cumulative cost = {1.6073685758906143E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 54943.51446184211, cumulative cost = {1.6018742244444301E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :  :     :           :        :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462622998246E7 rows, 5.29685996547266E8 cpu, 1.66111992E8 io, 6.740143373985966E7 network, 3.665582293847955E7 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 20231.846412280724, cumulative cost = {1.294439438357018E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924162537157899E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.751412280722, cumulative cost = {1.2944928293570178E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.751412280722, cumulative cost = {1.2924688542157898E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {524.1 rows, 9270.0 cpu, 4332.0 io, 1336.8 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 53.699999999999996, cumulative cost = {470.4 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 53.699999999999996, cumulative cost = {416.7 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 7138.217802845699, cumulative cost = {4.662083757852275E7 rows, 1.4236880079413633E9 cpu, 6.64478016E8 io, 1.6970696013767537E8 network, 1.2178293959609509E8 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 7138.217802845699, cumulative cost = {4.6613699360719904E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 7138.217802845699, cumulative cost = {4.660656114291706E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.6598708925114214E7 rows, 1.4221080681434228E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.2177008759609509E8 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 47231.11868563799, cumulative cost = {4.6551477806428574E7 rows, 1.4213523702444527E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.1874729600021425E8 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.650424668774293E7 rows, 1.4130396933557804E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1874729600021425E8 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 260557.8137915295, cumulative cost = {4.645701556905729E7 rows, 1.408870768335116E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1572450440433341E8 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 156277.13282013452, cumulative cost = {2.6322785123969078E7 rows, 7.194299750545319E8 cpu, 3.87618636E8 io, 8.430694160712057E7 network, 5.85397877826215E7 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 52418.68497139499, cumulative cost = {1.6076355019487392E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 52418.68497139499, cumulative cost = {1.6023936334515996E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :              :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 103858.44784873951, cumulative cost = {1.009015297166155E7 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 103858.44784873951, cumulative cost = {9986294.523812812 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346278.0023249301, cumulative cost = {6536333.125964073 rows, 8.4897866814722E7 cpu, 1.10754996E8 io, 8584474.907712582 network, 1326404.7609096025 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 346278.0023249301, cumulative cost = {6190055.123639143 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.0023249301, cumulative cost = {5843777.121314213 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 104280.68097139499, cumulative cost = {1.9873672631296687E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 104280.68097139499, cumulative cost = {1.976939195032529E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 349092.8898093, cumulative cost = {1.6319008319353897E7 rows, 6.069554339483182E8 cpu, 2.21481516E8 io, 7.577990685483117E7 network, 3.7789612221711904E7 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 349092.8898093, cumulative cost = {1.5969915429544598E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 349092.8898093, cumulative cost = {1.5620822539735299E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :              :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[broadcast]): rowcount = 20231.932061999894, cumulative cost = {1.2964675649926E7 rows, 5.296895410038599E8 cpu, 1.6611222E8 io, 6.740167749940798E7 network, 3.665662402623991E7 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 20231.932061999894, cumulative cost = {1.2944443717864E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.932061999894, cumulative cost = {1.2924211785802E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 56189.56290170453, cumulative cost = {1.1697715692228188E8 rows, 3.8591954197200694E9 cpu, 1.605839436E9 io, 4.809331349959507E8 network, 2.723765837815788E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], build=[right]): rowcount = 56189.56290170453, cumulative cost = {1.1692096735938017E8 rows, 3.8591954197200694E9 cpu, 1.605839436E9 io, 4.809331349959507E8 network, 2.723765837815788E8 memory}
         :        :- Exchange(distribution=[hash[x]]): rowcount = 347368.0419967983, cumulative cost = {6.1656628642894365E7 rows, 2.210802054701483E9 cpu, 8.30589504E8 io, 2.776448710922385E8 network, 1.524654256819261E8 memory}
         :        :  +- Calc(select=[x, X1]): rowcount = 347368.0419967983, cumulative cost = {6.1309260600897565E7 rows, 2.152444223646021E9 cpu, 8.30589504E8 io, 2.693080380843153E8 network, 1.524654256819261E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347368.0419967983, cumulative cost = {6.0961892558900766E7 rows, 2.152444223646021E9 cpu, 8.30589504E8 io, 2.693080380843153E8 network, 1.524654256819261E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 8732.94664532206, cumulative cost = {5.830747051690397E7 rows, 2.133917928072858E9 cpu, 7.75220208E8 io, 2.693080380843153E8 network, 1.5197638066978806E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.829873757025865E7 rows, 2.1325206566096065E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5197638066978806E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8732.94664532206, cumulative cost = {5.829000462361333E7 rows, 2.1323809294632814E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5141747208448744E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.828127167696801E7 rows, 2.1308439308537047E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.5141747208448744E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 48176.658719606, cumulative cost = {5.827253873032269E7 rows, 2.130073104314191E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.508585634991868E8 memory}
         :        :                       :- Union(all=[true], union=[X0, X1]): rowcount = 24910.099695764, cumulative cost = {3.2309228869832944E7 rows, 1.0727808156334072E9 cpu, 4.42996044E8 io, 1.345713597755602E8 network, 7.641318913537964E7 memory}
         :        :                       :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :        :                       :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :        :                       :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                       :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                       :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                       :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                       :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                       :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                       :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :        :                       :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :        :                       :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :        :                       :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :        :                       :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :        :                       :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :        :                       :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :        :                       :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :        :                       :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :        :                       :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  +- Calc(select=[X00 AS X0, X1]): rowcount = 4458.500958553175, cumulative cost = {1.6149045762927858E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
         :        :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4458.500958553175, cumulative cost = {1.6144587261969306E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
         :        :                       :        :- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :        +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
         :        :                       :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :        :                       :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :        :                       :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :        :                       :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :        :                       :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :                       :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :                          +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :                             +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :                             :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                             :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                             :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :        :                                +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                                      :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X1]]): rowcount = 27229.04401456522, cumulative cost = {5.52081491535841E7 rows, 1.6453965883304958E9 cpu, 7.75249932E8 io, 2.0328826390371224E8 network, 1.1838633163483706E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.5180920109569535E7 rows, 1.640822108936049E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1838633163483706E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 27229.04401456522, cumulative cost = {5.515369106555497E7 rows, 1.640386444231816E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1664367281790489E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.51264620215404E7 rows, 1.6355941324852526E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1664367281790489E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 150213.25722326813, cumulative cost = {5.509923297752584E7 rows, 1.6331907203696804E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1490101400097272E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 129973.50581098741, cumulative cost = {4.200409142673239E7 rows, 1.1056380815585828E9 cpu, 6.09133656E8 io, 1.350641115650482E8 network, 7.824218386249316E7 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 75029.99134914529, cumulative cost = {2.5800432162015263E7 rows, 5.705845767342076E8 cpu, 3.87652344E8 io, 6.766265382518853E7 network, 4.0453349524925895E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 54790.712436864575, cumulative cost = {1.2780505272095935E7 rows, 4.310767138898416E7 cpu, 2.2153632E8 io, 745559.1992236084 network, 3794683.786446348 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 53365.77053761138, cumulative cost = {9536374.5253755 rows, 3.506244886670971E7 cpu, 1.66145808E8 io, 507915.6953430978 network, 2555157.7257502917 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 1424.871024253191, cumulative cost = {3189308.0250335713 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1424.871024253191, cumulative cost = {3187883.154009318 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :                       :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 51940.89951335819, cumulative cost = {6293700.7298043175 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 51940.89951335819, cumulative cost = {6241759.830290959 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 346271.66342238797, cumulative cost = {6189816.930777601 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 346271.66342238797, cumulative cost = {5843545.267355213 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1423.7561492531913, cumulative cost = {3190219.603932825 rows, 8205027.153718099 cpu, 5.5386228E7 io, 270335.13146258716 network, 1236076.1806960565 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 1423.7561492531913, cumulative cost = {3188795.8477835716 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :                       :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1423.7561492531913, cumulative cost = {3187372.091634318 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 1424.9418992531912, cumulative cost = {3189340.034283571 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 1424.9418992531912, cumulative cost = {3187915.092384318 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :        :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 61.605, cumulative cost = {1061.915 rows, 22251.4 cpu, 8592.0 io, 2791.3199999999997 network, 3035.2 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 61.605, cumulative cost = {1000.3100000000001 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.605, cumulative cost = {938.705 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.27891228072, cumulative cost = {1.2944896898570182E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.27891228072, cumulative cost = {1.29246576196579E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {493.65000000000003 rows, 8745.0 cpu, 4080.0 io, 1273.1999999999998 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 50.55, cumulative cost = {443.1 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 50.55, cumulative cost = {392.55 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 54943.51446184211, cumulative cost = {1.6073685758906143E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 54943.51446184211, cumulative cost = {1.6018742244444301E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :                       :        :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462622998246E7 rows, 5.29685996547266E8 cpu, 1.66111992E8 io, 6.740143373985966E7 network, 3.665582293847955E7 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 20231.846412280724, cumulative cost = {1.294439438357018E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924162537157899E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.751412280722, cumulative cost = {1.2944928293570178E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.751412280722, cumulative cost = {1.2924688542157898E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {524.1 rows, 9270.0 cpu, 4332.0 io, 1336.8 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 53.699999999999996, cumulative cost = {470.4 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 53.699999999999996, cumulative cost = {416.7 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 804.4702437195915, cumulative cost = {8.085245240838864E7 rows, 2.685726530925672E9 cpu, 1.10747718E9 io, 3.3691884542428356E8 network, 1.9309196409229663E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 804.4702437195915, cumulative cost = {8.085164793814492E7 rows, 2.685726530925672E9 cpu, 1.10747718E9 io, 3.3691884542428356E8 network, 1.9309196409229663E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.2547352871652175E7 rows, 5.528190029437503E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.102730827068786E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.7929613323013, cumulative cost = {2.254335007869084E7 rows, 5.52754958256369E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.07711295211626E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.253934728572951E7 rows, 5.520504666951745E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.07711295211626E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 22082.030070187793, cumulative cost = {2.2535344492768176E7 rows, 5.516971542140515E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.0514950771637335E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 20445.007666607664, cumulative cost = {1.6134251344242299E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 20445.007666607664, cumulative cost = {1.611380633657569E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 1422.0750288462589, cumulative cost = {3189436.6381634637 rows, 8078380.879230922 cpu, 5.5377408E7 io, 265717.80530771165 network, 1225528.0246154743 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 1422.0750288462589, cumulative cost = {3188014.5631346176 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1422.0750288462589, cumulative cost = {3186592.4881057716 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 1637.02240358013, cumulative cost = {6379011.11845569 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1637.02240358013, cumulative cost = {6377374.09605211 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
               :                 :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 1475.475028846259, cumulative cost = {3190308.838163465 rows, 8213097.380577081 cpu, 5.5381668E7 io, 271259.4053077117 network, 1238352.0246154743 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 1475.475028846259, cumulative cost = {3188833.3631346184 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1475.475028846259, cumulative cost = {3187357.888105772 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1360.3419967983089, cumulative cost = {5.830349059624904E7 rows, 2.1328646229022567E9 cpu, 7.7522424E8 io, 2.6913512757275075E8 network, 1.5198847666978806E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1360.3419967983089, cumulative cost = {5.830213025425224E7 rows, 2.132646968182769E9 cpu, 7.7522424E8 io, 2.691024793648276E8 network, 1.5198847666978806E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1360.3419967983089, cumulative cost = {5.830076991225544E7 rows, 2.132646968182769E9 cpu, 7.7522424E8 io, 2.691024793648276E8 network, 1.5198847666978806E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.829873757025865E7 rows, 2.1325206566096065E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5197638066978806E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8732.94664532206, cumulative cost = {5.829000462361333E7 rows, 2.1323809294632814E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5141747208448744E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.828127167696801E7 rows, 2.1308439308537047E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.5141747208448744E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 48176.658719606, cumulative cost = {5.827253873032269E7 rows, 2.130073104314191E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.508585634991868E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 24910.099695764, cumulative cost = {3.2309228869832944E7 rows, 1.0727808156334072E9 cpu, 4.42996044E8 io, 1.345713597755602E8 network, 7.641318913537964E7 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 4458.500958553175, cumulative cost = {1.6149045762927858E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4458.500958553175, cumulative cost = {1.6144587261969306E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                        :                    +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,2,1,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], build=[right])\n:        :- [#4] Exchange(distribution=[hash[x]])\n:        +- [#5] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:        :- [#5] Calc(select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X10 AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :           :- Exchange(distribution=[hash[y]])
         :        :           :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :           :- Exchange(distribution=[hash[x]])
         :        :           :           :  +- Calc(select=[x, y0])(reuse_id=[5])
         :        :           :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :           :        :- Reused(reference_id=[1])
         :        :           :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[13])
         :        :           :           :- Reused(reference_id=[1])
         :        :           :           +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :           :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X1, y])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :        :           :- Calc(select=[y AS X0, x AS X1])
         :        :           :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[11])
         :        :           :        :           :     :- Reused(reference_id=[1])
         :        :           :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[16])
         :        :           :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :        :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[12])
         :        :           :        :                 :- Exchange(distribution=[hash[x]])
         :        :           :        :                 :  +- Reused(reference_id=[1])
         :        :           :        :                 +- Exchange(distribution=[hash[y]])
         :        :           :        :                    +- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :        :                          :- Reused(reference_id=[1])
         :        :           :        :                          +- Reused(reference_id=[2])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[23])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[5])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x0 AS X0, x0 AS X1])(reuse_id=[10])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[18])
         :        :           :                       :- Reused(reference_id=[6])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[24])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[7])
         :        :           :     +- Reused(reference_id=[8])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x0 AS X0, x AS X1])
         :        :                          :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[19])
         :        :                          :     :- Reused(reference_id=[9])
         :        :                          :     +- Reused(reference_id=[8])
         :        :                          +- Reused(reference_id=[10])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[26])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right])\n:        :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[11])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[12])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[15])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[17])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[13])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[5])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[14])
         :           :        +- Reused(reference_id=[15])
         :           :- Reused(reference_id=[14])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[16])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[17])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x AS X0, x AS X1])
         :           :           :  +- Reused(reference_id=[18])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[19])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[21])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[6])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[20])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[16])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])
         :                    :- Reused(reference_id=[20])
         :                    +- Reused(reference_id=[21])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[8])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[broadcast])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Exchange(distribution=[broadcast])
         :                 :           +- Calc(select=[X1, x])
         :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :                 :- Reused(reference_id=[7])
         :                 :                 +- Reused(reference_id=[2])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[22])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[8])
         :                 :- Reused(reference_id=[8])
         :                 :- Reused(reference_id=[22])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Reused(reference_id=[24])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[25])
         :- Exchange(distribution=[hash[X1]])
         :  +- Reused(reference_id=[26])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[14])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[X1, x])
                  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
                  :        :  +- Exchange(distribution=[hash[X0, X1]])
                  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :        :        +- Union(all=[true], union=[X0, X1])
                  :        :           :- Calc(select=[x AS X0, x AS X1])
                  :        :           :  +- Reused(reference_id=[16])
                  :        :           +- Calc(select=[x0 AS X0, y AS X1])
                  :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :        :                 :- Reused(reference_id=[9])
                  :        :                 +- Reused(reference_id=[4])
                  :        +- Reused(reference_id=[2])
                  :- Reused(reference_id=[20])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[X0, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[27])
                           +- Reused(reference_id=[8])

Job has been submitted with JobID 5cc3246e9365ef8dd8ce97585876122e
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: bfae2290_6a80_4d61_bc64_08e6f84154ff

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11265.724617581658, cumulative cost = {2.9979896814575315E8 rows, 9.61298790447755E9 cpu, 4.153044564E9 io, 1.1904640847960942E9 network, 7.074795720528173E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 11265.724617581658, cumulative cost = {2.9978770242113554E8 rows, 9.612807652883669E9 cpu, 4.153044564E9 io, 1.1904640847960942E9 network, 7.067585656772921E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11265.724617581658, cumulative cost = {2.9977643669651794E8 rows, 9.610824885350975E9 cpu, 4.153044564E9 io, 1.1901937074052722E9 network, 7.067585656772921E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 62149.12241803575, cumulative cost = {2.9976517097190034E8 rows, 9.609830499392286E9 cpu, 4.153044564E9 io, 1.1901937074052722E9 network, 7.060375593017669E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 61344.652174316165, cumulative cost = {2.1885056944109368E8 rows, 6.924041819344195E9 cpu, 3.045567384E9 io, 8.532748619809887E8 network, 5.129455952094703E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 5155.089272611638, cumulative cost = {1.0181206786663751E8 rows, 3.0647850549719515E9 cpu, 1.439727948E9 io, 3.7234172698503804E8 network, 2.405690114278915E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 5155.089272611638, cumulative cost = {1.018069127773649E8 rows, 3.0647850549719515E9 cpu, 1.439727948E9 io, 3.7234172698503804E8 network, 2.405690114278915E8 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.5180920109569535E7 rows, 1.640822108936049E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1838633163483706E8 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 27229.04401456522, cumulative cost = {5.515369106555497E7 rows, 1.640386444231816E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1664367281790489E8 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.51264620215404E7 rows, 1.6355941324852526E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1664367281790489E8 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 150213.25722326813, cumulative cost = {5.509923297752584E7 rows, 1.6331907203696804E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1490101400097272E8 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 129973.50581098741, cumulative cost = {4.200409142673239E7 rows, 1.1056380815585828E9 cpu, 6.09133656E8 io, 1.350641115650482E8 network, 7.824218386249316E7 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 75029.99134914529, cumulative cost = {2.5800432162015263E7 rows, 5.705845767342076E8 cpu, 3.87652344E8 io, 6.766265382518853E7 network, 4.0453349524925895E7 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 54790.712436864575, cumulative cost = {1.2780505272095935E7 rows, 4.310767138898416E7 cpu, 2.2153632E8 io, 745559.1992236084 network, 3794683.786446348 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 53365.77053761138, cumulative cost = {9536374.5253755 rows, 3.506244886670971E7 cpu, 1.66145808E8 io, 507915.6953430978 network, 2555157.7257502917 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 1424.871024253191, cumulative cost = {3189308.0250335713 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1424.871024253191, cumulative cost = {3187883.154009318 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :           :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 51940.89951335819, cumulative cost = {6293700.7298043175 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 51940.89951335819, cumulative cost = {6241759.830290959 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 346271.66342238797, cumulative cost = {6189816.930777601 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 346271.66342238797, cumulative cost = {5843545.267355213 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1423.7561492531913, cumulative cost = {3190219.603932825 rows, 8205027.153718099 cpu, 5.5386228E7 io, 270335.13146258716 network, 1236076.1806960565 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 1423.7561492531913, cumulative cost = {3188795.8477835716 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :  :     :           :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1423.7561492531913, cumulative cost = {3187372.091634318 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 1424.9418992531912, cumulative cost = {3189340.034283571 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 1424.9418992531912, cumulative cost = {3187915.092384318 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 61.605, cumulative cost = {1061.915 rows, 22251.4 cpu, 8592.0 io, 2791.3199999999997 network, 3035.2 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 61.605, cumulative cost = {1000.3100000000001 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :  :     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.605, cumulative cost = {938.705 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.27891228072, cumulative cost = {1.2944896898570182E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.27891228072, cumulative cost = {1.29246576196579E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {493.65000000000003 rows, 8745.0 cpu, 4080.0 io, 1273.1999999999998 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 50.55, cumulative cost = {443.1 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 50.55, cumulative cost = {392.55 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 54943.51446184211, cumulative cost = {1.6073685758906143E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 54943.51446184211, cumulative cost = {1.6018742244444301E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :  :     :           :        :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462622998246E7 rows, 5.29685996547266E8 cpu, 1.66111992E8 io, 6.740143373985966E7 network, 3.665582293847955E7 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 20231.846412280724, cumulative cost = {1.294439438357018E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924162537157899E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.751412280722, cumulative cost = {1.2944928293570178E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.751412280722, cumulative cost = {1.2924688542157898E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {524.1 rows, 9270.0 cpu, 4332.0 io, 1336.8 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 53.699999999999996, cumulative cost = {470.4 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 53.699999999999996, cumulative cost = {416.7 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 7138.217802845699, cumulative cost = {4.662083757852275E7 rows, 1.4236880079413633E9 cpu, 6.64478016E8 io, 1.6970696013767537E8 network, 1.2178293959609509E8 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 7138.217802845699, cumulative cost = {4.6613699360719904E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 7138.217802845699, cumulative cost = {4.660656114291706E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.6598708925114214E7 rows, 1.4221080681434228E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.2177008759609509E8 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 47231.11868563799, cumulative cost = {4.6551477806428574E7 rows, 1.4213523702444527E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.1874729600021425E8 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.650424668774293E7 rows, 1.4130396933557804E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1874729600021425E8 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 260557.8137915295, cumulative cost = {4.645701556905729E7 rows, 1.408870768335116E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1572450440433341E8 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 156277.13282013452, cumulative cost = {2.6322785123969078E7 rows, 7.194299750545319E8 cpu, 3.87618636E8 io, 8.430694160712057E7 network, 5.85397877826215E7 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 52418.68497139499, cumulative cost = {1.6076355019487392E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 52418.68497139499, cumulative cost = {1.6023936334515996E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :              :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 103858.44784873951, cumulative cost = {1.009015297166155E7 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 103858.44784873951, cumulative cost = {9986294.523812812 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346278.0023249301, cumulative cost = {6536333.125964073 rows, 8.4897866814722E7 cpu, 1.10754996E8 io, 8584474.907712582 network, 1326404.7609096025 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 346278.0023249301, cumulative cost = {6190055.123639143 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.0023249301, cumulative cost = {5843777.121314213 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 104280.68097139499, cumulative cost = {1.9873672631296687E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 104280.68097139499, cumulative cost = {1.976939195032529E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 349092.8898093, cumulative cost = {1.6319008319353897E7 rows, 6.069554339483182E8 cpu, 2.21481516E8 io, 7.577990685483117E7 network, 3.7789612221711904E7 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 349092.8898093, cumulative cost = {1.5969915429544598E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 349092.8898093, cumulative cost = {1.5620822539735299E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :              :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[broadcast]): rowcount = 20231.932061999894, cumulative cost = {1.2964675649926E7 rows, 5.296895410038599E8 cpu, 1.6611222E8 io, 6.740167749940798E7 network, 3.665662402623991E7 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 20231.932061999894, cumulative cost = {1.2944443717864E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.932061999894, cumulative cost = {1.2924211785802E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 56189.56290170453, cumulative cost = {1.1697715692228188E8 rows, 3.8591954197200694E9 cpu, 1.605839436E9 io, 4.809331349959507E8 network, 2.723765837815788E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], build=[right]): rowcount = 56189.56290170453, cumulative cost = {1.1692096735938017E8 rows, 3.8591954197200694E9 cpu, 1.605839436E9 io, 4.809331349959507E8 network, 2.723765837815788E8 memory}
         :        :- Exchange(distribution=[hash[x]]): rowcount = 347368.0419967983, cumulative cost = {6.1656628642894365E7 rows, 2.210802054701483E9 cpu, 8.30589504E8 io, 2.776448710922385E8 network, 1.524654256819261E8 memory}
         :        :  +- Calc(select=[x, X1]): rowcount = 347368.0419967983, cumulative cost = {6.1309260600897565E7 rows, 2.152444223646021E9 cpu, 8.30589504E8 io, 2.693080380843153E8 network, 1.524654256819261E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347368.0419967983, cumulative cost = {6.0961892558900766E7 rows, 2.152444223646021E9 cpu, 8.30589504E8 io, 2.693080380843153E8 network, 1.524654256819261E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 8732.94664532206, cumulative cost = {5.830747051690397E7 rows, 2.133917928072858E9 cpu, 7.75220208E8 io, 2.693080380843153E8 network, 1.5197638066978806E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.829873757025865E7 rows, 2.1325206566096065E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5197638066978806E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8732.94664532206, cumulative cost = {5.829000462361333E7 rows, 2.1323809294632814E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5141747208448744E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.828127167696801E7 rows, 2.1308439308537047E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.5141747208448744E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 48176.658719606, cumulative cost = {5.827253873032269E7 rows, 2.130073104314191E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.508585634991868E8 memory}
         :        :                       :- Union(all=[true], union=[X0, X1]): rowcount = 24910.099695764, cumulative cost = {3.2309228869832944E7 rows, 1.0727808156334072E9 cpu, 4.42996044E8 io, 1.345713597755602E8 network, 7.641318913537964E7 memory}
         :        :                       :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :        :                       :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :        :                       :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                       :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                       :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                       :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                       :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                       :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                       :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :        :                       :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :        :                       :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :        :                       :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :        :                       :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :        :                       :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :        :                       :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :        :                       :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :        :                       :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :        :                       :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  +- Calc(select=[X00 AS X0, X1]): rowcount = 4458.500958553175, cumulative cost = {1.6149045762927858E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
         :        :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4458.500958553175, cumulative cost = {1.6144587261969306E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
         :        :                       :        :- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :        +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
         :        :                       :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :        :                       :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :        :                       :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :        :                       :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :        :                       :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :                       :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :                          +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :                             +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :                             :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                             :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                             :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :        :                                +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                                      :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X1]]): rowcount = 27229.04401456522, cumulative cost = {5.52081491535841E7 rows, 1.6453965883304958E9 cpu, 7.75249932E8 io, 2.0328826390371224E8 network, 1.1838633163483706E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.5180920109569535E7 rows, 1.640822108936049E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1838633163483706E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 27229.04401456522, cumulative cost = {5.515369106555497E7 rows, 1.640386444231816E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1664367281790489E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.51264620215404E7 rows, 1.6355941324852526E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1664367281790489E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 150213.25722326813, cumulative cost = {5.509923297752584E7 rows, 1.6331907203696804E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1490101400097272E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 129973.50581098741, cumulative cost = {4.200409142673239E7 rows, 1.1056380815585828E9 cpu, 6.09133656E8 io, 1.350641115650482E8 network, 7.824218386249316E7 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 75029.99134914529, cumulative cost = {2.5800432162015263E7 rows, 5.705845767342076E8 cpu, 3.87652344E8 io, 6.766265382518853E7 network, 4.0453349524925895E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 54790.712436864575, cumulative cost = {1.2780505272095935E7 rows, 4.310767138898416E7 cpu, 2.2153632E8 io, 745559.1992236084 network, 3794683.786446348 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 53365.77053761138, cumulative cost = {9536374.5253755 rows, 3.506244886670971E7 cpu, 1.66145808E8 io, 507915.6953430978 network, 2555157.7257502917 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 1424.871024253191, cumulative cost = {3189308.0250335713 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1424.871024253191, cumulative cost = {3187883.154009318 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :                       :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 51940.89951335819, cumulative cost = {6293700.7298043175 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 51940.89951335819, cumulative cost = {6241759.830290959 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 346271.66342238797, cumulative cost = {6189816.930777601 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 346271.66342238797, cumulative cost = {5843545.267355213 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1423.7561492531913, cumulative cost = {3190219.603932825 rows, 8205027.153718099 cpu, 5.5386228E7 io, 270335.13146258716 network, 1236076.1806960565 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 1423.7561492531913, cumulative cost = {3188795.8477835716 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :                       :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1423.7561492531913, cumulative cost = {3187372.091634318 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 1424.9418992531912, cumulative cost = {3189340.034283571 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 1424.9418992531912, cumulative cost = {3187915.092384318 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :        :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 61.605, cumulative cost = {1061.915 rows, 22251.4 cpu, 8592.0 io, 2791.3199999999997 network, 3035.2 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 61.605, cumulative cost = {1000.3100000000001 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.605, cumulative cost = {938.705 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.27891228072, cumulative cost = {1.2944896898570182E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.27891228072, cumulative cost = {1.29246576196579E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {493.65000000000003 rows, 8745.0 cpu, 4080.0 io, 1273.1999999999998 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 50.55, cumulative cost = {443.1 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 50.55, cumulative cost = {392.55 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 54943.51446184211, cumulative cost = {1.6073685758906143E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 54943.51446184211, cumulative cost = {1.6018742244444301E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :                       :        :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462622998246E7 rows, 5.29685996547266E8 cpu, 1.66111992E8 io, 6.740143373985966E7 network, 3.665582293847955E7 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 20231.846412280724, cumulative cost = {1.294439438357018E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924162537157899E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.751412280722, cumulative cost = {1.2944928293570178E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.751412280722, cumulative cost = {1.2924688542157898E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {524.1 rows, 9270.0 cpu, 4332.0 io, 1336.8 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 53.699999999999996, cumulative cost = {470.4 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 53.699999999999996, cumulative cost = {416.7 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 804.4702437195915, cumulative cost = {8.085245240838864E7 rows, 2.685726530925672E9 cpu, 1.10747718E9 io, 3.3691884542428356E8 network, 1.9309196409229663E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 804.4702437195915, cumulative cost = {8.085164793814492E7 rows, 2.685726530925672E9 cpu, 1.10747718E9 io, 3.3691884542428356E8 network, 1.9309196409229663E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.2547352871652175E7 rows, 5.528190029437503E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.102730827068786E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.7929613323013, cumulative cost = {2.254335007869084E7 rows, 5.52754958256369E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.07711295211626E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.253934728572951E7 rows, 5.520504666951745E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.07711295211626E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 22082.030070187793, cumulative cost = {2.2535344492768176E7 rows, 5.516971542140515E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.0514950771637335E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 20445.007666607664, cumulative cost = {1.6134251344242299E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 20445.007666607664, cumulative cost = {1.611380633657569E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 1422.0750288462589, cumulative cost = {3189436.6381634637 rows, 8078380.879230922 cpu, 5.5377408E7 io, 265717.80530771165 network, 1225528.0246154743 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 1422.0750288462589, cumulative cost = {3188014.5631346176 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1422.0750288462589, cumulative cost = {3186592.4881057716 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 1637.02240358013, cumulative cost = {6379011.11845569 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1637.02240358013, cumulative cost = {6377374.09605211 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
               :                 :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 1475.475028846259, cumulative cost = {3190308.838163465 rows, 8213097.380577081 cpu, 5.5381668E7 io, 271259.4053077117 network, 1238352.0246154743 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 1475.475028846259, cumulative cost = {3188833.3631346184 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1475.475028846259, cumulative cost = {3187357.888105772 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1360.3419967983089, cumulative cost = {5.830349059624904E7 rows, 2.1328646229022567E9 cpu, 7.7522424E8 io, 2.6913512757275075E8 network, 1.5198847666978806E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1360.3419967983089, cumulative cost = {5.830213025425224E7 rows, 2.132646968182769E9 cpu, 7.7522424E8 io, 2.691024793648276E8 network, 1.5198847666978806E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1360.3419967983089, cumulative cost = {5.830076991225544E7 rows, 2.132646968182769E9 cpu, 7.7522424E8 io, 2.691024793648276E8 network, 1.5198847666978806E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.829873757025865E7 rows, 2.1325206566096065E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5197638066978806E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8732.94664532206, cumulative cost = {5.829000462361333E7 rows, 2.1323809294632814E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5141747208448744E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.828127167696801E7 rows, 2.1308439308537047E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.5141747208448744E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 48176.658719606, cumulative cost = {5.827253873032269E7 rows, 2.130073104314191E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.508585634991868E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 24910.099695764, cumulative cost = {3.2309228869832944E7 rows, 1.0727808156334072E9 cpu, 4.42996044E8 io, 1.345713597755602E8 network, 7.641318913537964E7 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 4458.500958553175, cumulative cost = {1.6149045762927858E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4458.500958553175, cumulative cost = {1.6144587261969306E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                        :                    +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,2,1,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], build=[right])\n:        :- [#4] Exchange(distribution=[hash[x]])\n:        +- [#5] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:        :- [#5] Calc(select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X10 AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :           :- Exchange(distribution=[hash[y]])
         :        :           :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :           :- Exchange(distribution=[hash[x]])
         :        :           :           :  +- Calc(select=[x, y0])(reuse_id=[5])
         :        :           :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :           :        :- Reused(reference_id=[1])
         :        :           :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[13])
         :        :           :           :- Reused(reference_id=[1])
         :        :           :           +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :           :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X1, y])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :        :           :- Calc(select=[y AS X0, x AS X1])
         :        :           :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[11])
         :        :           :        :           :     :- Reused(reference_id=[1])
         :        :           :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[16])
         :        :           :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :        :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[12])
         :        :           :        :                 :- Exchange(distribution=[hash[x]])
         :        :           :        :                 :  +- Reused(reference_id=[1])
         :        :           :        :                 +- Exchange(distribution=[hash[y]])
         :        :           :        :                    +- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :        :                          :- Reused(reference_id=[1])
         :        :           :        :                          +- Reused(reference_id=[2])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[23])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[5])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x0 AS X0, x0 AS X1])(reuse_id=[10])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[18])
         :        :           :                       :- Reused(reference_id=[6])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[24])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[7])
         :        :           :     +- Reused(reference_id=[8])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x0 AS X0, x AS X1])
         :        :                          :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[19])
         :        :                          :     :- Reused(reference_id=[9])
         :        :                          :     +- Reused(reference_id=[8])
         :        :                          +- Reused(reference_id=[10])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[26])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right])\n:        :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[11])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[12])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[15])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[17])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[13])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[5])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[14])
         :           :        +- Reused(reference_id=[15])
         :           :- Reused(reference_id=[14])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[16])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[17])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x AS X0, x AS X1])
         :           :           :  +- Reused(reference_id=[18])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[19])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[21])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[6])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[20])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[16])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])
         :                    :- Reused(reference_id=[20])
         :                    +- Reused(reference_id=[21])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[8])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[broadcast])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Exchange(distribution=[broadcast])
         :                 :           +- Calc(select=[X1, x])
         :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :                 :- Reused(reference_id=[7])
         :                 :                 +- Reused(reference_id=[2])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[22])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[8])
         :                 :- Reused(reference_id=[8])
         :                 :- Reused(reference_id=[22])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Reused(reference_id=[24])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[25])
         :- Exchange(distribution=[hash[X1]])
         :  +- Reused(reference_id=[26])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[14])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[X1, x])
                  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
                  :        :  +- Exchange(distribution=[hash[X0, X1]])
                  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :        :        +- Union(all=[true], union=[X0, X1])
                  :        :           :- Calc(select=[x AS X0, x AS X1])
                  :        :           :  +- Reused(reference_id=[16])
                  :        :           +- Calc(select=[x0 AS X0, y AS X1])
                  :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :        :                 :- Reused(reference_id=[9])
                  :        :                 +- Reused(reference_id=[4])
                  :        +- Reused(reference_id=[2])
                  :- Reused(reference_id=[20])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[X0, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[27])
                           +- Reused(reference_id=[8])

Job has been submitted with JobID 057f07ccab9f6b5109cce7ae3d914b4b
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: c74455b7_b577_466b_b2ca_1832f99e01f6

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11265.724617581658, cumulative cost = {2.9979896814575315E8 rows, 9.61298790447755E9 cpu, 4.153044564E9 io, 1.1904640847960942E9 network, 7.074795720528173E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 11265.724617581658, cumulative cost = {2.9978770242113554E8 rows, 9.612807652883669E9 cpu, 4.153044564E9 io, 1.1904640847960942E9 network, 7.067585656772921E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11265.724617581658, cumulative cost = {2.9977643669651794E8 rows, 9.610824885350975E9 cpu, 4.153044564E9 io, 1.1901937074052722E9 network, 7.067585656772921E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 62149.12241803575, cumulative cost = {2.9976517097190034E8 rows, 9.609830499392286E9 cpu, 4.153044564E9 io, 1.1901937074052722E9 network, 7.060375593017669E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 61344.652174316165, cumulative cost = {2.1885056944109368E8 rows, 6.924041819344195E9 cpu, 3.045567384E9 io, 8.532748619809887E8 network, 5.129455952094703E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 5155.089272611638, cumulative cost = {1.0181206786663751E8 rows, 3.0647850549719515E9 cpu, 1.439727948E9 io, 3.7234172698503804E8 network, 2.405690114278915E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 5155.089272611638, cumulative cost = {1.018069127773649E8 rows, 3.0647850549719515E9 cpu, 1.439727948E9 io, 3.7234172698503804E8 network, 2.405690114278915E8 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.5180920109569535E7 rows, 1.640822108936049E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1838633163483706E8 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 27229.04401456522, cumulative cost = {5.515369106555497E7 rows, 1.640386444231816E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1664367281790489E8 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.51264620215404E7 rows, 1.6355941324852526E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1664367281790489E8 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 150213.25722326813, cumulative cost = {5.509923297752584E7 rows, 1.6331907203696804E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1490101400097272E8 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 129973.50581098741, cumulative cost = {4.200409142673239E7 rows, 1.1056380815585828E9 cpu, 6.09133656E8 io, 1.350641115650482E8 network, 7.824218386249316E7 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 75029.99134914529, cumulative cost = {2.5800432162015263E7 rows, 5.705845767342076E8 cpu, 3.87652344E8 io, 6.766265382518853E7 network, 4.0453349524925895E7 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 54790.712436864575, cumulative cost = {1.2780505272095935E7 rows, 4.310767138898416E7 cpu, 2.2153632E8 io, 745559.1992236084 network, 3794683.786446348 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 53365.77053761138, cumulative cost = {9536374.5253755 rows, 3.506244886670971E7 cpu, 1.66145808E8 io, 507915.6953430978 network, 2555157.7257502917 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 1424.871024253191, cumulative cost = {3189308.0250335713 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1424.871024253191, cumulative cost = {3187883.154009318 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :           :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 51940.89951335819, cumulative cost = {6293700.7298043175 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 51940.89951335819, cumulative cost = {6241759.830290959 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 346271.66342238797, cumulative cost = {6189816.930777601 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 346271.66342238797, cumulative cost = {5843545.267355213 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1423.7561492531913, cumulative cost = {3190219.603932825 rows, 8205027.153718099 cpu, 5.5386228E7 io, 270335.13146258716 network, 1236076.1806960565 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 1423.7561492531913, cumulative cost = {3188795.8477835716 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :  :     :           :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1423.7561492531913, cumulative cost = {3187372.091634318 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 1424.9418992531912, cumulative cost = {3189340.034283571 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 1424.9418992531912, cumulative cost = {3187915.092384318 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 61.605, cumulative cost = {1061.915 rows, 22251.4 cpu, 8592.0 io, 2791.3199999999997 network, 3035.2 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 61.605, cumulative cost = {1000.3100000000001 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :  :     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.605, cumulative cost = {938.705 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.27891228072, cumulative cost = {1.2944896898570182E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.27891228072, cumulative cost = {1.29246576196579E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {493.65000000000003 rows, 8745.0 cpu, 4080.0 io, 1273.1999999999998 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 50.55, cumulative cost = {443.1 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 50.55, cumulative cost = {392.55 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 54943.51446184211, cumulative cost = {1.6073685758906143E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 54943.51446184211, cumulative cost = {1.6018742244444301E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :  :     :           :        :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462622998246E7 rows, 5.29685996547266E8 cpu, 1.66111992E8 io, 6.740143373985966E7 network, 3.665582293847955E7 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 20231.846412280724, cumulative cost = {1.294439438357018E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924162537157899E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.751412280722, cumulative cost = {1.2944928293570178E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.751412280722, cumulative cost = {1.2924688542157898E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {524.1 rows, 9270.0 cpu, 4332.0 io, 1336.8 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 53.699999999999996, cumulative cost = {470.4 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 53.699999999999996, cumulative cost = {416.7 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 7138.217802845699, cumulative cost = {4.662083757852275E7 rows, 1.4236880079413633E9 cpu, 6.64478016E8 io, 1.6970696013767537E8 network, 1.2178293959609509E8 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 7138.217802845699, cumulative cost = {4.6613699360719904E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 7138.217802845699, cumulative cost = {4.660656114291706E7 rows, 1.422545893092908E9 cpu, 6.64478016E8 io, 1.6953564291040707E8 network, 1.2178293959609509E8 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.6598708925114214E7 rows, 1.4221080681434228E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.2177008759609509E8 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 47231.11868563799, cumulative cost = {4.6551477806428574E7 rows, 1.4213523702444527E9 cpu, 6.64473732E8 io, 1.6953135891040707E8 network, 1.1874729600021425E8 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 47231.11868563799, cumulative cost = {4.650424668774293E7 rows, 1.4130396933557804E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1874729600021425E8 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 260557.8137915295, cumulative cost = {4.645701556905729E7 rows, 1.408870768335116E9 cpu, 6.64473732E8 io, 1.6839781206195176E8 network, 1.1572450440433341E8 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 156277.13282013452, cumulative cost = {2.6322785123969078E7 rows, 7.194299750545319E8 cpu, 3.87618636E8 io, 8.430694160712057E7 network, 5.85397877826215E7 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 52418.68497139499, cumulative cost = {1.6076355019487392E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 52418.68497139499, cumulative cost = {1.6023936334515996E7 rows, 5.521735486883904E8 cpu, 2.2149006E8 io, 6.741150309940799E7 network, 3.78182786217119E7 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 349100.89980929997, cumulative cost = {1.59708036495446E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 349100.89980929997, cumulative cost = {1.56217027497353E7 rows, 5.49320765489916E8 cpu, 2.21485776E8 io, 6.740721909940799E7 network, 3.78054266217119E7 memory}
         :  :              :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 20285.332061999892, cumulative cost = {1.2965547849926E7 rows, 5.307020508334199E8 cpu, 1.6611648E8 io, 6.740721909940799E7 network, 3.666944802623991E7 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 103858.44784873951, cumulative cost = {1.009015297166155E7 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 103858.44784873951, cumulative cost = {9986294.523812812 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346278.0023249301, cumulative cost = {6536333.125964073 rows, 8.4897866814722E7 cpu, 1.10754996E8 io, 8584474.907712582 network, 1326404.7609096025 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 346278.0023249301, cumulative cost = {6190055.123639143 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.0023249301, cumulative cost = {5843777.121314213 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 104280.68097139499, cumulative cost = {1.9873672631296687E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 104280.68097139499, cumulative cost = {1.976939195032529E7 rows, 6.891802354667926E8 cpu, 2.76855096E8 io, 8.409087045483117E7 network, 5.71847166217119E7 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 349092.8898093, cumulative cost = {1.6319008319353897E7 rows, 6.069554339483182E8 cpu, 2.21481516E8 io, 7.577990685483117E7 network, 3.7789612221711904E7 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 349092.8898093, cumulative cost = {1.5969915429544598E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 349092.8898093, cumulative cost = {1.5620822539735299E7 rows, 5.483078284603559E8 cpu, 2.21481516E8 io, 6.740167749940798E7 network, 3.7789612221711904E7 memory}
         :  :              :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[broadcast]): rowcount = 20231.932061999894, cumulative cost = {1.2964675649926E7 rows, 5.296895410038599E8 cpu, 1.6611222E8 io, 6.740167749940798E7 network, 3.665662402623991E7 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 20231.932061999894, cumulative cost = {1.2944443717864E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.932061999894, cumulative cost = {1.2924211785802E7 rows, 5.264524318739399E8 cpu, 1.6611222E8 io, 6.691611112991998E7 network, 3.665662402623991E7 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 56189.56290170453, cumulative cost = {1.1697715692228188E8 rows, 3.8591954197200694E9 cpu, 1.605839436E9 io, 4.809331349959507E8 network, 2.723765837815788E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], build=[right]): rowcount = 56189.56290170453, cumulative cost = {1.1692096735938017E8 rows, 3.8591954197200694E9 cpu, 1.605839436E9 io, 4.809331349959507E8 network, 2.723765837815788E8 memory}
         :        :- Exchange(distribution=[hash[x]]): rowcount = 347368.0419967983, cumulative cost = {6.1656628642894365E7 rows, 2.210802054701483E9 cpu, 8.30589504E8 io, 2.776448710922385E8 network, 1.524654256819261E8 memory}
         :        :  +- Calc(select=[x, X1]): rowcount = 347368.0419967983, cumulative cost = {6.1309260600897565E7 rows, 2.152444223646021E9 cpu, 8.30589504E8 io, 2.693080380843153E8 network, 1.524654256819261E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347368.0419967983, cumulative cost = {6.0961892558900766E7 rows, 2.152444223646021E9 cpu, 8.30589504E8 io, 2.693080380843153E8 network, 1.524654256819261E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 8732.94664532206, cumulative cost = {5.830747051690397E7 rows, 2.133917928072858E9 cpu, 7.75220208E8 io, 2.693080380843153E8 network, 1.5197638066978806E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.829873757025865E7 rows, 2.1325206566096065E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5197638066978806E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8732.94664532206, cumulative cost = {5.829000462361333E7 rows, 2.1323809294632814E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5141747208448744E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.828127167696801E7 rows, 2.1308439308537047E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.5141747208448744E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 48176.658719606, cumulative cost = {5.827253873032269E7 rows, 2.130073104314191E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.508585634991868E8 memory}
         :        :                       :- Union(all=[true], union=[X0, X1]): rowcount = 24910.099695764, cumulative cost = {3.2309228869832944E7 rows, 1.0727808156334072E9 cpu, 4.42996044E8 io, 1.345713597755602E8 network, 7.641318913537964E7 memory}
         :        :                       :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :        :                       :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :        :                       :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                       :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                       :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                       :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                       :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                       :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                       :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :        :                       :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :        :                       :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :        :                       :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :        :                       :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :        :                       :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :        :                       :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :        :                       :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :        :                       :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :        :                       :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :  +- Calc(select=[X00 AS X0, X1]): rowcount = 4458.500958553175, cumulative cost = {1.6149045762927858E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
         :        :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4458.500958553175, cumulative cost = {1.6144587261969306E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
         :        :                       :        :- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
         :        :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :        +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
         :        :                       :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :        :                       :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :        :                       :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :        :                       :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :        :                       :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :                       :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :                          +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :                             +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :                             :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                             :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                             :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :        :                                +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                                      :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X1]]): rowcount = 27229.04401456522, cumulative cost = {5.52081491535841E7 rows, 1.6453965883304958E9 cpu, 7.75249932E8 io, 2.0328826390371224E8 network, 1.1838633163483706E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.5180920109569535E7 rows, 1.640822108936049E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1838633163483706E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 27229.04401456522, cumulative cost = {5.515369106555497E7 rows, 1.640386444231816E9 cpu, 7.75249932E8 io, 2.0263476684736267E8 network, 1.1664367281790489E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 27229.04401456522, cumulative cost = {5.51264620215404E7 rows, 1.6355941324852526E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1664367281790489E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 150213.25722326813, cumulative cost = {5.509923297752584E7 rows, 1.6331907203696804E9 cpu, 7.75249932E8 io, 2.019812697910131E8 network, 1.1490101400097272E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 129973.50581098741, cumulative cost = {4.200409142673239E7 rows, 1.1056380815585828E9 cpu, 6.09133656E8 io, 1.350641115650482E8 network, 7.824218386249316E7 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 75029.99134914529, cumulative cost = {2.5800432162015263E7 rows, 5.705845767342076E8 cpu, 3.87652344E8 io, 6.766265382518853E7 network, 4.0453349524925895E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 54790.712436864575, cumulative cost = {1.2780505272095935E7 rows, 4.310767138898416E7 cpu, 2.2153632E8 io, 745559.1992236084 network, 3794683.786446348 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 53365.77053761138, cumulative cost = {9536374.5253755 rows, 3.506244886670971E7 cpu, 1.66145808E8 io, 507915.6953430978 network, 2555157.7257502917 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 1424.871024253191, cumulative cost = {3189308.0250335713 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1424.871024253191, cumulative cost = {3187883.154009318 rows, 7989802.229837588 cpu, 5.539026E7 io, 237556.5638805106 network, 1239323.2006960565 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 61.1325, cumulative cost = {1030.0475000000001 rows, 21625.6 cpu, 8340.0 io, 2704.38 network, 2858.7999999999997 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 61.1325, cumulative cost = {968.9150000000001 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :                       :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.1325, cumulative cost = {907.7825 rows, 11844.4 cpu, 8340.0 io, 1237.1999999999998 network, 2858.7999999999997 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {489.65000000000003 rows, 8584.0 cpu, 4056.0 io, 1237.1999999999998 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 51940.89951335819, cumulative cost = {6293700.7298043175 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 51940.89951335819, cumulative cost = {6241759.830290959 rows, 2.7019280866334513E7 cpu, 1.10755548E8 io, 270359.13146258716 network, 1315834.5250542352 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 346271.66342238797, cumulative cost = {6189816.930777601 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 346271.66342238797, cumulative cost = {5843545.267355213 rows, 2.6672849202912126E7 cpu, 1.10755524E8 io, 270335.13146258716 network, 1315806.5250542352 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1423.7561492531913, cumulative cost = {3190219.603932825 rows, 8205027.153718099 cpu, 5.5386228E7 io, 270335.13146258716 network, 1236076.1806960565 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 1423.7561492531913, cumulative cost = {3188795.8477835716 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :                       :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 1423.7561492531913, cumulative cost = {3187372.091634318 rows, 7977226.169837588 cpu, 5.5386228E7 io, 236164.98388051058 network, 1236076.1806960565 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 1424.9418992531912, cumulative cost = {3189340.034283571 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 1424.9418992531912, cumulative cost = {3187915.092384318 rows, 7990431.809837588 cpu, 5.5390512E7 io, 237643.5038805106 network, 1239526.0606960563 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :        :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 61.605, cumulative cost = {1061.915 rows, 22251.4 cpu, 8592.0 io, 2791.3199999999997 network, 3035.2 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 61.605, cumulative cost = {1000.3100000000001 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 61.605, cumulative cost = {938.705 rows, 12394.6 cpu, 8592.0 io, 1312.8 network, 3035.2 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.27891228072, cumulative cost = {1.2944896898570182E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.27891228072, cumulative cost = {1.29246576196579E7 rows, 5.2740187535387427E8 cpu, 1.66116024E8 io, 6.691709462596492E7 network, 3.665866573847955E7 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 50.55, cumulative cost = {493.65000000000003 rows, 8745.0 cpu, 4080.0 io, 1273.1999999999998 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 50.55, cumulative cost = {443.1 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 50.55, cumulative cost = {392.55 rows, 657.0 cpu, 4080.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 54943.51446184211, cumulative cost = {1.6073685758906143E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right]): rowcount = 54943.51446184211, cumulative cost = {1.6018742244444301E7 rows, 5.3492353131856424E8 cpu, 2.21481312E8 io, 6.740145773985966E7 network, 3.778883433756727E7 memory}
         :                       :        :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462622998246E7 rows, 5.29685996547266E8 cpu, 1.66111992E8 io, 6.740143373985966E7 network, 3.665582293847955E7 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 20231.846412280724, cumulative cost = {1.294439438357018E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924162537157899E7 rows, 5.264489011213011E8 cpu, 1.66111992E8 io, 6.6915869425964914E7 network, 3.665582293847955E7 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 20239.751412280722, cumulative cost = {1.2944928293570178E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 20239.751412280722, cumulative cost = {1.2924688542157898E7 rows, 5.2740242555387425E8 cpu, 1.66116276E8 io, 6.691715822596491E7 network, 3.665883013847955E7 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {524.1 rows, 9270.0 cpu, 4332.0 io, 1336.8 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 53.699999999999996, cumulative cost = {470.4 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 53.699999999999996, cumulative cost = {416.7 rows, 678.0 cpu, 4332.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 804.4702437195915, cumulative cost = {8.085245240838864E7 rows, 2.685726530925672E9 cpu, 1.10747718E9 io, 3.3691884542428356E8 network, 1.9309196409229663E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 804.4702437195915, cumulative cost = {8.085164793814492E7 rows, 2.685726530925672E9 cpu, 1.10747718E9 io, 3.3691884542428356E8 network, 1.9309196409229663E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.2547352871652175E7 rows, 5.528190029437503E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.102730827068786E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.7929613323013, cumulative cost = {2.254335007869084E7 rows, 5.52754958256369E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.07711295211626E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.253934728572951E7 rows, 5.520504666951745E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.07711295211626E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 22082.030070187793, cumulative cost = {2.2535344492768176E7 rows, 5.516971542140515E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.0514950771637335E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 20445.007666607664, cumulative cost = {1.6134251344242299E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 20445.007666607664, cumulative cost = {1.611380633657569E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 1422.0750288462589, cumulative cost = {3189436.6381634637 rows, 8078380.879230922 cpu, 5.5377408E7 io, 265717.80530771165 network, 1225528.0246154743 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 1422.0750288462589, cumulative cost = {3188014.5631346176 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1422.0750288462589, cumulative cost = {3186592.4881057716 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 1637.02240358013, cumulative cost = {6379011.11845569 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1637.02240358013, cumulative cost = {6377374.09605211 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
               :                 :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 1475.475028846259, cumulative cost = {3190308.838163465 rows, 8213097.380577081 cpu, 5.5381668E7 io, 271259.4053077117 network, 1238352.0246154743 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 1475.475028846259, cumulative cost = {3188833.3631346184 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1475.475028846259, cumulative cost = {3187357.888105772 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1360.3419967983089, cumulative cost = {5.830349059624904E7 rows, 2.1328646229022567E9 cpu, 7.7522424E8 io, 2.6913512757275075E8 network, 1.5198847666978806E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1360.3419967983089, cumulative cost = {5.830213025425224E7 rows, 2.132646968182769E9 cpu, 7.7522424E8 io, 2.691024793648276E8 network, 1.5198847666978806E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1360.3419967983089, cumulative cost = {5.830076991225544E7 rows, 2.132646968182769E9 cpu, 7.7522424E8 io, 2.691024793648276E8 network, 1.5198847666978806E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.829873757025865E7 rows, 2.1325206566096065E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5197638066978806E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8732.94664532206, cumulative cost = {5.829000462361333E7 rows, 2.1323809294632814E9 cpu, 7.75220208E8 io, 2.690984473648276E8 network, 1.5141747208448744E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8732.94664532206, cumulative cost = {5.828127167696801E7 rows, 2.1308439308537047E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.5141747208448744E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 48176.658719606, cumulative cost = {5.827253873032269E7 rows, 2.130073104314191E9 cpu, 7.75220208E8 io, 2.6888885664533985E8 network, 1.508585634991868E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 24910.099695764, cumulative cost = {3.2309228869832944E7 rows, 1.0727808156334072E9 cpu, 4.42996044E8 io, 1.345713597755602E8 network, 7.641318913537964E7 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 4458.500958553175, cumulative cost = {1.6149045762927858E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4458.500958553175, cumulative cost = {1.6144587261969306E7 rows, 5.370964491557035E8 cpu, 2.214984E8 io, 6.7381735497681E7 network, 3.843101743599049E7 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 20285.332061999892, cumulative cost = {1.2945262517864E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 20285.332061999892, cumulative cost = {1.2924977185802E7 rows, 5.274563977034999E8 cpu, 1.6611648E8 io, 6.692037112991998E7 network, 3.666944802623991E7 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X10 AS X0, X1]): rowcount = 23266.559023842, cumulative cost = {2.591513320177014E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right]): rowcount = 23266.559023842, cumulative cost = {2.58918666427463E7 rows, 1.0572441120220642E9 cpu, 3.32224164E8 io, 1.3431749686977965E8 network, 7.444537436380717E7 memory}
                        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.290397785374E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
                        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.276909930666E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
                        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2634220759580001E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
                        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.2499342212500002E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
                        :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                 :           :        +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                        :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                        :                    +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                        :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                        :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,2,1,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], build=[right])\n:        :- [#4] Exchange(distribution=[hash[x]])\n:        +- [#5] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:        :- [#5] Calc(select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X10 AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, X10, y], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :        :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :        :           :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :           :- Exchange(distribution=[hash[y]])
         :        :           :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :           :- Exchange(distribution=[hash[x]])
         :        :           :           :  +- Calc(select=[x, y0])(reuse_id=[5])
         :        :           :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :           :        :- Reused(reference_id=[1])
         :        :           :           :        +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[13])
         :        :           :           :- Reused(reference_id=[1])
         :        :           :           +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :        :           :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X1, y])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :        :           :- Calc(select=[y AS X0, x AS X1])
         :        :           :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[11])
         :        :           :        :           :     :- Reused(reference_id=[1])
         :        :           :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[16])
         :        :           :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :        :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[12])
         :        :           :        :                 :- Exchange(distribution=[hash[x]])
         :        :           :        :                 :  +- Reused(reference_id=[1])
         :        :           :        :                 +- Exchange(distribution=[hash[y]])
         :        :           :        :                    +- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :        :                          :- Reused(reference_id=[1])
         :        :           :        :                          +- Reused(reference_id=[2])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[23])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[5])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x0 AS X0, x0 AS X1])(reuse_id=[10])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[18])
         :        :           :                       :- Reused(reference_id=[6])
         :        :           :                       +- Reused(reference_id=[4])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[24])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[7])
         :        :           :     +- Reused(reference_id=[8])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x0 AS X0, x AS X1])
         :        :                          :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[19])
         :        :                          :     :- Reused(reference_id=[9])
         :        :                          :     +- Reused(reference_id=[8])
         :        :                          +- Reused(reference_id=[10])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[26])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], isBroadcast=[true], build=[right])\n:        :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[14])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[11])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[12])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[15])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[17])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[13])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[5])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[14])
         :           :        +- Reused(reference_id=[15])
         :           :- Reused(reference_id=[14])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[16])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[17])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x AS X0, x AS X1])
         :           :           :  +- Reused(reference_id=[18])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[19])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[21])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[6])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[20])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[16])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])
         :                    :- Reused(reference_id=[20])
         :                    +- Reused(reference_id=[21])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[8])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[broadcast])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Exchange(distribution=[broadcast])
         :                 :           +- Calc(select=[X1, x])
         :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :                 :- Reused(reference_id=[7])
         :                 :                 +- Reused(reference_id=[2])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[22])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[8])
         :                 :- Reused(reference_id=[8])
         :                 :- Reused(reference_id=[22])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Reused(reference_id=[24])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[25])
         :- Exchange(distribution=[hash[X1]])
         :  +- Reused(reference_id=[26])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[14])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[X1, x])
                  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
                  :        :  +- Exchange(distribution=[hash[X0, X1]])
                  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :        :        +- Union(all=[true], union=[X0, X1])
                  :        :           :- Calc(select=[x AS X0, x AS X1])
                  :        :           :  +- Reused(reference_id=[16])
                  :        :           +- Calc(select=[x0 AS X0, y AS X1])
                  :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :        :                 :- Reused(reference_id=[9])
                  :        :                 +- Reused(reference_id=[4])
                  :        +- Reused(reference_id=[2])
                  :- Reused(reference_id=[20])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[X0, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[27])
                           +- Reused(reference_id=[8])

Job has been submitted with JobID 05eaeb4c160ea092f2aa6e437b6638c3
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 8aa4b33b_18b0_404d_a2bd_1cc8e219e163

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31297.73686117355, cumulative cost = {8.549276814251661E8 rows, 3.0407291902356735E10 cpu, 1.1538751068E10 io, 3.835737089384637E9 network, 1.9647775494519343E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 31297.73686117355, cumulative cost = {8.548963836883049E8 rows, 3.0406791138566956E10 cpu, 1.1538751068E10 io, 3.835737089384637E9 network, 1.9627744942928193E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31297.73686117355, cumulative cost = {8.548650859514437E8 rows, 3.040128273687939E10 cpu, 1.1538751068E10 io, 3.834985943699969E9 network, 1.9627744942928193E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 172658.83426237106, cumulative cost = {8.548337882145824E8 rows, 3.0398520195531193E10 cpu, 1.1538751068E10 io, 3.834985943699969E9 network, 1.9607714391337042E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 170431.76057982302, cumulative cost = {6.296038463005483E8 rows, 2.2864246181081833E10 cpu, 8.46175056E9 io, 2.8886088410923505E9 network, 1.4245486952906876E9 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 14311.916097586998, cumulative cost = {2.966382979221992E8 rows, 1.0830644600919132E10 cpu, 4.000107804E9 io, 1.3651901322658482E9 network, 6.68078275344717E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 14311.916097586998, cumulative cost = {2.966239860061016E8 rows, 1.0830644600919132E10 cpu, 4.000107804E9 io, 1.3651901322658482E9 network, 6.68078275344717E8 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5426545786818516E8 rows, 4.720261675602834E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2876820009058034E8 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 75645.78035184415, cumulative cost = {1.5418981208783332E8 rows, 4.719051343117205E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2392687014806235E8 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5411416630748147E8 rows, 4.70573768577528E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.2392687014806235E8 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 417311.715232021, cumulative cost = {1.5403852052712962E8 rows, 4.699060698331568E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.1908554020554435E8 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 361087.0515946656, cumulative cost = {1.1765553303187577E8 rows, 3.2333390536131954E9 cpu, 1.692383616E9 io, 3.982993767677151E8 network, 2.172467829683344E8 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 208428.0797990623, cumulative cost = {7.167344484803073E7 rows, 1.5847815698546953E9 cpu, 1.0770072E9 io, 1.8795411109844175E8 network, 1.1226487572743258E8 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 152202.62866170693, cumulative cost = {3.549928866320984E7 rows, 1.1926789177175549E8 cpu, 6.15465888E8 io, 2032129.316464913 network, 1.0425812490222644E7 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 148259.35770443527, cumulative cost = {2.648950159348816E7 rows, 9.708832243339823E7 cpu, 4.6158924E8 io, 1385560.3633014485 network, 7022416.4600174995 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 3943.389082271652, cumulative cost = {8857637.789809976 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3943.389082271652, cumulative cost = {8853694.400727704 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 98.2725, cumulative cost = {1732.2675 rows, 36148.799999999996 cpu, 14004.0 io, 4546.139999999999 network, 5076.4 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 98.2725, cumulative cost = {1633.995 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :  :     :           :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 98.2725, cumulative cost = {1535.7224999999999 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 144315.9686221636, cumulative cost = {1.748360444597375E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 144315.9686221636, cumulative cost = {1.7339288477351587E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 962105.4574810907, cumulative cost = {1.7194970508729424E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 962105.4574810907, cumulative cost = {1.6232865051248334E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 3941.3832072716527, cumulative cost = {8860664.593767244 rows, 2.2637090542859E7 cpu, 1.53869868E8 io, 738822.5101379841 network, 3397936.8702051435 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 3941.3832072716527, cumulative cost = {8856723.210559973 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :  :     :           :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3941.3832072716527, cumulative cost = {8852781.827352703 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 3943.2709572716526, cumulative cost = {8857584.441059977 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 3943.2709572716526, cumulative cost = {8853641.170102704 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 97.485, cumulative cost = {1679.1549999999997 rows, 35105.799999999996 cpu, 13584.0 io, 4401.24 network, 4782.4 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 97.485, cumulative cost = {1581.6699999999998 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :  :     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 97.485, cumulative cost = {1484.185 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 56225.45113735539, cumulative cost = {3.596572810502183E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56225.45113735539, cumulative cost = {3.590950265388447E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {876.4499999999999 rows, 15344.999999999998 cpu, 7248.0 io, 2223.6 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 90.14999999999999, cumulative cost = {786.3 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 90.14999999999999, cumulative cost = {696.15 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 152658.97179560328, cumulative cost = {4.562100113225038E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 152658.97179560328, cumulative cost = {4.546834216045478E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :  :     :           :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :           :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[hash[y0]]): rowcount = 56212.07863735539, cumulative cost = {3.602104298865917E7 rows, 1.4721099106778064E9 cpu, 4.61534112E8 io, 1.8726889606927338E8 network, 1.0183400283720993E8 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 56212.07863735539, cumulative cost = {3.596483091002182E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908618831384465E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 56224.66363735539, cumulative cost = {3.5965675780021824E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56224.66363735539, cumulative cost = {3.590945111638447E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {825.6999999999999 rows, 14469.999999999998 cpu, 6828.0 io, 2085.6 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 84.89999999999999, cumulative cost = {740.8 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 84.89999999999999, cumulative cost = {655.9 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 19766.99363206918, cumulative cost = {1.4234421622181886E8 rows, 6.109619623124428E9 cpu, 1.846183296E9 io, 7.791534129877121E8 network, 3.382031236107407E8 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 19766.99363206918, cumulative cost = {1.423244492281868E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19766.99363206918, cumulative cost = {1.423046822345547E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4228378524092263E8 rows, 6.105312264482921E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.381827836107407E8 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 131214.95754712788, cumulative cost = {1.421525702833755E8 rows, 6.103212825162167E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.297850263277245E8 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4202135532582837E8 rows, 6.080118992633872E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.297850263277245E8 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 723867.7259114801, cumulative cost = {1.4189014036828125E8 rows, 6.068537109019288E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.213872690447083E8 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 434135.9698540041, cumulative cost = {7.953980905368534E7 rows, 3.075755645924015E9 cpu, 1.076951508E9 io, 3.8804849938685584E8 network, 1.625369236107142E8 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 145578.55955747602, cumulative cost = {5.1074726335301235E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 145578.55955747602, cumulative cost = {5.092914777574376E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :              :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 288557.4102965281, cumulative cost = {2.8030946748530105E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 288557.4102965281, cumulative cost = {2.7742389338233575E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 962117.0686435205, cumulative cost = {1.815780992793705E7 rows, 2.3569002502525926E8 cpu, 3.07712964E8 io, 2.3837071183496352E7 network, 3641188.576720077 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 962117.0686435205, cumulative cost = {1.7195692859293528E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.0686435205, cumulative cost = {1.6233575790650006E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 289731.75605747604, cumulative cost = {6.162646358868442E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 289731.75605747604, cumulative cost = {6.133673183262694E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 969946.0403831735, cumulative cost = {5.175097807656946E7 rows, 2.763680923046296E9 cpu, 6.15375948E8 io, 3.6438941077255565E8 network, 1.0498046143399411E8 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 969946.0403831735, cumulative cost = {5.0781032036186285E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 969946.0403831735, cumulative cost = {4.981108599580311E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :              :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 156119.84448223602, cumulative cost = {3.3279511661776936E8 rows, 1.2033431148402122E10 cpu, 4.461642756E9 io, 1.5234187088265023E9 network, 7.564704199459705E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], build=[right]): rowcount = 156119.84448223602, cumulative cost = {3.326389967732871E8 rows, 1.2033431148402122E10 cpu, 4.461642756E9 io, 1.5234187088265023E9 network, 7.564704199459705E8 memory}
         :        :- Exchange(distribution=[hash[x]]): rowcount = 965153.1828630627, cumulative cost = {1.7814177328026786E8 rows, 7.292134589994459E9 cpu, 2.307718248E9 io, 9.355664908199219E8 network, 4.23466056155687E8 memory}
         :        :  +- Calc(select=[x, X1]): rowcount = 965153.1828630627, cumulative cost = {1.771766200974048E8 rows, 7.129988855273464E9 cpu, 2.307718248E9 io, 9.124028144312084E8 network, 4.23466056155687E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965153.1828630627, cumulative cost = {1.7621146691454175E8 rows, 7.129988855273464E9 cpu, 2.307718248E9 io, 9.124028144312084E8 network, 4.23466056155687E8 memory}
         :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[hash[X0]]): rowcount = 24259.55242041827, cumulative cost = {1.624261237316787E8 rows, 6.001618058854101E9 cpu, 2.153875968E9 io, 7.585605344312084E8 network, 4.2210752122014356E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.624018641792583E8 rows, 5.997542454047471E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2210752122014356E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 24259.55242041827, cumulative cost = {1.6237760462683788E8 rows, 5.997154301208744E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2055490986523676E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.6235334507441747E8 rows, 5.992884619982751E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.2055490986523676E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 133831.59489185002, cumulative cost = {1.6232908552199706E8 rows, 5.990743314464481E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.1900229851032996E8 memory}
         :        :                       :- Union(all=[true], union=[X0, X1]): rowcount = 69187.8758713211, cumulative cost = {8.98178695899814E7 rows, 2.989809670730688E9 cpu, 1.230808236E9 io, 3.7521398334771514E8 network, 2.121878902391259E8 memory}
         :        :                       :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :        :                       :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :        :                       :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                       :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                       :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                       :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                       :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                       :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                       :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                       :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                       :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                       :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :        :                       :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :        :                       :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :        :                       :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :        :                       :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :        :                       :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :        :                       :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :        :                       :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :        :                       :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :        :                       :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                       :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                       :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  +- Calc(select=[X00 AS X0, X1]): rowcount = 12373.128590445167, cumulative cost = {4.4921287744794734E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
         :        :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], build=[right]): rowcount = 12373.128590445167, cumulative cost = {4.490891461620429E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
         :        :                       :        :- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :        :                       :        :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :                       :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :                       :        :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :                       :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :                       :        :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :                       :        :        :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :        :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :        :        :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                       :        :        :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                       :        :        :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :        :        :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :        :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :        :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                       :        :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                       :        :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :        :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :        +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
         :        :                       :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :        :                       :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :        :                       :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :        :                       :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :        :                       :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :                       :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :                             +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :        :                             :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :        :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                             :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :        :                                +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                                      :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X1]]): rowcount = 75645.78035184415, cumulative cost = {1.54341103648537E8 rows, 4.732970166701943E9 cpu, 2.153924508E9 io, 5.878522180065804E8 network, 3.2876820009058034E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5426545786818516E8 rows, 4.720261675602834E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2876820009058034E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 75645.78035184415, cumulative cost = {1.5418981208783332E8 rows, 4.719051343117205E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2392687014806235E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5411416630748147E8 rows, 4.70573768577528E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.2392687014806235E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 417311.715232021, cumulative cost = {1.5403852052712962E8 rows, 4.699060698331568E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.1908554020554435E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 361087.0515946656, cumulative cost = {1.1765553303187577E8 rows, 3.2333390536131954E9 cpu, 1.692383616E9 io, 3.982993767677151E8 network, 2.172467829683344E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 208428.0797990623, cumulative cost = {7.167344484803073E7 rows, 1.5847815698546953E9 cpu, 1.0770072E9 io, 1.8795411109844175E8 network, 1.1226487572743258E8 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 152202.62866170693, cumulative cost = {3.549928866320984E7 rows, 1.1926789177175549E8 cpu, 6.15465888E8 io, 2032129.316464913 network, 1.0425812490222644E7 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 148259.35770443527, cumulative cost = {2.648950159348816E7 rows, 9.708832243339823E7 cpu, 4.6158924E8 io, 1385560.3633014485 network, 7022416.4600174995 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 3943.389082271652, cumulative cost = {8857637.789809976 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3943.389082271652, cumulative cost = {8853694.400727704 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 98.2725, cumulative cost = {1732.2675 rows, 36148.799999999996 cpu, 14004.0 io, 4546.139999999999 network, 5076.4 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 98.2725, cumulative cost = {1633.995 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :                       :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 98.2725, cumulative cost = {1535.7224999999999 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 144315.9686221636, cumulative cost = {1.748360444597375E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 144315.9686221636, cumulative cost = {1.7339288477351587E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 962105.4574810907, cumulative cost = {1.7194970508729424E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 962105.4574810907, cumulative cost = {1.6232865051248334E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 3941.3832072716527, cumulative cost = {8860664.593767244 rows, 2.2637090542859E7 cpu, 1.53869868E8 io, 738822.5101379841 network, 3397936.8702051435 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 3941.3832072716527, cumulative cost = {8856723.210559973 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :                       :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3941.3832072716527, cumulative cost = {8852781.827352703 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 3943.2709572716526, cumulative cost = {8857584.441059977 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 3943.2709572716526, cumulative cost = {8853641.170102704 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 97.485, cumulative cost = {1679.1549999999997 rows, 35105.799999999996 cpu, 13584.0 io, 4401.24 network, 4782.4 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 97.485, cumulative cost = {1581.6699999999998 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 97.485, cumulative cost = {1484.185 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 56225.45113735539, cumulative cost = {3.596572810502183E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56225.45113735539, cumulative cost = {3.590950265388447E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {876.4499999999999 rows, 15344.999999999998 cpu, 7248.0 io, 2223.6 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 90.14999999999999, cumulative cost = {786.3 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 90.14999999999999, cumulative cost = {696.15 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 152658.97179560328, cumulative cost = {4.562100113225038E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 152658.97179560328, cumulative cost = {4.546834216045478E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :                       :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[y0]]): rowcount = 56212.07863735539, cumulative cost = {3.602104298865917E7 rows, 1.4721099106778064E9 cpu, 4.61534112E8 io, 1.8726889606927338E8 network, 1.0183400283720993E8 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 56212.07863735539, cumulative cost = {3.596483091002182E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908618831384465E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 56224.66363735539, cumulative cost = {3.5965675780021824E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56224.66363735539, cumulative cost = {3.590945111638447E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {825.6999999999999 rows, 14469.999999999998 cpu, 6828.0 io, 2085.6 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 84.89999999999999, cumulative cost = {740.8 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 84.89999999999999, cumulative cost = {655.9 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2227.0736825480276, cumulative cost = {2.2505728307977176E8 rows, 7.534101355615097E9 cpu, 3.077000508E9 io, 9.463771026076185E8 network, 5.362227438430167E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2227.0736825480276, cumulative cost = {2.250550560060892E8 rows, 7.534101355615097E9 cpu, 3.077000508E9 io, 9.463771026076185E8 network, 5.362227438430167E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.263857795455921E7 rows, 1.5355486186271033E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.1388480238254161E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11118.225020590779, cumulative cost = {6.262745972953862E7 rows, 1.535370727026774E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.131732359812238E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.261634150451803E7 rows, 1.53341391942315E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.131732359812238E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 61335.41794529453, cumulative cost = {6.2605223279497445E7 rows, 1.5324325527360253E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.12461669579906E8 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 56803.004187689134, cumulative cost = {4.4825714625507E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 56803.004187689134, cumulative cost = {4.476891162131931E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 3940.5036688916416, cumulative cost = {8859707.86438451 rows, 2.2367324227663238E7 cpu, 1.53856728E8 io, 732276.6750760621 network, 3384091.130787534 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 3940.5036688916416, cumulative cost = {8855767.360715618 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 3940.5036688916416, cumulative cost = {8851826.857046727 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 4532.413757605399, cumulative cost = {1.771817323604515E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4532.413757605399, cumulative cost = {1.7713640822287545E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 4025.1036688916415, cumulative cost = {8861089.664384509 rows, 2.2659503398878183E7 cpu, 1.53863484E8 io, 741063.075076062 network, 3404403.130787534 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 4025.1036688916415, cumulative cost = {8857064.560715618 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4025.1036688916415, cumulative cost = {8853039.457046727 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 3728.93286306274, cumulative cost = {1.6241425097784746E8 rows, 5.998433959724924E9 cpu, 2.153883168E9 io, 7.580749995618318E8 network, 4.2212912122014356E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 3728.93286306274, cumulative cost = {1.624105220449844E8 rows, 5.997837330466834E9 cpu, 2.153883168E9 io, 7.579855051731184E8 network, 4.2212912122014356E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 3728.93286306274, cumulative cost = {1.6240679311212134E8 rows, 5.997837330466834E9 cpu, 2.153883168E9 io, 7.579855051731184E8 network, 4.2212912122014356E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.624018641792583E8 rows, 5.997542454047471E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2210752122014356E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 24259.55242041827, cumulative cost = {1.6237760462683788E8 rows, 5.997154301208744E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2055490986523676E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.6235334507441747E8 rows, 5.992884619982751E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.2055490986523676E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 133831.59489185002, cumulative cost = {1.6232908552199706E8 rows, 5.990743314464481E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.1900229851032996E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 69187.8758713211, cumulative cost = {8.98178695899814E7 rows, 2.989809670730688E9 cpu, 1.230808236E9 io, 3.7521398334771514E8 network, 2.121878902391259E8 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 12373.128590445167, cumulative cost = {4.4921287744794734E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], build=[right]): rowcount = 12373.128590445167, cumulative cost = {4.490891461620429E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
                        :           :        :- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
                        :           :        :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :           :        :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :           :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :           :        :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :           :        :        :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :        :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :        :        :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :        :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :        :        :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :        :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :        :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,2,1,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], build=[right])\n:        :- [#4] Exchange(distribution=[hash[x]])\n:        +- [#5] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], build=[right])\n:        :- [#5] Exchange(distribution=[hash[X0]])\n:        +- [#6] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[11])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[12])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[14])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[23])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[15])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[5])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[13])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[25])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[5])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[19])
         :        :           :                       :- Reused(reference_id=[6])
         :        :           :                       +- Reused(reference_id=[7])
         :        :           :- Exchange(distribution=[hash[X0]])(reuse_id=[26])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[8])
         :        :           :        +- Reused(reference_id=[7])
         :        :           +- Exchange(distribution=[hash[X1]])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x0 AS X0, x AS X1])
         :        :                          :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[20])
         :        :                          :     :- Reused(reference_id=[9])
         :        :                          :     +- Reused(reference_id=[7])
         :        :                          +- Reused(reference_id=[10])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[28])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:        :- [#3] Exchange(distribution=[hash[x]])\n:        +- [#4] Exchange(distribution=[hash[y0]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[11])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[12])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[17])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[18])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[14])
         :           :- Reused(reference_id=[15])
         :           :- Exchange(distribution=[hash[y0]])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[16])
         :           :        +- Reused(reference_id=[17])
         :           :- Reused(reference_id=[16])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[18])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :           :           :  +- Reused(reference_id=[19])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[20])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[22])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[13])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[21])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[6])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])
         :                    :- Reused(reference_id=[21])
         :                    +- Reused(reference_id=[22])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[hash[X0]])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
         :                 :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[24])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[24])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[25])
         :                 :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[26])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[27])
         :- Exchange(distribution=[hash[X1]])
         :  +- Reused(reference_id=[28])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[16])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[X1, x])
                  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[29])
                  :        :  +- Exchange(distribution=[hash[X0, X1]])
                  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :        :        +- Union(all=[true], union=[X0, X1])
                  :        :           :- Calc(select=[x AS X0, x AS X1])
                  :        :           :  +- Reused(reference_id=[6])
                  :        :           +- Calc(select=[x0 AS X0, y AS X1])
                  :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :        :                 :- Reused(reference_id=[9])
                  :        :                 +- Reused(reference_id=[4])
                  :        +- Reused(reference_id=[2])
                  :- Reused(reference_id=[21])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[X0, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[29])
                           +- Reused(reference_id=[7])

Job has been submitted with JobID 84010e44ebd157b45ec3d29362c1553d
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: edf039a5_c332_4ad1_9048_ae86b684afbb

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31297.73686117355, cumulative cost = {8.549276814251661E8 rows, 3.0407291902356735E10 cpu, 1.1538751068E10 io, 3.835737089384637E9 network, 1.9647775494519343E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 31297.73686117355, cumulative cost = {8.548963836883049E8 rows, 3.0406791138566956E10 cpu, 1.1538751068E10 io, 3.835737089384637E9 network, 1.9627744942928193E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31297.73686117355, cumulative cost = {8.548650859514437E8 rows, 3.040128273687939E10 cpu, 1.1538751068E10 io, 3.834985943699969E9 network, 1.9627744942928193E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 172658.83426237106, cumulative cost = {8.548337882145824E8 rows, 3.0398520195531193E10 cpu, 1.1538751068E10 io, 3.834985943699969E9 network, 1.9607714391337042E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 170431.76057982302, cumulative cost = {6.296038463005483E8 rows, 2.2864246181081833E10 cpu, 8.46175056E9 io, 2.8886088410923505E9 network, 1.4245486952906876E9 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 14311.916097586998, cumulative cost = {2.966382979221992E8 rows, 1.0830644600919132E10 cpu, 4.000107804E9 io, 1.3651901322658482E9 network, 6.68078275344717E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 14311.916097586998, cumulative cost = {2.966239860061016E8 rows, 1.0830644600919132E10 cpu, 4.000107804E9 io, 1.3651901322658482E9 network, 6.68078275344717E8 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5426545786818516E8 rows, 4.720261675602834E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2876820009058034E8 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 75645.78035184415, cumulative cost = {1.5418981208783332E8 rows, 4.719051343117205E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2392687014806235E8 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5411416630748147E8 rows, 4.70573768577528E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.2392687014806235E8 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 417311.715232021, cumulative cost = {1.5403852052712962E8 rows, 4.699060698331568E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.1908554020554435E8 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 361087.0515946656, cumulative cost = {1.1765553303187577E8 rows, 3.2333390536131954E9 cpu, 1.692383616E9 io, 3.982993767677151E8 network, 2.172467829683344E8 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 208428.0797990623, cumulative cost = {7.167344484803073E7 rows, 1.5847815698546953E9 cpu, 1.0770072E9 io, 1.8795411109844175E8 network, 1.1226487572743258E8 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 152202.62866170693, cumulative cost = {3.549928866320984E7 rows, 1.1926789177175549E8 cpu, 6.15465888E8 io, 2032129.316464913 network, 1.0425812490222644E7 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 148259.35770443527, cumulative cost = {2.648950159348816E7 rows, 9.708832243339823E7 cpu, 4.6158924E8 io, 1385560.3633014485 network, 7022416.4600174995 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 3943.389082271652, cumulative cost = {8857637.789809976 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3943.389082271652, cumulative cost = {8853694.400727704 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 98.2725, cumulative cost = {1732.2675 rows, 36148.799999999996 cpu, 14004.0 io, 4546.139999999999 network, 5076.4 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 98.2725, cumulative cost = {1633.995 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :  :     :           :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 98.2725, cumulative cost = {1535.7224999999999 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 144315.9686221636, cumulative cost = {1.748360444597375E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 144315.9686221636, cumulative cost = {1.7339288477351587E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 962105.4574810907, cumulative cost = {1.7194970508729424E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 962105.4574810907, cumulative cost = {1.6232865051248334E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 3941.3832072716527, cumulative cost = {8860664.593767244 rows, 2.2637090542859E7 cpu, 1.53869868E8 io, 738822.5101379841 network, 3397936.8702051435 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 3941.3832072716527, cumulative cost = {8856723.210559973 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :  :     :           :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3941.3832072716527, cumulative cost = {8852781.827352703 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 3943.2709572716526, cumulative cost = {8857584.441059977 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 3943.2709572716526, cumulative cost = {8853641.170102704 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 97.485, cumulative cost = {1679.1549999999997 rows, 35105.799999999996 cpu, 13584.0 io, 4401.24 network, 4782.4 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 97.485, cumulative cost = {1581.6699999999998 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :  :     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 97.485, cumulative cost = {1484.185 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 56225.45113735539, cumulative cost = {3.596572810502183E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56225.45113735539, cumulative cost = {3.590950265388447E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {876.4499999999999 rows, 15344.999999999998 cpu, 7248.0 io, 2223.6 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 90.14999999999999, cumulative cost = {786.3 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 90.14999999999999, cumulative cost = {696.15 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 152658.97179560328, cumulative cost = {4.562100113225038E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 152658.97179560328, cumulative cost = {4.546834216045478E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :  :     :           :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :           :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[hash[y0]]): rowcount = 56212.07863735539, cumulative cost = {3.602104298865917E7 rows, 1.4721099106778064E9 cpu, 4.61534112E8 io, 1.8726889606927338E8 network, 1.0183400283720993E8 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 56212.07863735539, cumulative cost = {3.596483091002182E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908618831384465E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 56224.66363735539, cumulative cost = {3.5965675780021824E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56224.66363735539, cumulative cost = {3.590945111638447E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {825.6999999999999 rows, 14469.999999999998 cpu, 6828.0 io, 2085.6 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 84.89999999999999, cumulative cost = {740.8 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 84.89999999999999, cumulative cost = {655.9 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 19766.99363206918, cumulative cost = {1.4234421622181886E8 rows, 6.109619623124428E9 cpu, 1.846183296E9 io, 7.791534129877121E8 network, 3.382031236107407E8 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 19766.99363206918, cumulative cost = {1.423244492281868E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19766.99363206918, cumulative cost = {1.423046822345547E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4228378524092263E8 rows, 6.105312264482921E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.381827836107407E8 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 131214.95754712788, cumulative cost = {1.421525702833755E8 rows, 6.103212825162167E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.297850263277245E8 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4202135532582837E8 rows, 6.080118992633872E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.297850263277245E8 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 723867.7259114801, cumulative cost = {1.4189014036828125E8 rows, 6.068537109019288E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.213872690447083E8 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 434135.9698540041, cumulative cost = {7.953980905368534E7 rows, 3.075755645924015E9 cpu, 1.076951508E9 io, 3.8804849938685584E8 network, 1.625369236107142E8 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 145578.55955747602, cumulative cost = {5.1074726335301235E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 145578.55955747602, cumulative cost = {5.092914777574376E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :              :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 288557.4102965281, cumulative cost = {2.8030946748530105E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 288557.4102965281, cumulative cost = {2.7742389338233575E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 962117.0686435205, cumulative cost = {1.815780992793705E7 rows, 2.3569002502525926E8 cpu, 3.07712964E8 io, 2.3837071183496352E7 network, 3641188.576720077 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 962117.0686435205, cumulative cost = {1.7195692859293528E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.0686435205, cumulative cost = {1.6233575790650006E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 289731.75605747604, cumulative cost = {6.162646358868442E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 289731.75605747604, cumulative cost = {6.133673183262694E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 969946.0403831735, cumulative cost = {5.175097807656946E7 rows, 2.763680923046296E9 cpu, 6.15375948E8 io, 3.6438941077255565E8 network, 1.0498046143399411E8 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 969946.0403831735, cumulative cost = {5.0781032036186285E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 969946.0403831735, cumulative cost = {4.981108599580311E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :              :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 156119.84448223602, cumulative cost = {3.3279511661776936E8 rows, 1.2033431148402122E10 cpu, 4.461642756E9 io, 1.5234187088265023E9 network, 7.564704199459705E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], build=[right]): rowcount = 156119.84448223602, cumulative cost = {3.326389967732871E8 rows, 1.2033431148402122E10 cpu, 4.461642756E9 io, 1.5234187088265023E9 network, 7.564704199459705E8 memory}
         :        :- Exchange(distribution=[hash[x]]): rowcount = 965153.1828630627, cumulative cost = {1.7814177328026786E8 rows, 7.292134589994459E9 cpu, 2.307718248E9 io, 9.355664908199219E8 network, 4.23466056155687E8 memory}
         :        :  +- Calc(select=[x, X1]): rowcount = 965153.1828630627, cumulative cost = {1.771766200974048E8 rows, 7.129988855273464E9 cpu, 2.307718248E9 io, 9.124028144312084E8 network, 4.23466056155687E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965153.1828630627, cumulative cost = {1.7621146691454175E8 rows, 7.129988855273464E9 cpu, 2.307718248E9 io, 9.124028144312084E8 network, 4.23466056155687E8 memory}
         :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[hash[X0]]): rowcount = 24259.55242041827, cumulative cost = {1.624261237316787E8 rows, 6.001618058854101E9 cpu, 2.153875968E9 io, 7.585605344312084E8 network, 4.2210752122014356E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.624018641792583E8 rows, 5.997542454047471E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2210752122014356E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 24259.55242041827, cumulative cost = {1.6237760462683788E8 rows, 5.997154301208744E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2055490986523676E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.6235334507441747E8 rows, 5.992884619982751E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.2055490986523676E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 133831.59489185002, cumulative cost = {1.6232908552199706E8 rows, 5.990743314464481E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.1900229851032996E8 memory}
         :        :                       :- Union(all=[true], union=[X0, X1]): rowcount = 69187.8758713211, cumulative cost = {8.98178695899814E7 rows, 2.989809670730688E9 cpu, 1.230808236E9 io, 3.7521398334771514E8 network, 2.121878902391259E8 memory}
         :        :                       :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :        :                       :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :        :                       :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                       :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                       :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                       :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                       :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                       :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                       :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                       :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                       :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                       :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :        :                       :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :        :                       :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :        :                       :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :        :                       :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :        :                       :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :        :                       :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :        :                       :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :        :                       :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :        :                       :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                       :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                       :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  +- Calc(select=[X00 AS X0, X1]): rowcount = 12373.128590445167, cumulative cost = {4.4921287744794734E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
         :        :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], build=[right]): rowcount = 12373.128590445167, cumulative cost = {4.490891461620429E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
         :        :                       :        :- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :        :                       :        :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :                       :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :                       :        :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :                       :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :                       :        :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :                       :        :        :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :        :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :        :        :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                       :        :        :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                       :        :        :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :        :        :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :        :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :        :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                       :        :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                       :        :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :        :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :        +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
         :        :                       :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :        :                       :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :        :                       :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :        :                       :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :        :                       :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :                       :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :                             +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :        :                             :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :        :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                             :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :        :                                +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                                      :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X1]]): rowcount = 75645.78035184415, cumulative cost = {1.54341103648537E8 rows, 4.732970166701943E9 cpu, 2.153924508E9 io, 5.878522180065804E8 network, 3.2876820009058034E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5426545786818516E8 rows, 4.720261675602834E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2876820009058034E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 75645.78035184415, cumulative cost = {1.5418981208783332E8 rows, 4.719051343117205E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2392687014806235E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5411416630748147E8 rows, 4.70573768577528E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.2392687014806235E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 417311.715232021, cumulative cost = {1.5403852052712962E8 rows, 4.699060698331568E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.1908554020554435E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 361087.0515946656, cumulative cost = {1.1765553303187577E8 rows, 3.2333390536131954E9 cpu, 1.692383616E9 io, 3.982993767677151E8 network, 2.172467829683344E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 208428.0797990623, cumulative cost = {7.167344484803073E7 rows, 1.5847815698546953E9 cpu, 1.0770072E9 io, 1.8795411109844175E8 network, 1.1226487572743258E8 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 152202.62866170693, cumulative cost = {3.549928866320984E7 rows, 1.1926789177175549E8 cpu, 6.15465888E8 io, 2032129.316464913 network, 1.0425812490222644E7 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 148259.35770443527, cumulative cost = {2.648950159348816E7 rows, 9.708832243339823E7 cpu, 4.6158924E8 io, 1385560.3633014485 network, 7022416.4600174995 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 3943.389082271652, cumulative cost = {8857637.789809976 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3943.389082271652, cumulative cost = {8853694.400727704 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 98.2725, cumulative cost = {1732.2675 rows, 36148.799999999996 cpu, 14004.0 io, 4546.139999999999 network, 5076.4 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 98.2725, cumulative cost = {1633.995 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :                       :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 98.2725, cumulative cost = {1535.7224999999999 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 144315.9686221636, cumulative cost = {1.748360444597375E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 144315.9686221636, cumulative cost = {1.7339288477351587E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 962105.4574810907, cumulative cost = {1.7194970508729424E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 962105.4574810907, cumulative cost = {1.6232865051248334E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 3941.3832072716527, cumulative cost = {8860664.593767244 rows, 2.2637090542859E7 cpu, 1.53869868E8 io, 738822.5101379841 network, 3397936.8702051435 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 3941.3832072716527, cumulative cost = {8856723.210559973 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :                       :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3941.3832072716527, cumulative cost = {8852781.827352703 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 3943.2709572716526, cumulative cost = {8857584.441059977 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 3943.2709572716526, cumulative cost = {8853641.170102704 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 97.485, cumulative cost = {1679.1549999999997 rows, 35105.799999999996 cpu, 13584.0 io, 4401.24 network, 4782.4 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 97.485, cumulative cost = {1581.6699999999998 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 97.485, cumulative cost = {1484.185 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 56225.45113735539, cumulative cost = {3.596572810502183E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56225.45113735539, cumulative cost = {3.590950265388447E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {876.4499999999999 rows, 15344.999999999998 cpu, 7248.0 io, 2223.6 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 90.14999999999999, cumulative cost = {786.3 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 90.14999999999999, cumulative cost = {696.15 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 152658.97179560328, cumulative cost = {4.562100113225038E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 152658.97179560328, cumulative cost = {4.546834216045478E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :                       :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[y0]]): rowcount = 56212.07863735539, cumulative cost = {3.602104298865917E7 rows, 1.4721099106778064E9 cpu, 4.61534112E8 io, 1.8726889606927338E8 network, 1.0183400283720993E8 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 56212.07863735539, cumulative cost = {3.596483091002182E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908618831384465E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 56224.66363735539, cumulative cost = {3.5965675780021824E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56224.66363735539, cumulative cost = {3.590945111638447E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {825.6999999999999 rows, 14469.999999999998 cpu, 6828.0 io, 2085.6 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 84.89999999999999, cumulative cost = {740.8 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 84.89999999999999, cumulative cost = {655.9 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2227.0736825480276, cumulative cost = {2.2505728307977176E8 rows, 7.534101355615097E9 cpu, 3.077000508E9 io, 9.463771026076185E8 network, 5.362227438430167E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2227.0736825480276, cumulative cost = {2.250550560060892E8 rows, 7.534101355615097E9 cpu, 3.077000508E9 io, 9.463771026076185E8 network, 5.362227438430167E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.263857795455921E7 rows, 1.5355486186271033E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.1388480238254161E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11118.225020590779, cumulative cost = {6.262745972953862E7 rows, 1.535370727026774E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.131732359812238E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.261634150451803E7 rows, 1.53341391942315E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.131732359812238E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 61335.41794529453, cumulative cost = {6.2605223279497445E7 rows, 1.5324325527360253E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.12461669579906E8 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 56803.004187689134, cumulative cost = {4.4825714625507E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 56803.004187689134, cumulative cost = {4.476891162131931E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 3940.5036688916416, cumulative cost = {8859707.86438451 rows, 2.2367324227663238E7 cpu, 1.53856728E8 io, 732276.6750760621 network, 3384091.130787534 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 3940.5036688916416, cumulative cost = {8855767.360715618 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 3940.5036688916416, cumulative cost = {8851826.857046727 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 4532.413757605399, cumulative cost = {1.771817323604515E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4532.413757605399, cumulative cost = {1.7713640822287545E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 4025.1036688916415, cumulative cost = {8861089.664384509 rows, 2.2659503398878183E7 cpu, 1.53863484E8 io, 741063.075076062 network, 3404403.130787534 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 4025.1036688916415, cumulative cost = {8857064.560715618 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4025.1036688916415, cumulative cost = {8853039.457046727 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 3728.93286306274, cumulative cost = {1.6241425097784746E8 rows, 5.998433959724924E9 cpu, 2.153883168E9 io, 7.580749995618318E8 network, 4.2212912122014356E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 3728.93286306274, cumulative cost = {1.624105220449844E8 rows, 5.997837330466834E9 cpu, 2.153883168E9 io, 7.579855051731184E8 network, 4.2212912122014356E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 3728.93286306274, cumulative cost = {1.6240679311212134E8 rows, 5.997837330466834E9 cpu, 2.153883168E9 io, 7.579855051731184E8 network, 4.2212912122014356E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.624018641792583E8 rows, 5.997542454047471E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2210752122014356E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 24259.55242041827, cumulative cost = {1.6237760462683788E8 rows, 5.997154301208744E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2055490986523676E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.6235334507441747E8 rows, 5.992884619982751E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.2055490986523676E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 133831.59489185002, cumulative cost = {1.6232908552199706E8 rows, 5.990743314464481E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.1900229851032996E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 69187.8758713211, cumulative cost = {8.98178695899814E7 rows, 2.989809670730688E9 cpu, 1.230808236E9 io, 3.7521398334771514E8 network, 2.121878902391259E8 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 12373.128590445167, cumulative cost = {4.4921287744794734E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], build=[right]): rowcount = 12373.128590445167, cumulative cost = {4.490891461620429E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
                        :           :        :- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
                        :           :        :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :           :        :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :           :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :           :        :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :           :        :        :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :        :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :        :        :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :        :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :        :        :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :        :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :        :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,2,1,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], build=[right])\n:        :- [#4] Exchange(distribution=[hash[x]])\n:        +- [#5] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], build=[right])\n:        :- [#5] Exchange(distribution=[hash[X0]])\n:        +- [#6] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[11])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[12])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[14])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[23])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[15])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[5])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[13])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[25])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[5])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[19])
         :        :           :                       :- Reused(reference_id=[6])
         :        :           :                       +- Reused(reference_id=[7])
         :        :           :- Exchange(distribution=[hash[X0]])(reuse_id=[26])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[8])
         :        :           :        +- Reused(reference_id=[7])
         :        :           +- Exchange(distribution=[hash[X1]])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x0 AS X0, x AS X1])
         :        :                          :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[20])
         :        :                          :     :- Reused(reference_id=[9])
         :        :                          :     +- Reused(reference_id=[7])
         :        :                          +- Reused(reference_id=[10])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[28])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:        :- [#3] Exchange(distribution=[hash[x]])\n:        +- [#4] Exchange(distribution=[hash[y0]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[11])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[12])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[17])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[18])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[14])
         :           :- Reused(reference_id=[15])
         :           :- Exchange(distribution=[hash[y0]])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[16])
         :           :        +- Reused(reference_id=[17])
         :           :- Reused(reference_id=[16])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[18])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :           :           :  +- Reused(reference_id=[19])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[20])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[22])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[13])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[21])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[6])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])
         :                    :- Reused(reference_id=[21])
         :                    +- Reused(reference_id=[22])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[hash[X0]])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
         :                 :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[24])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[24])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[25])
         :                 :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[26])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[27])
         :- Exchange(distribution=[hash[X1]])
         :  +- Reused(reference_id=[28])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[16])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[X1, x])
                  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[29])
                  :        :  +- Exchange(distribution=[hash[X0, X1]])
                  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :        :        +- Union(all=[true], union=[X0, X1])
                  :        :           :- Calc(select=[x AS X0, x AS X1])
                  :        :           :  +- Reused(reference_id=[6])
                  :        :           +- Calc(select=[x0 AS X0, y AS X1])
                  :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :        :                 :- Reused(reference_id=[9])
                  :        :                 +- Reused(reference_id=[4])
                  :        +- Reused(reference_id=[2])
                  :- Reused(reference_id=[21])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[X0, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[29])
                           +- Reused(reference_id=[7])

Job has been submitted with JobID 6d7d1518b2749326ff4650f808003eb3
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 35be8c18_ee61_4801_90a4_87fe65bf88fc

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31297.73686117355, cumulative cost = {8.549276814251661E8 rows, 3.0407291902356735E10 cpu, 1.1538751068E10 io, 3.835737089384637E9 network, 1.9647775494519343E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 31297.73686117355, cumulative cost = {8.548963836883049E8 rows, 3.0406791138566956E10 cpu, 1.1538751068E10 io, 3.835737089384637E9 network, 1.9627744942928193E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31297.73686117355, cumulative cost = {8.548650859514437E8 rows, 3.040128273687939E10 cpu, 1.1538751068E10 io, 3.834985943699969E9 network, 1.9627744942928193E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 172658.83426237106, cumulative cost = {8.548337882145824E8 rows, 3.0398520195531193E10 cpu, 1.1538751068E10 io, 3.834985943699969E9 network, 1.9607714391337042E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 170431.76057982302, cumulative cost = {6.296038463005483E8 rows, 2.2864246181081833E10 cpu, 8.46175056E9 io, 2.8886088410923505E9 network, 1.4245486952906876E9 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 14311.916097586998, cumulative cost = {2.966382979221992E8 rows, 1.0830644600919132E10 cpu, 4.000107804E9 io, 1.3651901322658482E9 network, 6.68078275344717E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 14311.916097586998, cumulative cost = {2.966239860061016E8 rows, 1.0830644600919132E10 cpu, 4.000107804E9 io, 1.3651901322658482E9 network, 6.68078275344717E8 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5426545786818516E8 rows, 4.720261675602834E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2876820009058034E8 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 75645.78035184415, cumulative cost = {1.5418981208783332E8 rows, 4.719051343117205E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2392687014806235E8 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5411416630748147E8 rows, 4.70573768577528E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.2392687014806235E8 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 417311.715232021, cumulative cost = {1.5403852052712962E8 rows, 4.699060698331568E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.1908554020554435E8 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 361087.0515946656, cumulative cost = {1.1765553303187577E8 rows, 3.2333390536131954E9 cpu, 1.692383616E9 io, 3.982993767677151E8 network, 2.172467829683344E8 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 208428.0797990623, cumulative cost = {7.167344484803073E7 rows, 1.5847815698546953E9 cpu, 1.0770072E9 io, 1.8795411109844175E8 network, 1.1226487572743258E8 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 152202.62866170693, cumulative cost = {3.549928866320984E7 rows, 1.1926789177175549E8 cpu, 6.15465888E8 io, 2032129.316464913 network, 1.0425812490222644E7 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 148259.35770443527, cumulative cost = {2.648950159348816E7 rows, 9.708832243339823E7 cpu, 4.6158924E8 io, 1385560.3633014485 network, 7022416.4600174995 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 3943.389082271652, cumulative cost = {8857637.789809976 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3943.389082271652, cumulative cost = {8853694.400727704 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 98.2725, cumulative cost = {1732.2675 rows, 36148.799999999996 cpu, 14004.0 io, 4546.139999999999 network, 5076.4 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 98.2725, cumulative cost = {1633.995 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :  :     :           :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 98.2725, cumulative cost = {1535.7224999999999 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 144315.9686221636, cumulative cost = {1.748360444597375E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 144315.9686221636, cumulative cost = {1.7339288477351587E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 962105.4574810907, cumulative cost = {1.7194970508729424E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 962105.4574810907, cumulative cost = {1.6232865051248334E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 3941.3832072716527, cumulative cost = {8860664.593767244 rows, 2.2637090542859E7 cpu, 1.53869868E8 io, 738822.5101379841 network, 3397936.8702051435 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 3941.3832072716527, cumulative cost = {8856723.210559973 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :  :     :           :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3941.3832072716527, cumulative cost = {8852781.827352703 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 3943.2709572716526, cumulative cost = {8857584.441059977 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 3943.2709572716526, cumulative cost = {8853641.170102704 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 97.485, cumulative cost = {1679.1549999999997 rows, 35105.799999999996 cpu, 13584.0 io, 4401.24 network, 4782.4 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 97.485, cumulative cost = {1581.6699999999998 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :  :     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 97.485, cumulative cost = {1484.185 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 56225.45113735539, cumulative cost = {3.596572810502183E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56225.45113735539, cumulative cost = {3.590950265388447E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {876.4499999999999 rows, 15344.999999999998 cpu, 7248.0 io, 2223.6 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 90.14999999999999, cumulative cost = {786.3 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 90.14999999999999, cumulative cost = {696.15 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 152658.97179560328, cumulative cost = {4.562100113225038E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 152658.97179560328, cumulative cost = {4.546834216045478E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :  :     :           :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :           :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[hash[y0]]): rowcount = 56212.07863735539, cumulative cost = {3.602104298865917E7 rows, 1.4721099106778064E9 cpu, 4.61534112E8 io, 1.8726889606927338E8 network, 1.0183400283720993E8 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 56212.07863735539, cumulative cost = {3.596483091002182E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908618831384465E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 56224.66363735539, cumulative cost = {3.5965675780021824E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56224.66363735539, cumulative cost = {3.590945111638447E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {825.6999999999999 rows, 14469.999999999998 cpu, 6828.0 io, 2085.6 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 84.89999999999999, cumulative cost = {740.8 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 84.89999999999999, cumulative cost = {655.9 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 19766.99363206918, cumulative cost = {1.4234421622181886E8 rows, 6.109619623124428E9 cpu, 1.846183296E9 io, 7.791534129877121E8 network, 3.382031236107407E8 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 19766.99363206918, cumulative cost = {1.423244492281868E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19766.99363206918, cumulative cost = {1.423046822345547E8 rows, 6.106456904143297E9 cpu, 1.846183296E9 io, 7.786790051405425E8 network, 3.382031236107407E8 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4228378524092263E8 rows, 6.105312264482921E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.381827836107407E8 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 131214.95754712788, cumulative cost = {1.421525702833755E8 rows, 6.103212825162167E9 cpu, 1.846176516E9 io, 7.786722251405425E8 network, 3.297850263277245E8 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 131214.95754712788, cumulative cost = {1.4202135532582837E8 rows, 6.080118992633872E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.297850263277245E8 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 723867.7259114801, cumulative cost = {1.4189014036828125E8 rows, 6.068537109019288E9 cpu, 1.846176516E9 io, 7.755230661594114E8 network, 3.213872690447083E8 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 434135.9698540041, cumulative cost = {7.953980905368534E7 rows, 3.075755645924015E9 cpu, 1.076951508E9 io, 3.8804849938685584E8 network, 1.625369236107142E8 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 145578.55955747602, cumulative cost = {5.1074726335301235E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 145578.55955747602, cumulative cost = {5.092914777574376E7 rows, 2.6113174443797536E9 cpu, 6.15389484E8 io, 3.411262722033595E8 network, 1.0502585103399411E8 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 969958.7303831734, cumulative cost = {5.0782439216186285E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 969958.7303831734, cumulative cost = {4.981248048580311E7 rows, 2.6034628545366883E9 cpu, 6.15382704E8 io, 3.411194922033595E8 network, 1.0500551103399411E8 memory}
         :  :              :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 288557.4102965281, cumulative cost = {2.8030946748530105E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 288557.4102965281, cumulative cost = {2.7742389338233575E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 962117.0686435205, cumulative cost = {1.815780992793705E7 rows, 2.3569002502525926E8 cpu, 3.07712964E8 io, 2.3837071183496352E7 network, 3641188.576720077 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 962117.0686435205, cumulative cost = {1.7195692859293528E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.0686435205, cumulative cost = {1.6233575790650006E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 289731.75605747604, cumulative cost = {6.162646358868442E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 289731.75605747604, cumulative cost = {6.133673183262694E7 rows, 2.9920575953693614E9 cpu, 7.69225008E8 io, 3.8747456677255565E8 network, 1.588503454339941E8 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 969946.0403831735, cumulative cost = {5.175097807656946E7 rows, 2.763680923046296E9 cpu, 6.15375948E8 io, 3.6438941077255565E8 network, 1.0498046143399411E8 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 969946.0403831735, cumulative cost = {5.0781032036186285E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 969946.0403831735, cumulative cost = {4.981108599580311E7 rows, 2.600729988261923E9 cpu, 6.15375948E8 io, 3.411107058033595E8 network, 1.0498046143399411E8 memory}
         :  :              :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 156119.84448223602, cumulative cost = {3.3279511661776936E8 rows, 1.2033431148402122E10 cpu, 4.461642756E9 io, 1.5234187088265023E9 network, 7.564704199459705E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], build=[right]): rowcount = 156119.84448223602, cumulative cost = {3.326389967732871E8 rows, 1.2033431148402122E10 cpu, 4.461642756E9 io, 1.5234187088265023E9 network, 7.564704199459705E8 memory}
         :        :- Exchange(distribution=[hash[x]]): rowcount = 965153.1828630627, cumulative cost = {1.7814177328026786E8 rows, 7.292134589994459E9 cpu, 2.307718248E9 io, 9.355664908199219E8 network, 4.23466056155687E8 memory}
         :        :  +- Calc(select=[x, X1]): rowcount = 965153.1828630627, cumulative cost = {1.771766200974048E8 rows, 7.129988855273464E9 cpu, 2.307718248E9 io, 9.124028144312084E8 network, 4.23466056155687E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965153.1828630627, cumulative cost = {1.7621146691454175E8 rows, 7.129988855273464E9 cpu, 2.307718248E9 io, 9.124028144312084E8 network, 4.23466056155687E8 memory}
         :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[hash[X0]]): rowcount = 24259.55242041827, cumulative cost = {1.624261237316787E8 rows, 6.001618058854101E9 cpu, 2.153875968E9 io, 7.585605344312084E8 network, 4.2210752122014356E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.624018641792583E8 rows, 5.997542454047471E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2210752122014356E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 24259.55242041827, cumulative cost = {1.6237760462683788E8 rows, 5.997154301208744E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2055490986523676E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.6235334507441747E8 rows, 5.992884619982751E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.2055490986523676E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 133831.59489185002, cumulative cost = {1.6232908552199706E8 rows, 5.990743314464481E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.1900229851032996E8 memory}
         :        :                       :- Union(all=[true], union=[X0, X1]): rowcount = 69187.8758713211, cumulative cost = {8.98178695899814E7 rows, 2.989809670730688E9 cpu, 1.230808236E9 io, 3.7521398334771514E8 network, 2.121878902391259E8 memory}
         :        :                       :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :        :                       :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :        :                       :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                       :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                       :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                       :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                       :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                       :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                       :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                       :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                       :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                       :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :        :                       :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :        :                       :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :        :                       :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :        :                       :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :        :                       :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :        :                       :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :        :                       :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :        :                       :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :        :                       :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                       :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                       :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :  +- Calc(select=[X00 AS X0, X1]): rowcount = 12373.128590445167, cumulative cost = {4.4921287744794734E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
         :        :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], build=[right]): rowcount = 12373.128590445167, cumulative cost = {4.490891461620429E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
         :        :                       :        :- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
         :        :                       :        :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
         :        :                       :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :                       :        :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :                       :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :                       :        :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :                       :        :        :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :        :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                       :        :        :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                       :        :        :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                       :        :        :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :        :        :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :        :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :        :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                       :        :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                       :        :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :        :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :        :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :        +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
         :        :                       :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :        :                       :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :        :                       :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :        :                       :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :        :                       :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :                       :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :                             +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
         :        :                             :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :        :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                             :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
         :        :                                +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                                      :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X1]]): rowcount = 75645.78035184415, cumulative cost = {1.54341103648537E8 rows, 4.732970166701943E9 cpu, 2.153924508E9 io, 5.878522180065804E8 network, 3.2876820009058034E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5426545786818516E8 rows, 4.720261675602834E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2876820009058034E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 75645.78035184415, cumulative cost = {1.5418981208783332E8 rows, 4.719051343117205E9 cpu, 2.153924508E9 io, 5.860367192781361E8 network, 3.2392687014806235E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 75645.78035184415, cumulative cost = {1.5411416630748147E8 rows, 4.70573768577528E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.2392687014806235E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 417311.715232021, cumulative cost = {1.5403852052712962E8 rows, 4.699060698331568E9 cpu, 2.153924508E9 io, 5.842212205496919E8 network, 3.1908554020554435E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 361087.0515946656, cumulative cost = {1.1765553303187577E8 rows, 3.2333390536131954E9 cpu, 1.692383616E9 io, 3.982993767677151E8 network, 2.172467829683344E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 208428.0797990623, cumulative cost = {7.167344484803073E7 rows, 1.5847815698546953E9 cpu, 1.0770072E9 io, 1.8795411109844175E8 network, 1.1226487572743258E8 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 152202.62866170693, cumulative cost = {3.549928866320984E7 rows, 1.1926789177175549E8 cpu, 6.15465888E8 io, 2032129.316464913 network, 1.0425812490222644E7 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 148259.35770443527, cumulative cost = {2.648950159348816E7 rows, 9.708832243339823E7 cpu, 4.6158924E8 io, 1385560.3633014485 network, 7022416.4600174995 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 3943.389082271652, cumulative cost = {8857637.789809976 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3943.389082271652, cumulative cost = {8853694.400727704 rows, 2.2028416009695537E7 cpu, 1.53877068E8 io, 646713.8531634645 network, 3403734.1302051432 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 98.2725, cumulative cost = {1732.2675 rows, 36148.799999999996 cpu, 14004.0 io, 4546.139999999999 network, 5076.4 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 98.2725, cumulative cost = {1633.995 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :                       :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 98.2725, cumulative cost = {1535.7224999999999 rows, 20425.199999999997 cpu, 14004.0 io, 2187.6 network, 5076.4 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {872.4499999999999 rows, 15183.999999999998 cpu, 7224.0 io, 2187.6 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 144315.9686221636, cumulative cost = {1.748360444597375E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 144315.9686221636, cumulative cost = {1.7339288477351587E7 rows, 7.491164706599826E7 cpu, 3.07712172E8 io, 738846.5101379841 network, 3618682.3298123563 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 962105.4574810907, cumulative cost = {1.7194970508729424E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 962105.4574810907, cumulative cost = {1.6232865051248334E7 rows, 7.394938160851717E7 cpu, 3.07712148E8 io, 738822.5101379841 network, 3618654.3298123563 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 3941.3832072716527, cumulative cost = {8860664.593767244 rows, 2.2637090542859E7 cpu, 1.53869868E8 io, 738822.5101379841 network, 3397936.8702051435 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 3941.3832072716527, cumulative cost = {8856723.210559973 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :                       :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 3941.3832072716527, cumulative cost = {8852781.827352703 rows, 2.2006469229695536E7 cpu, 1.53869868E8 io, 644229.3131634644 network, 3397936.8702051435 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 3943.2709572716526, cumulative cost = {8857584.441059977 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 3943.2709572716526, cumulative cost = {8853641.170102704 rows, 2.202736670969554E7 cpu, 1.53876648E8 io, 646568.9531634644 network, 3403396.0302051436 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 97.485, cumulative cost = {1679.1549999999997 rows, 35105.799999999996 cpu, 13584.0 io, 4401.24 network, 4782.4 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 97.485, cumulative cost = {1581.6699999999998 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 97.485, cumulative cost = {1484.185 rows, 19508.199999999997 cpu, 13584.0 io, 2061.6 network, 4782.4 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 56225.45113735539, cumulative cost = {3.596572810502183E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56225.45113735539, cumulative cost = {3.590950265388447E7 rows, 1.4653052500031407E9 cpu, 4.61541312E8 io, 1.8592198178197685E8 network, 1.0183906323720993E8 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 90.14999999999999, cumulative cost = {876.4499999999999 rows, 15344.999999999998 cpu, 7248.0 io, 2223.6 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 90.14999999999999, cumulative cost = {786.3 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 90.14999999999999, cumulative cost = {696.15 rows, 921.0 cpu, 7248.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 152658.97179560328, cumulative cost = {4.562100113225038E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 152658.97179560328, cumulative cost = {4.546834216045478E7 rows, 1.6481963967069051E9 cpu, 6.15376416E8 io, 2.1034526566927338E8 network, 1.0498190724090183E8 memory}
         :                       :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[y0]]): rowcount = 56212.07863735539, cumulative cost = {3.602104298865917E7 rows, 1.4721099106778064E9 cpu, 4.61534112E8 io, 1.8726889606927338E8 network, 1.0183400283720993E8 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 56212.07863735539, cumulative cost = {3.596483091002182E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908618831384465E7 rows, 1.4626662814667306E9 cpu, 4.61534112E8 io, 1.8591980618197685E8 network, 1.0183400283720993E8 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 56224.66363735539, cumulative cost = {3.5965675780021824E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 56224.66363735539, cumulative cost = {3.590945111638447E7 rows, 1.4653043330031407E9 cpu, 4.61540892E8 io, 1.8592184378197685E8 network, 1.0183875723720993E8 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {825.6999999999999 rows, 14469.999999999998 cpu, 6828.0 io, 2085.6 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 84.89999999999999, cumulative cost = {740.8 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 84.89999999999999, cumulative cost = {655.9 rows, 886.0 cpu, 6828.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2227.0736825480276, cumulative cost = {2.2505728307977176E8 rows, 7.534101355615097E9 cpu, 3.077000508E9 io, 9.463771026076185E8 network, 5.362227438430167E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2227.0736825480276, cumulative cost = {2.250550560060892E8 rows, 7.534101355615097E9 cpu, 3.077000508E9 io, 9.463771026076185E8 network, 5.362227438430167E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.263857795455921E7 rows, 1.5355486186271033E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.1388480238254161E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11118.225020590779, cumulative cost = {6.262745972953862E7 rows, 1.535370727026774E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.131732359812238E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.261634150451803E7 rows, 1.53341391942315E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.131732359812238E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 61335.41794529453, cumulative cost = {6.2605223279497445E7 rows, 1.5324325527360253E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.12461669579906E8 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 56803.004187689134, cumulative cost = {4.4825714625507E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 56803.004187689134, cumulative cost = {4.476891162131931E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 3940.5036688916416, cumulative cost = {8859707.86438451 rows, 2.2367324227663238E7 cpu, 1.53856728E8 io, 732276.6750760621 network, 3384091.130787534 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 3940.5036688916416, cumulative cost = {8855767.360715618 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 3940.5036688916416, cumulative cost = {8851826.857046727 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 4532.413757605399, cumulative cost = {1.771817323604515E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4532.413757605399, cumulative cost = {1.7713640822287545E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 4025.1036688916415, cumulative cost = {8861089.664384509 rows, 2.2659503398878183E7 cpu, 1.53863484E8 io, 741063.075076062 network, 3404403.130787534 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 4025.1036688916415, cumulative cost = {8857064.560715618 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4025.1036688916415, cumulative cost = {8853039.457046727 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 3728.93286306274, cumulative cost = {1.6241425097784746E8 rows, 5.998433959724924E9 cpu, 2.153883168E9 io, 7.580749995618318E8 network, 4.2212912122014356E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 3728.93286306274, cumulative cost = {1.624105220449844E8 rows, 5.997837330466834E9 cpu, 2.153883168E9 io, 7.579855051731184E8 network, 4.2212912122014356E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 3728.93286306274, cumulative cost = {1.6240679311212134E8 rows, 5.997837330466834E9 cpu, 2.153883168E9 io, 7.579855051731184E8 network, 4.2212912122014356E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.624018641792583E8 rows, 5.997542454047471E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2210752122014356E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 24259.55242041827, cumulative cost = {1.6237760462683788E8 rows, 5.997154301208744E9 cpu, 2.153875968E9 io, 7.579783051731184E8 network, 4.2055490986523676E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 24259.55242041827, cumulative cost = {1.6235334507441747E8 rows, 5.992884619982751E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.2055490986523676E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 133831.59489185002, cumulative cost = {1.6232908552199706E8 rows, 5.990743314464481E9 cpu, 2.153875968E9 io, 7.573960759150283E8 network, 4.1900229851032996E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 69187.8758713211, cumulative cost = {8.98178695899814E7 rows, 2.989809670730688E9 cpu, 1.230808236E9 io, 3.7521398334771514E8 network, 2.121878902391259E8 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 12373.128590445167, cumulative cost = {4.4921287744794734E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], build=[right]): rowcount = 12373.128590445167, cumulative cost = {4.490891461620429E7 rows, 1.501677701558528E9 cpu, 6.15403488E8 io, 1.8854796362968644E8 network, 1.067127548251959E8 memory}
                        :           :        :- Exchange(distribution=[hash[X0]]): rowcount = 56296.53588782344, cumulative cost = {3.602233175541994E7 rows, 1.4748357622495856E9 cpu, 4.61540424E8 io, 1.872772122033595E8 network, 1.01852905024276E8 memory}
                        :           :        :  +- Calc(select=[X0, X1]): rowcount = 56296.53588782344, cumulative cost = {3.596603521953212E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 56296.53588782344, cumulative cost = {3.5909738683644295E7 rows, 1.4653779442204313E9 cpu, 4.61540424E8 io, 1.8592609534205174E8 network, 1.01852905024276E8 memory}
                        :           :        :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :           :        :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :           :        :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :           :        :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :           :        :        :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :           :        :        :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :        :        :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :        :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :           :        :        :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :        :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :        :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :        :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :           :        :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :        :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 64643.71902052891, cumulative cost = {7.237738433712381E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 64643.71902052891, cumulative cost = {7.231274061810328E7 rows, 3.0007998121389017E9 cpu, 9.23067732E8 io, 3.821820925673132E8 network, 2.0681440827120405E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 56211.93588782344, cumulative cost = {3.6020949955419935E7 rows, 1.4721035727748206E9 cpu, 4.61533668E8 io, 1.872684258033595E8 network, 1.01832593024276E8 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 56211.93588782344, cumulative cost = {3.5964738019532114E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 56211.93588782344, cumulative cost = {3.590852608364429E7 rows, 1.4626599675456662E9 cpu, 4.61533668E8 io, 1.8591933934205174E8 network, 1.01832593024276E8 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,2,1,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], build=[right])\n:        :- [#4] Exchange(distribution=[hash[x]])\n:        +- [#5] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], build=[right])\n:        :- [#5] Exchange(distribution=[hash[X0]])\n:        +- [#6] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[11])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[12])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[14])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[23])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[15])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[5])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[13])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[25])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[5])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[19])
         :        :           :                       :- Reused(reference_id=[6])
         :        :           :                       +- Reused(reference_id=[7])
         :        :           :- Exchange(distribution=[hash[X0]])(reuse_id=[26])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[8])
         :        :           :        +- Reused(reference_id=[7])
         :        :           +- Exchange(distribution=[hash[X1]])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x0 AS X0, x AS X1])
         :        :                          :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[20])
         :        :                          :     :- Reused(reference_id=[9])
         :        :                          :     +- Reused(reference_id=[7])
         :        :                          +- Reused(reference_id=[10])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[28])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:        :- [#3] Exchange(distribution=[hash[x]])\n:        +- [#4] Exchange(distribution=[hash[y0]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[11])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[12])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[17])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[18])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[14])
         :           :- Reused(reference_id=[15])
         :           :- Exchange(distribution=[hash[y0]])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[16])
         :           :        +- Reused(reference_id=[17])
         :           :- Reused(reference_id=[16])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[18])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :           :           :  +- Reused(reference_id=[19])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[20])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[22])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[13])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[21])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[6])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])
         :                    :- Reused(reference_id=[21])
         :                    +- Reused(reference_id=[22])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[hash[X0]])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
         :                 :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[24])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[24])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[25])
         :                 :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[26])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[27])
         :- Exchange(distribution=[hash[X1]])
         :  +- Reused(reference_id=[28])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[16])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[X1, x])
                  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[29])
                  :        :  +- Exchange(distribution=[hash[X0, X1]])
                  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :        :        +- Union(all=[true], union=[X0, X1])
                  :        :           :- Calc(select=[x AS X0, x AS X1])
                  :        :           :  +- Reused(reference_id=[6])
                  :        :           +- Calc(select=[x0 AS X0, y AS X1])
                  :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :        :                 :- Reused(reference_id=[9])
                  :        :                 +- Reused(reference_id=[4])
                  :        +- Reused(reference_id=[2])
                  :- Reused(reference_id=[21])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[X0, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[29])
                           +- Reused(reference_id=[7])

Job has been submitted with JobID 37b132d9bebe8cc1cb7d64a9f3ec4c91
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...

------------> using sink uuid: 9cb42ba2_33d6_412a_89d8_2ebc1aa3bea2

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 20027.593426143452, cumulative cost = {5.428905093664398E8 rows, 1.8756321076921474E10 cpu, 7.38343134E9 io, 2.3542974397080455E9 network, 1.2574627098919556E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 20027.593426143452, cumulative cost = {5.428704817730137E8 rows, 1.8756000635426655E10 cpu, 7.38343134E9 io, 2.3542974397080455E9 network, 1.2561809439126825E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 20027.593426143452, cumulative cost = {5.428504541795876E8 rows, 1.8752475778983654E10 cpu, 7.38343134E9 io, 2.353816777465818E9 network, 1.2561809439126825E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 110485.33475046266, cumulative cost = {5.428304265861615E8 rows, 1.8750708013627647E10 cpu, 7.38343134E9 io, 2.353816777465818E9 network, 1.2548991779334095E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 109057.69465597608, cumulative cost = {3.987422326663401E8 rows, 1.3935581994434309E10 cpu, 5.414516136E9 io, 1.749095696238316E9 network, 9.11706186810969E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 9160.53602317735, cumulative cost = {1.8981744579743E8 rows, 6.93061547459462E9 cpu, 2.55959562E9 io, 8.735771381097846E8 network, 4.275736232632557E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 9160.53602317735, cumulative cost = {1.8980828526140684E8 rows, 6.93061547459462E9 cpu, 2.55959562E9 io, 8.735771381097846E8 network, 4.275736232632557E8 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.871422144520052E7 rows, 3.0205575617947035E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.1041470578651848E8 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 48406.109781046645, cumulative cost = {9.866581533541948E7 rows, 3.0197830640382066E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.0731671476053149E8 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.861740922563843E7 rows, 3.0112635887167425E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.0731671476053149E8 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 267039.8349581653, cumulative cost = {9.85690031158574E7 rows, 3.006990951357412E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.042187237345445E8 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 231060.49990091816, cumulative cost = {7.528809545713979E7 rows, 2.0690944395319576E9 cpu, 1.082930712E9 io, 2.5487395852685362E8 network, 1.3904977181902695E8 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 133378.1756423311, cumulative cost = {4.586514246990502E7 rows, 1.0142088821474899E9 cpu, 6.8916708E8 io, 1.2027844063632014E8 network, 7.187042298030357E7 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 97398.188085084, cumulative cost = {2.2717853115503248E7 rows, 7.644527218135142E7 cpu, 3.93836976E8 io, 1310331.8271606131 network, 6701215.46478604 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 94871.10282484468, cumulative cost = {1.69517423491929E7 rows, 6.220919171211392E7 cpu, 2.95369392E8 io, 893167.7855223233 network, 4513231.856048494 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 2527.1831352393115, cumulative cost = {5668756.781475266 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2527.1831352393115, cumulative cost = {5666229.598340027 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 80.5425, cumulative cost = {1420.4775000000002 rows, 29666.4 cpu, 11484.0 io, 3731.82 network, 4169.2 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 80.5425, cumulative cost = {1339.9350000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :           :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 80.5425, cumulative cost = {1259.3925000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 92343.91968960538, cumulative cost = {1.1188114464892788E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 92343.91968960538, cumulative cost = {1.1095770545203183E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 615625.1312640358, cumulative cost = {1.1003424625513578E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 615625.1312640358, cumulative cost = {1.0387799494249541E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2525.5417602393113, cumulative cost = {5670532.362985507 rows, 1.4525643442790704E7 cpu, 9.8462028E7 io, 475859.6838840334 network, 2183509.768737546 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 2525.5417602393113, cumulative cost = {5668006.821225267 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :  :     :           :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2525.5417602393113, cumulative cost = {5665481.279465027 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 2527.0852602393115, cumulative cost = {5668712.578225266 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 2527.0852602393115, cumulative cost = {5666185.492965027 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 79.89, cumulative cost = {1376.4700000000003 rows, 28802.199999999997 cpu, 11136.0 io, 3611.76 network, 3925.6 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 79.89, cumulative cost = {1296.5800000000002 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 79.89, cumulative cost = {1216.69 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.987557247114, cumulative cost = {2.301391117875944E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.987557247114, cumulative cost = {2.2977931191202193E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {719.8500000000001 rows, 12645.0 cpu, 5952.0 io, 1834.8000000000002 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 73.95, cumulative cost = {645.9000000000001 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 73.95, cumulative cost = {571.95 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 97682.32425858706, cumulative cost = {2.9191892487333864E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 97682.32425858706, cumulative cost = {2.9094210163075276E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :  :     :           :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :           :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[hash[y0]]): rowcount = 35969.04505724711, cumulative cost = {2.304914448881669E7 rows, 9.419815673241088E8 cpu, 2.953242E8 io, 1.1982957909053347E8 network, 6.516505431551753E7 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 35969.04505724711, cumulative cost = {2.301317544375944E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977206398702193E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.33505724711, cumulative cost = {2.301386782375944E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.33505724711, cumulative cost = {2.2977888488702193E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {677.8000000000001 rows, 11920.0 cpu, 5604.0 io, 1718.3999999999999 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 69.6, cumulative cost = {608.2 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 69.6, cumulative cost = {538.6 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 12664.130373469034, cumulative cost = {9.108490328018314E7 rows, 3.9095693508786798E9 cpu, 1.181335152E9 io, 4.985734405390264E8 network, 2.1644972617582297E8 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 12664.130373469034, cumulative cost = {9.107223914980967E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 12664.130373469034, cumulative cost = {9.105957501943621E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.104598488906275E7 rows, 3.90679358973234E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1643305817582297E8 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 83964.53582312689, cumulative cost = {9.096202035323963E7 rows, 3.9054501571591697E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1105932788314286E8 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.08780558174165E7 rows, 3.8906723988542995E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.1105932788314286E8 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 463203.42390592233, cumulative cost = {9.079409128159338E7 rows, 3.883261144071805E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.0568559759046274E8 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 277809.81555339345, cumulative cost = {5.089730975551337E7 rows, 1.9682254884479215E9 cpu, 6.89121396E8 io, 2.4831166988655582E8 network, 1.0403310630603433E8 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 93167.25510252891, cumulative cost = {3.268204719665723E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 93167.25510252891, cumulative cost = {3.25888799415547E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :              :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 184642.56045086452, cumulative cost = {1.793745274330275E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 184642.56045086452, cumulative cost = {1.775281018285189E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615634.6530057634, cumulative cost = {1.1619652372401021E7 rows, 1.5087171368682057E8 cpu, 1.96902108E8 io, 1.525719135920814E7 network, 2343426.221605916 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 615634.6530057634, cumulative cost = {1.1004017719395258E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.6530057634, cumulative cost = {1.0388383066389494E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 185393.6083525289, cumulative cost = {3.9433578102174096E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 185393.6083525289, cumulative cost = {3.924818449382157E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 620641.6390168595, cumulative cost = {3.3114275635469038E7 rows, 1.7684208270878427E9 cpu, 3.93763236E8 io, 2.3316399266375232E8 network, 6.71781412844284E7 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 620641.6390168595, cumulative cost = {3.249363399645218E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 620641.6390168595, cumulative cost = {3.187299235743532E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :              :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 99897.15863279873, cumulative cost = {2.088157291742541E8 rows, 7.004857462145033E9 cpu, 2.854920516E9 io, 8.755185581285313E8 network, 4.841325635477133E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], build=[right]): rowcount = 99897.15863279873, cumulative cost = {2.087158320156213E8 rows, 7.004857462145033E9 cpu, 2.854920516E9 io, 8.755185581285313E8 network, 4.841325635477133E8 memory}
         :        :- Exchange(distribution=[hash[x]]): rowcount = 617574.9477709449, cumulative cost = {1.0985330730200695E8 rows, 3.970839825446698E9 cpu, 1.476660048E9 io, 4.9935311392302793E8 network, 2.7100711561345613E8 memory}
         :        :  +- Calc(select=[x, X1]): rowcount = 617574.9477709449, cumulative cost = {1.09235732354236E8 rows, 3.8670872342211795E9 cpu, 1.476660048E9 io, 4.8453131517652524E8 network, 2.7100711561345613E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617574.9477709449, cumulative cost = {1.0861815740646507E8 rows, 3.8670872342211795E9 cpu, 1.476660048E9 io, 4.8453131517652524E8 network, 2.7100711561345613E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 15524.318472966004, cumulative cost = {1.0389894045869413E8 rows, 3.8341499036733956E9 cpu, 1.37822064E9 io, 4.8453131517652524E8 network, 2.7013775377897006E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0388341614022116E8 rows, 3.831666012717721E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.7013775377897006E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15524.318472966004, cumulative cost = {1.038678918217482E8 rows, 3.8314176236221538E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.6914419739670026E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0385236750327523E8 rows, 3.828685343570912E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6914419739670026E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 85642.31791421602, cumulative cost = {1.0383684318480226E8 rows, 3.8273150664842844E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6815064101443043E8 memory}
         :        :                       :- Union(all=[true], union=[X0, X1]): rowcount = 44278.083840109386, cumulative cost = {5.743838169296144E7 rows, 1.9070632267787466E9 cpu, 7.8757266E8 io, 2.392356653441561E8 network, 1.358075014144845E8 memory}
         :        :                       :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :        :                       :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :        :                       :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                       :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                       :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                       :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                       :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                       :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                       :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                       :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                       :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                       :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :        :                       :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :        :                       :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :        :                       :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :        :                       :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :        :                       :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :        :                       :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :        :                       :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :        :                       :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :        :                       :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                       :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                       :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  +- Calc(select=[X00 AS X0, X1]): rowcount = 7920.835777098835, cumulative cost = {2.870905134596664E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
         :        :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 7920.835777098835, cumulative cost = {2.870113051018954E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
         :        :                       :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :        +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
         :        :                       :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :        :                       :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :        :                       :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :        :                       :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :        :                       :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :                       :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :                             +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :        :                             :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :        :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                             :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :        :                                +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                                      :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X1]]): rowcount = 48406.109781046645, cumulative cost = {9.876262755498156E7 rows, 3.0286897882379193E9 cpu, 1.378260468E9 io, 3.761654442055034E8 network, 2.1041470578651848E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.871422144520052E7 rows, 3.0205575617947035E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.1041470578651848E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 48406.109781046645, cumulative cost = {9.866581533541948E7 rows, 3.0197830640382066E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.0731671476053149E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.861740922563843E7 rows, 3.0112635887167425E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.0731671476053149E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 267039.8349581653, cumulative cost = {9.85690031158574E7 rows, 3.006990951357412E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.042187237345445E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 231060.49990091816, cumulative cost = {7.528809545713979E7 rows, 2.0690944395319576E9 cpu, 1.082930712E9 io, 2.5487395852685362E8 network, 1.3904977181902695E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 133378.1756423311, cumulative cost = {4.586514246990502E7 rows, 1.0142088821474899E9 cpu, 6.8916708E8 io, 1.2027844063632014E8 network, 7.187042298030357E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 97398.188085084, cumulative cost = {2.2717853115503248E7 rows, 7.644527218135142E7 cpu, 3.93836976E8 io, 1310331.8271606131 network, 6701215.46478604 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 94871.10282484468, cumulative cost = {1.69517423491929E7 rows, 6.220919171211392E7 cpu, 2.95369392E8 io, 893167.7855223233 network, 4513231.856048494 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 2527.1831352393115, cumulative cost = {5668756.781475266 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2527.1831352393115, cumulative cost = {5666229.598340027 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 80.5425, cumulative cost = {1420.4775000000002 rows, 29666.4 cpu, 11484.0 io, 3731.82 network, 4169.2 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 80.5425, cumulative cost = {1339.9350000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :                       :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 80.5425, cumulative cost = {1259.3925000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 92343.91968960538, cumulative cost = {1.1188114464892788E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 92343.91968960538, cumulative cost = {1.1095770545203183E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 615625.1312640358, cumulative cost = {1.1003424625513578E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 615625.1312640358, cumulative cost = {1.0387799494249541E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2525.5417602393113, cumulative cost = {5670532.362985507 rows, 1.4525643442790704E7 cpu, 9.8462028E7 io, 475859.6838840334 network, 2183509.768737546 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 2525.5417602393113, cumulative cost = {5668006.821225267 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :                       :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2525.5417602393113, cumulative cost = {5665481.279465027 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 2527.0852602393115, cumulative cost = {5668712.578225266 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 2527.0852602393115, cumulative cost = {5666185.492965027 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 79.89, cumulative cost = {1376.4700000000003 rows, 28802.199999999997 cpu, 11136.0 io, 3611.76 network, 3925.6 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 79.89, cumulative cost = {1296.5800000000002 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 79.89, cumulative cost = {1216.69 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.987557247114, cumulative cost = {2.301391117875944E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.987557247114, cumulative cost = {2.2977931191202193E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {719.8500000000001 rows, 12645.0 cpu, 5952.0 io, 1834.8000000000002 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 73.95, cumulative cost = {645.9000000000001 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 73.95, cumulative cost = {571.95 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 97682.32425858706, cumulative cost = {2.9191892487333864E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 97682.32425858706, cumulative cost = {2.9094210163075276E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :                       :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[y0]]): rowcount = 35969.04505724711, cumulative cost = {2.304914448881669E7 rows, 9.419815673241088E8 cpu, 2.953242E8 io, 1.1982957909053347E8 network, 6.516505431551753E7 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 35969.04505724711, cumulative cost = {2.301317544375944E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977206398702193E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.33505724711, cumulative cost = {2.301386782375944E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.33505724711, cumulative cost = {2.2977888488702193E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {677.8000000000001 rows, 11920.0 cpu, 5604.0 io, 1718.3999999999999 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 69.6, cumulative cost = {608.2 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 69.6, cumulative cost = {538.6 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1427.6400944865807, cumulative cost = {1.4397770858507088E8 rows, 4.815015533858588E9 cpu, 1.968915204E9 io, 6.047210812275019E8 network, 3.431929911224404E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1427.6400944865807, cumulative cost = {1.439762809449764E8 rows, 4.815015533858588E9 cpu, 1.968915204E9 io, 6.047210812275019E8 network, 3.431929911224404E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0083245821347915E7 rows, 9.826821381446933E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.290298826829742E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7115.152858965637, cumulative cost = {4.007613066848895E7 rows, 9.825682956989498E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.244761848532362E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0069015515629984E7 rows, 9.813160287957718E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.244761848532362E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 39251.84762325718, cumulative cost = {4.006190036277102E7 rows, 9.806879992337997E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.199224870234983E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 36347.62296013249, cumulative cost = {2.868367641384097E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 36347.62296013249, cumulative cost = {2.8647328790880837E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 2524.8526859025365, cumulative cost = {5669749.814275759 rows, 1.4337513866439002E7 cpu, 9.8451264E7 io, 470500.8942060667 network, 2172180.958636831 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 2524.8526859025365, cumulative cost = {5667224.961589857 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2524.8526859025365, cumulative cost = {5664700.108903955 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 2904.224663124692, cumulative cost = {1.1338972101306796E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2904.224663124692, cumulative cost = {1.133606787664367E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 2594.152685902536, cumulative cost = {5670881.714275759 rows, 1.4544045325114453E7 cpu, 9.8456796E7 io, 477696.0942060667 network, 2188820.958636831 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 2594.152685902536, cumulative cost = {5668287.561589857 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2594.152685902536, cumulative cost = {5665693.408903955 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 2402.4477709449006, cumulative cost = {1.0389160748353398E8 rows, 3.832257254908856E9 cpu, 1.378226544E9 io, 4.8422229427967674E8 network, 2.7015546577897006E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 2402.4477709449006, cumulative cost = {1.0388920503576304E8 rows, 3.831872863265505E9 cpu, 1.378226544E9 io, 4.8416463553317404E8 network, 2.7015546577897006E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2402.4477709449006, cumulative cost = {1.038868025879921E8 rows, 3.831872863265505E9 cpu, 1.378226544E9 io, 4.8416463553317404E8 network, 2.7015546577897006E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0388341614022116E8 rows, 3.831666012717721E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.7013775377897006E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15524.318472966004, cumulative cost = {1.038678918217482E8 rows, 3.8314176236221538E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.6914419739670026E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0385236750327523E8 rows, 3.828685343570912E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6914419739670026E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 85642.31791421602, cumulative cost = {1.0383684318480226E8 rows, 3.8273150664842844E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6815064101443043E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 44278.083840109386, cumulative cost = {5.743838169296144E7 rows, 1.9070632267787466E9 cpu, 7.8757266E8 io, 2.392356653441561E8 network, 1.358075014144845E8 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 7920.835777098835, cumulative cost = {2.870905134596664E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 7920.835777098835, cumulative cost = {2.870113051018954E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,2,1,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], build=[right])\n:        :- [#4] Exchange(distribution=[hash[x]])\n:        +- [#5] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:        :- [#5] Calc(select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[11])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[12])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[14])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[23])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[15])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[5])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[13])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[25])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[5])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[19])
         :        :           :                       :- Reused(reference_id=[6])
         :        :           :                       +- Reused(reference_id=[7])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[26])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[8])
         :        :           :     +- Reused(reference_id=[7])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x0 AS X0, x AS X1])
         :        :                          :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[20])
         :        :                          :     :- Reused(reference_id=[9])
         :        :                          :     +- Reused(reference_id=[7])
         :        :                          +- Reused(reference_id=[10])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[28])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:        :- [#3] Exchange(distribution=[hash[x]])\n:        +- [#4] Exchange(distribution=[hash[y0]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[11])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[12])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[17])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[18])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[14])
         :           :- Reused(reference_id=[15])
         :           :- Exchange(distribution=[hash[y0]])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[16])
         :           :        +- Reused(reference_id=[17])
         :           :- Reused(reference_id=[16])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[18])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :           :           :  +- Reused(reference_id=[19])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[20])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[22])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[13])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[21])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[6])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])
         :                    :- Reused(reference_id=[21])
         :                    +- Reused(reference_id=[22])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[hash[X0]])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
         :                 :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[24])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[24])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[25])
         :                 :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[X0]])
         :                    +- Reused(reference_id=[26])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[27])
         :- Exchange(distribution=[hash[X1]])
         :  +- Reused(reference_id=[28])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[16])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[X1, x])
                  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[29])
                  :        :  +- Exchange(distribution=[hash[X0, X1]])
                  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :        :        +- Union(all=[true], union=[X0, X1])
                  :        :           :- Calc(select=[x AS X0, x AS X1])
                  :        :           :  +- Reused(reference_id=[6])
                  :        :           +- Calc(select=[x0 AS X0, y AS X1])
                  :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :        :                 :- Reused(reference_id=[9])
                  :        :                 +- Reused(reference_id=[4])
                  :        +- Reused(reference_id=[2])
                  :- Reused(reference_id=[21])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[X0, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[29])
                           +- Reused(reference_id=[7])

Job has been submitted with JobID 88e1b93a612576a4aaf249d8e6282dd6
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 957f3bfb_0b23_45a7_8ac6_b5fbd31aec65

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 20027.593426143452, cumulative cost = {5.428905093664398E8 rows, 1.8756321076921474E10 cpu, 7.38343134E9 io, 2.3542974397080455E9 network, 1.2574627098919556E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 20027.593426143452, cumulative cost = {5.428704817730137E8 rows, 1.8756000635426655E10 cpu, 7.38343134E9 io, 2.3542974397080455E9 network, 1.2561809439126825E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 20027.593426143452, cumulative cost = {5.428504541795876E8 rows, 1.8752475778983654E10 cpu, 7.38343134E9 io, 2.353816777465818E9 network, 1.2561809439126825E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 110485.33475046266, cumulative cost = {5.428304265861615E8 rows, 1.8750708013627647E10 cpu, 7.38343134E9 io, 2.353816777465818E9 network, 1.2548991779334095E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 109057.69465597608, cumulative cost = {3.987422326663401E8 rows, 1.3935581994434309E10 cpu, 5.414516136E9 io, 1.749095696238316E9 network, 9.11706186810969E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 9160.53602317735, cumulative cost = {1.8981744579743E8 rows, 6.93061547459462E9 cpu, 2.55959562E9 io, 8.735771381097846E8 network, 4.275736232632557E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 9160.53602317735, cumulative cost = {1.8980828526140684E8 rows, 6.93061547459462E9 cpu, 2.55959562E9 io, 8.735771381097846E8 network, 4.275736232632557E8 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.871422144520052E7 rows, 3.0205575617947035E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.1041470578651848E8 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 48406.109781046645, cumulative cost = {9.866581533541948E7 rows, 3.0197830640382066E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.0731671476053149E8 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.861740922563843E7 rows, 3.0112635887167425E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.0731671476053149E8 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 267039.8349581653, cumulative cost = {9.85690031158574E7 rows, 3.006990951357412E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.042187237345445E8 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 231060.49990091816, cumulative cost = {7.528809545713979E7 rows, 2.0690944395319576E9 cpu, 1.082930712E9 io, 2.5487395852685362E8 network, 1.3904977181902695E8 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 133378.1756423311, cumulative cost = {4.586514246990502E7 rows, 1.0142088821474899E9 cpu, 6.8916708E8 io, 1.2027844063632014E8 network, 7.187042298030357E7 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 97398.188085084, cumulative cost = {2.2717853115503248E7 rows, 7.644527218135142E7 cpu, 3.93836976E8 io, 1310331.8271606131 network, 6701215.46478604 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 94871.10282484468, cumulative cost = {1.69517423491929E7 rows, 6.220919171211392E7 cpu, 2.95369392E8 io, 893167.7855223233 network, 4513231.856048494 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 2527.1831352393115, cumulative cost = {5668756.781475266 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2527.1831352393115, cumulative cost = {5666229.598340027 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 80.5425, cumulative cost = {1420.4775000000002 rows, 29666.4 cpu, 11484.0 io, 3731.82 network, 4169.2 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 80.5425, cumulative cost = {1339.9350000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :           :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 80.5425, cumulative cost = {1259.3925000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 92343.91968960538, cumulative cost = {1.1188114464892788E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 92343.91968960538, cumulative cost = {1.1095770545203183E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 615625.1312640358, cumulative cost = {1.1003424625513578E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 615625.1312640358, cumulative cost = {1.0387799494249541E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2525.5417602393113, cumulative cost = {5670532.362985507 rows, 1.4525643442790704E7 cpu, 9.8462028E7 io, 475859.6838840334 network, 2183509.768737546 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 2525.5417602393113, cumulative cost = {5668006.821225267 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :  :     :           :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2525.5417602393113, cumulative cost = {5665481.279465027 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 2527.0852602393115, cumulative cost = {5668712.578225266 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 2527.0852602393115, cumulative cost = {5666185.492965027 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 79.89, cumulative cost = {1376.4700000000003 rows, 28802.199999999997 cpu, 11136.0 io, 3611.76 network, 3925.6 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 79.89, cumulative cost = {1296.5800000000002 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 79.89, cumulative cost = {1216.69 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.987557247114, cumulative cost = {2.301391117875944E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.987557247114, cumulative cost = {2.2977931191202193E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {719.8500000000001 rows, 12645.0 cpu, 5952.0 io, 1834.8000000000002 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 73.95, cumulative cost = {645.9000000000001 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 73.95, cumulative cost = {571.95 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 97682.32425858706, cumulative cost = {2.9191892487333864E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 97682.32425858706, cumulative cost = {2.9094210163075276E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :  :     :           :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :           :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[hash[y0]]): rowcount = 35969.04505724711, cumulative cost = {2.304914448881669E7 rows, 9.419815673241088E8 cpu, 2.953242E8 io, 1.1982957909053347E8 network, 6.516505431551753E7 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 35969.04505724711, cumulative cost = {2.301317544375944E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977206398702193E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.33505724711, cumulative cost = {2.301386782375944E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.33505724711, cumulative cost = {2.2977888488702193E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {677.8000000000001 rows, 11920.0 cpu, 5604.0 io, 1718.3999999999999 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 69.6, cumulative cost = {608.2 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 69.6, cumulative cost = {538.6 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 12664.130373469034, cumulative cost = {9.108490328018314E7 rows, 3.9095693508786798E9 cpu, 1.181335152E9 io, 4.985734405390264E8 network, 2.1644972617582297E8 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 12664.130373469034, cumulative cost = {9.107223914980967E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 12664.130373469034, cumulative cost = {9.105957501943621E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.104598488906275E7 rows, 3.90679358973234E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1643305817582297E8 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 83964.53582312689, cumulative cost = {9.096202035323963E7 rows, 3.9054501571591697E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1105932788314286E8 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.08780558174165E7 rows, 3.8906723988542995E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.1105932788314286E8 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 463203.42390592233, cumulative cost = {9.079409128159338E7 rows, 3.883261144071805E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.0568559759046274E8 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 277809.81555339345, cumulative cost = {5.089730975551337E7 rows, 1.9682254884479215E9 cpu, 6.89121396E8 io, 2.4831166988655582E8 network, 1.0403310630603433E8 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 93167.25510252891, cumulative cost = {3.268204719665723E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 93167.25510252891, cumulative cost = {3.25888799415547E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :              :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 184642.56045086452, cumulative cost = {1.793745274330275E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 184642.56045086452, cumulative cost = {1.775281018285189E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615634.6530057634, cumulative cost = {1.1619652372401021E7 rows, 1.5087171368682057E8 cpu, 1.96902108E8 io, 1.525719135920814E7 network, 2343426.221605916 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 615634.6530057634, cumulative cost = {1.1004017719395258E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.6530057634, cumulative cost = {1.0388383066389494E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 185393.6083525289, cumulative cost = {3.9433578102174096E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 185393.6083525289, cumulative cost = {3.924818449382157E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 620641.6390168595, cumulative cost = {3.3114275635469038E7 rows, 1.7684208270878427E9 cpu, 3.93763236E8 io, 2.3316399266375232E8 network, 6.71781412844284E7 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 620641.6390168595, cumulative cost = {3.249363399645218E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 620641.6390168595, cumulative cost = {3.187299235743532E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :              :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 99897.15863279873, cumulative cost = {2.088157291742541E8 rows, 7.004857462145033E9 cpu, 2.854920516E9 io, 8.755185581285313E8 network, 4.841325635477133E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], build=[right]): rowcount = 99897.15863279873, cumulative cost = {2.087158320156213E8 rows, 7.004857462145033E9 cpu, 2.854920516E9 io, 8.755185581285313E8 network, 4.841325635477133E8 memory}
         :        :- Exchange(distribution=[hash[x]]): rowcount = 617574.9477709449, cumulative cost = {1.0985330730200695E8 rows, 3.970839825446698E9 cpu, 1.476660048E9 io, 4.9935311392302793E8 network, 2.7100711561345613E8 memory}
         :        :  +- Calc(select=[x, X1]): rowcount = 617574.9477709449, cumulative cost = {1.09235732354236E8 rows, 3.8670872342211795E9 cpu, 1.476660048E9 io, 4.8453131517652524E8 network, 2.7100711561345613E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617574.9477709449, cumulative cost = {1.0861815740646507E8 rows, 3.8670872342211795E9 cpu, 1.476660048E9 io, 4.8453131517652524E8 network, 2.7100711561345613E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 15524.318472966004, cumulative cost = {1.0389894045869413E8 rows, 3.8341499036733956E9 cpu, 1.37822064E9 io, 4.8453131517652524E8 network, 2.7013775377897006E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0388341614022116E8 rows, 3.831666012717721E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.7013775377897006E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15524.318472966004, cumulative cost = {1.038678918217482E8 rows, 3.8314176236221538E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.6914419739670026E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0385236750327523E8 rows, 3.828685343570912E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6914419739670026E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 85642.31791421602, cumulative cost = {1.0383684318480226E8 rows, 3.8273150664842844E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6815064101443043E8 memory}
         :        :                       :- Union(all=[true], union=[X0, X1]): rowcount = 44278.083840109386, cumulative cost = {5.743838169296144E7 rows, 1.9070632267787466E9 cpu, 7.8757266E8 io, 2.392356653441561E8 network, 1.358075014144845E8 memory}
         :        :                       :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :        :                       :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :        :                       :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                       :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                       :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                       :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                       :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                       :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                       :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                       :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                       :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                       :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :        :                       :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :        :                       :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :        :                       :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :        :                       :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :        :                       :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :        :                       :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :        :                       :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :        :                       :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :        :                       :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                       :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                       :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  +- Calc(select=[X00 AS X0, X1]): rowcount = 7920.835777098835, cumulative cost = {2.870905134596664E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
         :        :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 7920.835777098835, cumulative cost = {2.870113051018954E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
         :        :                       :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :        +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
         :        :                       :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :        :                       :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :        :                       :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :        :                       :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :        :                       :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :                       :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :                             +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :        :                             :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :        :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                             :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :        :                                +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                                      :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X1]]): rowcount = 48406.109781046645, cumulative cost = {9.876262755498156E7 rows, 3.0286897882379193E9 cpu, 1.378260468E9 io, 3.761654442055034E8 network, 2.1041470578651848E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.871422144520052E7 rows, 3.0205575617947035E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.1041470578651848E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 48406.109781046645, cumulative cost = {9.866581533541948E7 rows, 3.0197830640382066E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.0731671476053149E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.861740922563843E7 rows, 3.0112635887167425E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.0731671476053149E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 267039.8349581653, cumulative cost = {9.85690031158574E7 rows, 3.006990951357412E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.042187237345445E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 231060.49990091816, cumulative cost = {7.528809545713979E7 rows, 2.0690944395319576E9 cpu, 1.082930712E9 io, 2.5487395852685362E8 network, 1.3904977181902695E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 133378.1756423311, cumulative cost = {4.586514246990502E7 rows, 1.0142088821474899E9 cpu, 6.8916708E8 io, 1.2027844063632014E8 network, 7.187042298030357E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 97398.188085084, cumulative cost = {2.2717853115503248E7 rows, 7.644527218135142E7 cpu, 3.93836976E8 io, 1310331.8271606131 network, 6701215.46478604 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 94871.10282484468, cumulative cost = {1.69517423491929E7 rows, 6.220919171211392E7 cpu, 2.95369392E8 io, 893167.7855223233 network, 4513231.856048494 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 2527.1831352393115, cumulative cost = {5668756.781475266 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2527.1831352393115, cumulative cost = {5666229.598340027 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 80.5425, cumulative cost = {1420.4775000000002 rows, 29666.4 cpu, 11484.0 io, 3731.82 network, 4169.2 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 80.5425, cumulative cost = {1339.9350000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :                       :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 80.5425, cumulative cost = {1259.3925000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 92343.91968960538, cumulative cost = {1.1188114464892788E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 92343.91968960538, cumulative cost = {1.1095770545203183E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 615625.1312640358, cumulative cost = {1.1003424625513578E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 615625.1312640358, cumulative cost = {1.0387799494249541E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2525.5417602393113, cumulative cost = {5670532.362985507 rows, 1.4525643442790704E7 cpu, 9.8462028E7 io, 475859.6838840334 network, 2183509.768737546 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 2525.5417602393113, cumulative cost = {5668006.821225267 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :                       :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2525.5417602393113, cumulative cost = {5665481.279465027 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 2527.0852602393115, cumulative cost = {5668712.578225266 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 2527.0852602393115, cumulative cost = {5666185.492965027 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 79.89, cumulative cost = {1376.4700000000003 rows, 28802.199999999997 cpu, 11136.0 io, 3611.76 network, 3925.6 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 79.89, cumulative cost = {1296.5800000000002 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 79.89, cumulative cost = {1216.69 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.987557247114, cumulative cost = {2.301391117875944E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.987557247114, cumulative cost = {2.2977931191202193E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {719.8500000000001 rows, 12645.0 cpu, 5952.0 io, 1834.8000000000002 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 73.95, cumulative cost = {645.9000000000001 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 73.95, cumulative cost = {571.95 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 97682.32425858706, cumulative cost = {2.9191892487333864E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 97682.32425858706, cumulative cost = {2.9094210163075276E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :                       :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[y0]]): rowcount = 35969.04505724711, cumulative cost = {2.304914448881669E7 rows, 9.419815673241088E8 cpu, 2.953242E8 io, 1.1982957909053347E8 network, 6.516505431551753E7 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 35969.04505724711, cumulative cost = {2.301317544375944E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977206398702193E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.33505724711, cumulative cost = {2.301386782375944E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.33505724711, cumulative cost = {2.2977888488702193E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {677.8000000000001 rows, 11920.0 cpu, 5604.0 io, 1718.3999999999999 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 69.6, cumulative cost = {608.2 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 69.6, cumulative cost = {538.6 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1427.6400944865807, cumulative cost = {1.4397770858507088E8 rows, 4.815015533858588E9 cpu, 1.968915204E9 io, 6.047210812275019E8 network, 3.431929911224404E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1427.6400944865807, cumulative cost = {1.439762809449764E8 rows, 4.815015533858588E9 cpu, 1.968915204E9 io, 6.047210812275019E8 network, 3.431929911224404E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0083245821347915E7 rows, 9.826821381446933E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.290298826829742E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7115.152858965637, cumulative cost = {4.007613066848895E7 rows, 9.825682956989498E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.244761848532362E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0069015515629984E7 rows, 9.813160287957718E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.244761848532362E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 39251.84762325718, cumulative cost = {4.006190036277102E7 rows, 9.806879992337997E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.199224870234983E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 36347.62296013249, cumulative cost = {2.868367641384097E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 36347.62296013249, cumulative cost = {2.8647328790880837E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 2524.8526859025365, cumulative cost = {5669749.814275759 rows, 1.4337513866439002E7 cpu, 9.8451264E7 io, 470500.8942060667 network, 2172180.958636831 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 2524.8526859025365, cumulative cost = {5667224.961589857 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2524.8526859025365, cumulative cost = {5664700.108903955 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 2904.224663124692, cumulative cost = {1.1338972101306796E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2904.224663124692, cumulative cost = {1.133606787664367E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 2594.152685902536, cumulative cost = {5670881.714275759 rows, 1.4544045325114453E7 cpu, 9.8456796E7 io, 477696.0942060667 network, 2188820.958636831 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 2594.152685902536, cumulative cost = {5668287.561589857 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2594.152685902536, cumulative cost = {5665693.408903955 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 2402.4477709449006, cumulative cost = {1.0389160748353398E8 rows, 3.832257254908856E9 cpu, 1.378226544E9 io, 4.8422229427967674E8 network, 2.7015546577897006E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 2402.4477709449006, cumulative cost = {1.0388920503576304E8 rows, 3.831872863265505E9 cpu, 1.378226544E9 io, 4.8416463553317404E8 network, 2.7015546577897006E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2402.4477709449006, cumulative cost = {1.038868025879921E8 rows, 3.831872863265505E9 cpu, 1.378226544E9 io, 4.8416463553317404E8 network, 2.7015546577897006E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0388341614022116E8 rows, 3.831666012717721E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.7013775377897006E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15524.318472966004, cumulative cost = {1.038678918217482E8 rows, 3.8314176236221538E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.6914419739670026E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0385236750327523E8 rows, 3.828685343570912E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6914419739670026E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 85642.31791421602, cumulative cost = {1.0383684318480226E8 rows, 3.8273150664842844E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6815064101443043E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 44278.083840109386, cumulative cost = {5.743838169296144E7 rows, 1.9070632267787466E9 cpu, 7.8757266E8 io, 2.392356653441561E8 network, 1.358075014144845E8 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 7920.835777098835, cumulative cost = {2.870905134596664E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 7920.835777098835, cumulative cost = {2.870113051018954E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,2,1,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], build=[right])\n:        :- [#4] Exchange(distribution=[hash[x]])\n:        +- [#5] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:        :- [#5] Calc(select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[11])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[12])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[14])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[23])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[15])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[5])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[13])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[25])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[5])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[19])
         :        :           :                       :- Reused(reference_id=[6])
         :        :           :                       +- Reused(reference_id=[7])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[26])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[8])
         :        :           :     +- Reused(reference_id=[7])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x0 AS X0, x AS X1])
         :        :                          :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[20])
         :        :                          :     :- Reused(reference_id=[9])
         :        :                          :     +- Reused(reference_id=[7])
         :        :                          +- Reused(reference_id=[10])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[28])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:        :- [#3] Exchange(distribution=[hash[x]])\n:        +- [#4] Exchange(distribution=[hash[y0]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[11])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[12])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[17])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[18])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[14])
         :           :- Reused(reference_id=[15])
         :           :- Exchange(distribution=[hash[y0]])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[16])
         :           :        +- Reused(reference_id=[17])
         :           :- Reused(reference_id=[16])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[18])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :           :           :  +- Reused(reference_id=[19])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[20])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[22])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[13])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[21])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[6])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])
         :                    :- Reused(reference_id=[21])
         :                    +- Reused(reference_id=[22])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[hash[X0]])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
         :                 :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[24])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[24])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[25])
         :                 :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[X0]])
         :                    +- Reused(reference_id=[26])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[27])
         :- Exchange(distribution=[hash[X1]])
         :  +- Reused(reference_id=[28])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[16])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[X1, x])
                  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[29])
                  :        :  +- Exchange(distribution=[hash[X0, X1]])
                  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :        :        +- Union(all=[true], union=[X0, X1])
                  :        :           :- Calc(select=[x AS X0, x AS X1])
                  :        :           :  +- Reused(reference_id=[6])
                  :        :           +- Calc(select=[x0 AS X0, y AS X1])
                  :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :        :                 :- Reused(reference_id=[9])
                  :        :                 +- Reused(reference_id=[4])
                  :        +- Reused(reference_id=[2])
                  :- Reused(reference_id=[21])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[X0, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[29])
                           +- Reused(reference_id=[7])

Job has been submitted with JobID 4e3cd21da14674dfd22da98e605b31cd
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 479507ae_3322_41bc_8684_9aadd8523c3c

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p31 AS (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, p31_2.X1 AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0) UNION (SELECT p42_0.X1 AS X0, p31_2.X1 AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN p31 AS p31_2 ON s_1.y = p31_2.X0)), p3 AS (SELECT p31_2.X1 AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN p31 AS p31_2 ON b_0.x = p31_2.X0 INNER JOIN b AS b_3 ON r_1.x = b_3.x UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT p31_3.X1 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p31 AS p31_3 ON s_2.y = p31_3.X0 INNER JOIN b AS b_4 ON r_0.x = b_4.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, s_3.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN a AS a_2 ON p15_0.X1 = a_2.x INNER JOIN s AS s_3 ON p15_0.X1 = s_3.x UNION (SELECT p15_0.X0 AS X0, s_4.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p15_0.X0 AS X0, s_2.y AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN s AS s_2 ON p15_0.X1 = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x) UNION (SELECT p5_0.X0 AS X0, s_3.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN a AS a_2 ON s_1.y = a_2.x INNER JOIN s AS s_3 ON s_1.y = s_3.x) UNION (SELECT p5_0.X0 AS X0, s_4.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p5_0.X0 AS X0, s_2.y AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN s AS s_2 ON s_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :  :     :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  +- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :     :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :     :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :  +- LogicalUnion(all=[false])
   :  :        :  :     :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :        :  :     :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :     :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :  +- LogicalUnion(all=[false])
   :  :        :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $8)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalUnion(all=[false])
   :  :              :     :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :     +- LogicalProject(X0=[$0], X1=[$1])
   :  :              :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :  :     :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  :     :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :  :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :        :  :  :  :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :  :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :     +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :  +- LogicalUnion(all=[false])
   :           :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :     +- LogicalUnion(all=[false])
   :           :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :  +- LogicalUnion(all=[false])
   :           :        :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :        +- LogicalUnion(all=[false])
   :           :           :- LogicalProject(X0=[$0], X1=[$5])
   :           :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :           +- LogicalProject(X0=[$0], X1=[$1])
   :           :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :- LogicalUnion(all=[false])
   :                 :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalUnion(all=[false])
   :                    :- LogicalProject(X0=[$0], X1=[$5])
   :                    :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                    :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                    :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                    :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                    +- LogicalProject(X0=[$0], X1=[$1])
   :                       +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                          :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                          +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :  +- LogicalUnion(all=[false])
            :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :     +- LogicalUnion(all=[false])
            :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$4])
            :     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :  +- LogicalUnion(all=[false])
            :        :     :- LogicalProject(X0=[$3], X1=[$0])
            :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalProject(X0=[$0], X1=[$0])
            :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalUnion(all=[false])
            :           :- LogicalProject(X0=[$0], X1=[$5])
            :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :           :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :           +- LogicalProject(X0=[$0], X1=[$1])
            :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalUnion(all=[false])
                     :- LogicalProject(X0=[$0], X1=[$5])
                     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                     +- LogicalProject(X0=[$0], X1=[$1])
                        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                           :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 20027.593426143452, cumulative cost = {5.428905093664398E8 rows, 1.8756321076921474E10 cpu, 7.38343134E9 io, 2.3542974397080455E9 network, 1.2574627098919556E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 20027.593426143452, cumulative cost = {5.428704817730137E8 rows, 1.8756000635426655E10 cpu, 7.38343134E9 io, 2.3542974397080455E9 network, 1.2561809439126825E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 20027.593426143452, cumulative cost = {5.428504541795876E8 rows, 1.8752475778983654E10 cpu, 7.38343134E9 io, 2.353816777465818E9 network, 1.2561809439126825E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 110485.33475046266, cumulative cost = {5.428304265861615E8 rows, 1.8750708013627647E10 cpu, 7.38343134E9 io, 2.353816777465818E9 network, 1.2548991779334095E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 109057.69465597608, cumulative cost = {3.987422326663401E8 rows, 1.3935581994434309E10 cpu, 5.414516136E9 io, 1.749095696238316E9 network, 9.11706186810969E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 9160.53602317735, cumulative cost = {1.8981744579743E8 rows, 6.93061547459462E9 cpu, 2.55959562E9 io, 8.735771381097846E8 network, 4.275736232632557E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 9160.53602317735, cumulative cost = {1.8980828526140684E8 rows, 6.93061547459462E9 cpu, 2.55959562E9 io, 8.735771381097846E8 network, 4.275736232632557E8 memory}
         :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.871422144520052E7 rows, 3.0205575617947035E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.1041470578651848E8 memory}
         :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 48406.109781046645, cumulative cost = {9.866581533541948E7 rows, 3.0197830640382066E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.0731671476053149E8 memory}
         :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.861740922563843E7 rows, 3.0112635887167425E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.0731671476053149E8 memory}
         :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 267039.8349581653, cumulative cost = {9.85690031158574E7 rows, 3.006990951357412E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.042187237345445E8 memory}
         :  :     :           :- Union(all=[true], union=[X0, X1]): rowcount = 231060.49990091816, cumulative cost = {7.528809545713979E7 rows, 2.0690944395319576E9 cpu, 1.082930712E9 io, 2.5487395852685362E8 network, 1.3904977181902695E8 memory}
         :  :     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 133378.1756423311, cumulative cost = {4.586514246990502E7 rows, 1.0142088821474899E9 cpu, 6.8916708E8 io, 1.2027844063632014E8 network, 7.187042298030357E7 memory}
         :  :     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 97398.188085084, cumulative cost = {2.2717853115503248E7 rows, 7.644527218135142E7 cpu, 3.93836976E8 io, 1310331.8271606131 network, 6701215.46478604 memory}
         :  :     :           :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 94871.10282484468, cumulative cost = {1.69517423491929E7 rows, 6.220919171211392E7 cpu, 2.95369392E8 io, 893167.7855223233 network, 4513231.856048494 memory}
         :  :     :           :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 2527.1831352393115, cumulative cost = {5668756.781475266 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :  :     :           :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2527.1831352393115, cumulative cost = {5666229.598340027 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :  :     :           :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :           :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :           :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 80.5425, cumulative cost = {1420.4775000000002 rows, 29666.4 cpu, 11484.0 io, 3731.82 network, 4169.2 memory}
         :  :     :           :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 80.5425, cumulative cost = {1339.9350000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :           :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 80.5425, cumulative cost = {1259.3925000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :  :     :           :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :  :     :           :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 92343.91968960538, cumulative cost = {1.1188114464892788E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :  :     :           :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 92343.91968960538, cumulative cost = {1.1095770545203183E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :  :     :           :  :  :  :        :- Calc(select=[y, X0]): rowcount = 615625.1312640358, cumulative cost = {1.1003424625513578E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :  :     :           :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 615625.1312640358, cumulative cost = {1.0387799494249541E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :  :     :           :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2525.5417602393113, cumulative cost = {5670532.362985507 rows, 1.4525643442790704E7 cpu, 9.8462028E7 io, 475859.6838840334 network, 2183509.768737546 memory}
         :  :     :           :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 2525.5417602393113, cumulative cost = {5668006.821225267 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :  :     :           :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2525.5417602393113, cumulative cost = {5665481.279465027 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :  :     :           :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :           :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :           :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :           :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :           :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 2527.0852602393115, cumulative cost = {5668712.578225266 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :  :     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 2527.0852602393115, cumulative cost = {5666185.492965027 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :  :     :           :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :           :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :           :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :           :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :           :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :           :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :           :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :           :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 79.89, cumulative cost = {1376.4700000000003 rows, 28802.199999999997 cpu, 11136.0 io, 3611.76 network, 3925.6 memory}
         :  :     :           :  :  :           +- Calc(select=[x0, y]): rowcount = 79.89, cumulative cost = {1296.5800000000002 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 79.89, cumulative cost = {1216.69 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :  :     :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :           :  :  :                    +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.987557247114, cumulative cost = {2.301391117875944E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :  :     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.987557247114, cumulative cost = {2.2977931191202193E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :  :     :           :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :           :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :           :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :           :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :           :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :           :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :           :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :           :  :        :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {719.8500000000001 rows, 12645.0 cpu, 5952.0 io, 1834.8000000000002 network, 68.0 memory}
         :  :     :           :  :           +- Calc(select=[x0, y0]): rowcount = 73.95, cumulative cost = {645.9000000000001 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 73.95, cumulative cost = {571.95 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :  :     :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :  :     :           :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :  +- Calc(select=[X0, y0 AS X1]): rowcount = 97682.32425858706, cumulative cost = {2.9191892487333864E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :  :     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 97682.32425858706, cumulative cost = {2.9094210163075276E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :  :     :           :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :           :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :        +- Exchange(distribution=[hash[y0]]): rowcount = 35969.04505724711, cumulative cost = {2.304914448881669E7 rows, 9.419815673241088E8 cpu, 2.953242E8 io, 1.1982957909053347E8 network, 6.516505431551753E7 memory}
         :  :     :           :           +- Calc(select=[X0, y0]): rowcount = 35969.04505724711, cumulative cost = {2.301317544375944E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :  :     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977206398702193E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :  :     :           :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :           :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :           :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :           :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :           :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :           :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :           :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :           :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :           :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :           :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :           :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :           :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :           :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :           :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :           +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.33505724711, cumulative cost = {2.301386782375944E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.33505724711, cumulative cost = {2.2977888488702193E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :  :     :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {677.8000000000001 rows, 11920.0 cpu, 5604.0 io, 1718.3999999999999 network, 56.0 memory}
         :  :     :                    +- Calc(select=[x0, y0]): rowcount = 69.6, cumulative cost = {608.2 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 69.6, cumulative cost = {538.6 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :  :     :                             +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :  :     :                                   :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[broadcast]): rowcount = 12664.130373469034, cumulative cost = {9.108490328018314E7 rows, 3.9095693508786798E9 cpu, 1.181335152E9 io, 4.985734405390264E8 network, 2.1644972617582297E8 memory}
         :  :        +- Calc(select=[X0, X1]): rowcount = 12664.130373469034, cumulative cost = {9.107223914980967E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 12664.130373469034, cumulative cost = {9.105957501943621E7 rows, 3.9075430900189247E9 cpu, 1.181335152E9 io, 4.9826950141006315E8 network, 2.1644972617582297E8 memory}
         :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.104598488906275E7 rows, 3.90679358973234E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1643305817582297E8 memory}
         :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 83964.53582312689, cumulative cost = {9.096202035323963E7 rows, 3.9054501571591697E9 cpu, 1.181329596E9 io, 4.9826394541006315E8 network, 2.1105932788314286E8 memory}
         :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 83964.53582312689, cumulative cost = {9.08780558174165E7 rows, 3.8906723988542995E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.1105932788314286E8 memory}
         :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 463203.42390592233, cumulative cost = {9.079409128159338E7 rows, 3.883261144071805E9 cpu, 1.181329596E9 io, 4.962487965503081E8 network, 2.0568559759046274E8 memory}
         :  :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 277809.81555339345, cumulative cost = {5.089730975551337E7 rows, 1.9682254884479215E9 cpu, 6.89121396E8 io, 2.4831166988655582E8 network, 1.0403310630603433E8 memory}
         :  :              :           :  :- Calc(select=[X1 AS X0, x AS X1]): rowcount = 93167.25510252891, cumulative cost = {3.268204719665723E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :              :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 93167.25510252891, cumulative cost = {3.25888799415547E7 rows, 1.6709643957215014E9 cpu, 3.93774324E8 io, 2.1828134452734768E8 network, 6.72153300844284E7 memory}
         :  :              :           :  :     :- Calc(select=[x, X1]): rowcount = 620652.0340168595, cumulative cost = {3.249478668645217E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :              :           :  :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 620652.0340168595, cumulative cost = {3.187413465243531E7 rows, 1.6659213954493666E9 cpu, 3.93768768E8 io, 2.1827578852734768E8 network, 6.71986620844284E7 memory}
         :  :              :           :  :     :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :           :  :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :     +- Exchange(distribution=[hash[X0]]): rowcount = 36038.226779063494, cumulative cost = {2.305019861841845E7 rows, 9.437440976351341E8 cpu, 2.9532936E8 io, 1.1983638052734768E8 network, 6.5180521384800844E7 memory}
         :  :              :           :  :     :        +- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :              :           :  :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :  :              :           :  :     :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :              :           :  :     :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :              :           :  :     :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :              :           :  :     :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :              :           :  :     :              :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :           :  :     :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :           :  :     :              :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :           :  :     :              :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :              :           :  :     :              :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :  :     :              :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :  :     :              :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :  :     :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :  :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :  +- Calc(select=[X0, x AS X1]): rowcount = 184642.56045086452, cumulative cost = {1.793745274330275E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :              :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 184642.56045086452, cumulative cost = {1.775281018285189E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :              :           :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :              :           :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615634.6530057634, cumulative cost = {1.1619652372401021E7 rows, 1.5087171368682057E8 cpu, 1.96902108E8 io, 1.525719135920814E7 network, 2343426.221605916 memory}
         :  :              :           :           +- Calc(select=[x, X0]): rowcount = 615634.6530057634, cumulative cost = {1.1004017719395258E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :              :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.6530057634, cumulative cost = {1.0388383066389494E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :              :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                 +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :  :              :           :                    +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :              :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :              :           :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :  :              :           :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :  :              :           :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :  :              :           :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :  :              :           :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :              :           :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :              :           :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :           :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :           :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :              :           :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :              :           :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :              :           :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :           :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :           :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :              :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :              :           +- Calc(select=[X1 AS X0, x0 AS X1]): rowcount = 185393.6083525289, cumulative cost = {3.9433578102174096E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, X1, x0, y], build=[right]): rowcount = 185393.6083525289, cumulative cost = {3.924818449382157E7 rows, 1.9145724521999776E9 cpu, 4.922082E8 io, 2.4793712666375232E8 network, 1.016524912844284E8 memory}
         :  :              :                 :- Exchange(distribution=[hash[x]]): rowcount = 620641.6390168595, cumulative cost = {3.3114275635469038E7 rows, 1.7684208270878427E9 cpu, 3.93763236E8 io, 2.3316399266375232E8 network, 6.71781412844284E7 memory}
         :  :              :                 :  +- Calc(select=[x, X1]): rowcount = 620641.6390168595, cumulative cost = {3.249363399645218E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :              :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 620641.6390168595, cumulative cost = {3.187299235743532E7 rows, 1.6641530317330103E9 cpu, 3.93763236E8 io, 2.182685933273477E8 network, 6.71781412844284E7 memory}
         :  :              :                 :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :        +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :  :              :                 :           +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :  :              :                 :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :              :                 :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :              :                 :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :              :                 :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :              :                 :                 :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :                 :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :              :                 :                 :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :                 :                 :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :              :                 :                 :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :              :                 :                 :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                 :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                 :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                 :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :                 :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :              :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :              :                 +- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :              :                    +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :              :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 99897.15863279873, cumulative cost = {2.088157291742541E8 rows, 7.004857462145033E9 cpu, 2.854920516E9 io, 8.755185581285313E8 network, 4.841325635477133E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X10, x)], select=[x, X1, X0, X10], build=[right]): rowcount = 99897.15863279873, cumulative cost = {2.087158320156213E8 rows, 7.004857462145033E9 cpu, 2.854920516E9 io, 8.755185581285313E8 network, 4.841325635477133E8 memory}
         :        :- Exchange(distribution=[hash[x]]): rowcount = 617574.9477709449, cumulative cost = {1.0985330730200695E8 rows, 3.970839825446698E9 cpu, 1.476660048E9 io, 4.9935311392302793E8 network, 2.7100711561345613E8 memory}
         :        :  +- Calc(select=[x, X1]): rowcount = 617574.9477709449, cumulative cost = {1.09235732354236E8 rows, 3.8670872342211795E9 cpu, 1.476660048E9 io, 4.8453131517652524E8 network, 2.7100711561345613E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617574.9477709449, cumulative cost = {1.0861815740646507E8 rows, 3.8670872342211795E9 cpu, 1.476660048E9 io, 4.8453131517652524E8 network, 2.7100711561345613E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 15524.318472966004, cumulative cost = {1.0389894045869413E8 rows, 3.8341499036733956E9 cpu, 1.37822064E9 io, 4.8453131517652524E8 network, 2.7013775377897006E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0388341614022116E8 rows, 3.831666012717721E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.7013775377897006E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15524.318472966004, cumulative cost = {1.038678918217482E8 rows, 3.8314176236221538E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.6914419739670026E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0385236750327523E8 rows, 3.828685343570912E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6914419739670026E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 85642.31791421602, cumulative cost = {1.0383684318480226E8 rows, 3.8273150664842844E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6815064101443043E8 memory}
         :        :                       :- Union(all=[true], union=[X0, X1]): rowcount = 44278.083840109386, cumulative cost = {5.743838169296144E7 rows, 1.9070632267787466E9 cpu, 7.8757266E8 io, 2.392356653441561E8 network, 1.358075014144845E8 memory}
         :        :                       :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :        :                       :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :        :                       :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                       :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                       :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                       :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                       :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                       :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                       :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                       :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                       :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                       :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :        :                       :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :        :                       :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :        :                       :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :        :                       :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :        :                       :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :        :                       :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :        :                       :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :        :                       :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :        :                       :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                       :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                       :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :  +- Calc(select=[X00 AS X0, X1]): rowcount = 7920.835777098835, cumulative cost = {2.870905134596664E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
         :        :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 7920.835777098835, cumulative cost = {2.870113051018954E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
         :        :                       :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :                       :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
         :        :                       :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :                       :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :                       :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :                       :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :                       :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                       :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                       :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                       :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                       :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                       :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :        +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
         :        :                       :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :        :                       :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :        :                       :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :        :                       :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :        :                       :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :                       :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :                             +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
         :        :                             :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :        :                             :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                             :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                             :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                             :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                             :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                             :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                             :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                             :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                             :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
         :        :                                +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :                                      :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                                      :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                                      :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                                      :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X1]]): rowcount = 48406.109781046645, cumulative cost = {9.876262755498156E7 rows, 3.0286897882379193E9 cpu, 1.378260468E9 io, 3.761654442055034E8 network, 2.1041470578651848E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.871422144520052E7 rows, 3.0205575617947035E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.1041470578651848E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 48406.109781046645, cumulative cost = {9.866581533541948E7 rows, 3.0197830640382066E9 cpu, 1.378260468E9 io, 3.750036975707583E8 network, 2.0731671476053149E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 48406.109781046645, cumulative cost = {9.861740922563843E7 rows, 3.0112635887167425E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.0731671476053149E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 267039.8349581653, cumulative cost = {9.85690031158574E7 rows, 3.006990951357412E9 cpu, 1.378260468E9 io, 3.7384195093601316E8 network, 2.042187237345445E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 231060.49990091816, cumulative cost = {7.528809545713979E7 rows, 2.0690944395319576E9 cpu, 1.082930712E9 io, 2.5487395852685362E8 network, 1.3904977181902695E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 133378.1756423311, cumulative cost = {4.586514246990502E7 rows, 1.0142088821474899E9 cpu, 6.8916708E8 io, 1.2027844063632014E8 network, 7.187042298030357E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 97398.188085084, cumulative cost = {2.2717853115503248E7 rows, 7.644527218135142E7 cpu, 3.93836976E8 io, 1310331.8271606131 network, 6701215.46478604 memory}
         :                       :  :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 94871.10282484468, cumulative cost = {1.69517423491929E7 rows, 6.220919171211392E7 cpu, 2.95369392E8 io, 893167.7855223233 network, 4513231.856048494 memory}
         :                       :  :  :  :  :- Calc(select=[X0, y AS X1]): rowcount = 2527.1831352393115, cumulative cost = {5668756.781475266 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :                       :  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2527.1831352393115, cumulative cost = {5666229.598340027 rows, 1.4139551701152416E7 cpu, 9.8467932E7 io, 417284.1016382899 network, 2188263.748737546 memory}
         :                       :  :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :  :  :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :  :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :  :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 80.5425, cumulative cost = {1420.4775000000002 rows, 29666.4 cpu, 11484.0 io, 3731.82 network, 4169.2 memory}
         :                       :  :  :  :  :        +- Calc(select=[x, y]): rowcount = 80.5425, cumulative cost = {1339.9350000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :                       :  :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 80.5425, cumulative cost = {1259.3925000000002 rows, 16779.6 cpu, 11484.0 io, 1798.8000000000002 network, 4169.2 memory}
         :                       :  :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {715.8500000000001 rows, 12484.0 cpu, 5928.0 io, 1798.8000000000002 network, 28.0 memory}
         :                       :  :  :  :  :                 +- Calc(select=[x, y]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :  :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 92343.91968960538, cumulative cost = {1.1188114464892788E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :                       :  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x, y0], build=[right]): rowcount = 92343.91968960538, cumulative cost = {1.1095770545203183E7 rows, 4.797476890813666E7 cpu, 1.9690146E8 io, 475883.6838840334 network, 2324968.1073109475 memory}
         :                       :  :  :  :        :- Calc(select=[y, X0]): rowcount = 615625.1312640358, cumulative cost = {1.1003424625513578E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :                       :  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right]): rowcount = 615625.1312640358, cumulative cost = {1.0387799494249541E7 rows, 4.735898377687262E7 cpu, 1.96901436E8 io, 475859.6838840334 network, 2324940.1073109475 memory}
         :                       :  :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 2525.5417602393113, cumulative cost = {5670532.362985507 rows, 1.4525643442790704E7 cpu, 9.8462028E7 io, 475859.6838840334 network, 2183509.768737546 memory}
         :                       :  :  :  :        :        +- Calc(select=[X0, y]): rowcount = 2525.5417602393113, cumulative cost = {5668006.821225267 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :                       :  :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right]): rowcount = 2525.5417602393113, cumulative cost = {5665481.279465027 rows, 1.4121556761152415E7 cpu, 9.8462028E7 io, 415246.68163828994 network, 2183509.768737546 memory}
         :                       :  :  :  :        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :  :        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :  :        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :  :        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :  :        :              :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :        :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :  :        :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :        :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :                       :  :  :  :        :                 +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :        :                       :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        :                       +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :        :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y AS X1]): rowcount = 2527.0852602393115, cumulative cost = {5668712.578225266 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right]): rowcount = 2527.0852602393115, cumulative cost = {5666185.492965027 rows, 1.4138682281152414E7 cpu, 9.8467584E7 io, 417164.0416382899 network, 2187983.608737546 memory}
         :                       :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :        :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :        :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 79.89, cumulative cost = {1376.4700000000003 rows, 28802.199999999997 cpu, 11136.0 io, 3611.76 network, 3925.6 memory}
         :                       :  :  :           +- Calc(select=[x0, y]): rowcount = 79.89, cumulative cost = {1296.5800000000002 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], isBroadcast=[true], build=[right]): rowcount = 79.89, cumulative cost = {1216.69 rows, 16019.8 cpu, 11136.0 io, 1694.3999999999999 network, 3925.6 memory}
         :                       :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :                       :  :  :                    +- Calc(select=[x, y]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.987557247114, cumulative cost = {2.301391117875944E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.987557247114, cumulative cost = {2.2977931191202193E7 rows, 9.376302317904961E8 cpu, 2.95330104E8 io, 1.1896810880915953E8 network, 6.516920751551753E7 memory}
         :                       :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :  :        :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :        :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :        :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :        :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 73.95, cumulative cost = {719.8500000000001 rows, 12645.0 cpu, 5952.0 io, 1834.8000000000002 network, 68.0 memory}
         :                       :  :           +- Calc(select=[x0, y0]): rowcount = 73.95, cumulative cost = {645.9000000000001 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :                       :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y)], select=[x, x0, y, y0], build=[right]): rowcount = 73.95, cumulative cost = {571.95 rows, 813.0 cpu, 5952.0 io, 60.0 network, 68.0 memory}
         :                       :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 60.0 network, 28.0 memory}
         :                       :  :                    +- Calc(select=[x, y, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :  :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X0, y0 AS X1]): rowcount = 97682.32425858706, cumulative cost = {2.9191892487333864E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, X0, y00], build=[right]): rowcount = 97682.32425858706, cumulative cost = {2.9094210163075276E7 rows, 1.0546544968845668E9 cpu, 3.93763632E8 io, 1.3459551789053348E8 network, 6.717934883872336E7 memory}
         :                       :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[y0]]): rowcount = 35969.04505724711, cumulative cost = {2.304914448881669E7 rows, 9.419815673241088E8 cpu, 2.953242E8 io, 1.1982957909053347E8 network, 6.516505431551753E7 memory}
         :                       :           +- Calc(select=[X0, y0]): rowcount = 35969.04505724711, cumulative cost = {2.301317544375944E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977206398702193E7 rows, 9.359387677544913E8 cpu, 2.953242E8 io, 1.1896632200915954E8 network, 6.516505431551753E7 memory}
         :                       :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                       :                    +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                       :                          :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, y0 AS X1]): rowcount = 35979.33505724711, cumulative cost = {2.301386782375944E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right]): rowcount = 35979.33505724711, cumulative cost = {2.2977888488702193E7 rows, 9.376294719904962E8 cpu, 2.95329756E8 io, 1.1896799240915954E8 network, 6.516895191551753E7 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                             :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {677.8000000000001 rows, 11920.0 cpu, 5604.0 io, 1718.3999999999999 network, 56.0 memory}
         :                                +- Calc(select=[x0, y0]): rowcount = 69.6, cumulative cost = {608.2 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, x0, y0], build=[right]): rowcount = 69.6, cumulative cost = {538.6 rows, 784.0 cpu, 5604.0 io, 48.0 network, 56.0 memory}
         :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {6.0 rows, 321.0 cpu, 48.0 io, 48.0 network, 28.0 memory}
         :                                         +- Calc(select=[x, y0]): rowcount = 1.0, cumulative cost = {5.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                            +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[left]): rowcount = 1.0, cumulative cost = {4.0 rows, 161.0 cpu, 48.0 io, 24.0 network, 28.0 memory}
         :                                               :- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                               :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1427.6400944865807, cumulative cost = {1.4397770858507088E8 rows, 4.815015533858588E9 cpu, 1.968915204E9 io, 6.047210812275019E8 network, 3.431929911224404E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1427.6400944865807, cumulative cost = {1.439762809449764E8 rows, 4.815015533858588E9 cpu, 1.968915204E9 io, 6.047210812275019E8 network, 3.431929911224404E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0083245821347915E7 rows, 9.826821381446933E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.290298826829742E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7115.152858965637, cumulative cost = {4.007613066848895E7 rows, 9.825682956989498E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.244761848532362E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0069015515629984E7 rows, 9.813160287957718E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.244761848532362E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 39251.84762325718, cumulative cost = {4.006190036277102E7 rows, 9.806879992337997E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.199224870234983E7 memory}
               :           :- Calc(select=[X0, X10 AS X1]): rowcount = 36347.62296013249, cumulative cost = {2.868367641384097E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 36347.62296013249, cumulative cost = {2.8647328790880837E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :           :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :           :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :           :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :           :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :           :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 2524.8526859025365, cumulative cost = {5669749.814275759 rows, 1.4337513866439002E7 cpu, 9.8451264E7 io, 470500.8942060667 network, 2172180.958636831 memory}
               :           :        +- Calc(select=[X1, x]): rowcount = 2524.8526859025365, cumulative cost = {5667224.961589857 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2524.8526859025365, cumulative cost = {5664700.108903955 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :              :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[X0, X10 AS X1]): rowcount = 2904.224663124692, cumulative cost = {1.1338972101306796E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2904.224663124692, cumulative cost = {1.133606787664367E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
               :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
               :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
               :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
               :                 :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                 :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 2594.152685902536, cumulative cost = {5670881.714275759 rows, 1.4544045325114453E7 cpu, 9.8456796E7 io, 477696.0942060667 network, 2188820.958636831 memory}
               :                    +- Calc(select=[X0, X1]): rowcount = 2594.152685902536, cumulative cost = {5668287.561589857 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2594.152685902536, cumulative cost = {5665693.408903955 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :                          :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                          :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                          :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                          :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 2402.4477709449006, cumulative cost = {1.0389160748353398E8 rows, 3.832257254908856E9 cpu, 1.378226544E9 io, 4.8422229427967674E8 network, 2.7015546577897006E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 2402.4477709449006, cumulative cost = {1.0388920503576304E8 rows, 3.831872863265505E9 cpu, 1.378226544E9 io, 4.8416463553317404E8 network, 2.7015546577897006E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2402.4477709449006, cumulative cost = {1.038868025879921E8 rows, 3.831872863265505E9 cpu, 1.378226544E9 io, 4.8416463553317404E8 network, 2.7015546577897006E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0388341614022116E8 rows, 3.831666012717721E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.7013775377897006E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15524.318472966004, cumulative cost = {1.038678918217482E8 rows, 3.8314176236221538E9 cpu, 1.37822064E9 io, 4.8415873153317404E8 network, 2.6914419739670026E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15524.318472966004, cumulative cost = {1.0385236750327523E8 rows, 3.828685343570912E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6914419739670026E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 85642.31791421602, cumulative cost = {1.0383684318480226E8 rows, 3.8273150664842844E9 cpu, 1.37822064E9 io, 4.8378614788982284E8 network, 2.6815064101443043E8 memory}
                        :           :- Union(all=[true], union=[X0, X1]): rowcount = 44278.083840109386, cumulative cost = {5.743838169296144E7 rows, 1.9070632267787466E9 cpu, 7.8757266E8 io, 2.392356653441561E8 network, 1.358075014144845E8 memory}
                        :           :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :           :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
                        :           :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
                        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
                        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
                        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
                        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :  +- Calc(select=[X00 AS X0, X1]): rowcount = 7920.835777098835, cumulative cost = {2.870905134596664E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
                        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 7920.835777098835, cumulative cost = {2.870113051018954E7 rows, 9.547699975225582E8 cpu, 3.93785808E8 io, 1.1978743164792673E8 network, 6.829907687736107E7 memory}
                        :           :        :- Calc(select=[X0, X1]): rowcount = 36038.226779063494, cumulative cost = {2.301416039163939E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 36038.226779063494, cumulative cost = {2.2978122164860327E7 rows, 9.376896755362514E8 cpu, 2.9532936E8 io, 1.1897146308465016E8 network, 6.5180521384800844E7 memory}
                        :           :        :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :           :        :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :           :        :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :           :        :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :           :        :     :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :           :        :     :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :        :     :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :           :        :     :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :        :     :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :        :     :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :        :     :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :           :        :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :        :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :        +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
                        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
                        :           :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
                        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
                        :           :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
                        :           :                       :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                        :           :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                        :           :                       :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :                       :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :                          +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                        :           :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[X1 AS X0, X10 AS X1]): rowcount = 41364.23407410663, cumulative cost = {4.63128191739266E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, X10, x], build=[right]): rowcount = 41364.23407410663, cumulative cost = {4.627145493985249E7 rows, 1.9201661973876233E9 cpu, 5.9064798E8 io, 2.4455048254566675E8 network, 1.3234313959994593E8 memory}
                        :                 :- Exchange(distribution=[hash[X0]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
                        :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                        :                 :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                        :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                        :                 :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                        :                 :              :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                        :                 :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                 :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                 :              +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                 :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                 :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                 :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                 :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                 :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[x]]): rowcount = 35968.9267790635, cumulative cost = {2.304906671841846E7 rows, 9.419762883187778E8 cpu, 2.95323828E8 io, 1.1982918532734768E8 network, 6.5163881384800844E7 memory}
                        :                    +- Calc(select=[X1, x]): rowcount = 35968.9267790635, cumulative cost = {2.3013097791639395E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 35968.9267790635, cumulative cost = {2.297712886486033E7 rows, 9.359335086198951E8 cpu, 2.95323828E8 io, 1.1896593108465016E8 network, 6.5163881384800844E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
                        :                          :           :- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                        :                          :           :        +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                        :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,2,1,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X10 = x)], select=[x, X1, X0, X10], build=[right])\n:        :- [#4] Exchange(distribution=[hash[x]])\n:        +- [#5] Exchange(distribution=[hash[X1]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[27])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[2,1,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X00 AS X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:        :- [#5] Calc(select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X1 AS X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, X10, x], build=[right])\n      :- [#1] Exchange(distribution=[hash[X0]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- Union(all=[true], union=[X0, X1])
         :        :           :              :- Calc(select=[y AS X0, x AS X1])
         :        :           :              :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[11])
         :        :           :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :        :           :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              +- Calc(select=[y AS X0, x0 AS X1])
         :        :           :                 +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[12])
         :        :           :                    :- Exchange(distribution=[hash[x]])
         :        :           :                    :  +- Reused(reference_id=[1])
         :        :           :                    +- Exchange(distribution=[hash[y]])
         :        :           :                       +- Calc(select=[y, x0])(reuse_id=[9])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[14])
         :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[23])
         :        :           :  +- Calc(select=[X1, x])
         :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :        :           :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :        :        +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y0 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :        :           :- Exchange(distribution=[hash[y]])
         :        :           :        :           :  +- Reused(reference_id=[1])
         :        :           :        :           :- Exchange(distribution=[hash[x]])(reuse_id=[15])
         :        :           :        :           :  +- Calc(select=[x, y0])(reuse_id=[5])
         :        :           :        :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :           :        :           :        :- Reused(reference_id=[1])
         :        :           :        :           :        +- Reused(reference_id=[2])
         :        :           :        :           :- Reused(reference_id=[1])
         :        :           :        :           +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[13])
         :        :           :        +- Reused(reference_id=[2])
         :        :           :- Reused(reference_id=[3])
         :        :           :- Exchange(distribution=[broadcast])(reuse_id=[25])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[hash[X0, X1]])
         :        :           :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Union(all=[true], union=[X0, X1])
         :        :           :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :        :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :        :           :                 :     :- Reused(reference_id=[5])
         :        :           :                 :     +- Reused(reference_id=[4])
         :        :           :                 +- Calc(select=[x AS X0, x AS X1])(reuse_id=[10])
         :        :           :                    +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[19])
         :        :           :                       :- Reused(reference_id=[6])
         :        :           :                       +- Reused(reference_id=[7])
         :        :           :- Calc(select=[X0, X1])(reuse_id=[26])
         :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :     :- Reused(reference_id=[8])
         :        :           :     +- Reused(reference_id=[7])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x0 AS X0, x AS X1])
         :        :                          :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[20])
         :        :                          :     :- Reused(reference_id=[9])
         :        :                          :     +- Reused(reference_id=[7])
         :        :                          +- Reused(reference_id=[10])
         :        +- Reused(reference_id=[4])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[28])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :  :- Calc(select=[X0, y AS X1])\n:  :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])\n:  :  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :  :     +- [#10] Exchange(distribution=[broadcast])\n:  :  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x, y0], build=[right])\n:  :  :  :        :- Calc(select=[y, X0])\n:  :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X0, y0], isBroadcast=[true], build=[right])\n:  :  :  :        :     :- [#12] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :        :     +- [#13] Exchange(distribution=[broadcast])\n:  :  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y], isBroadcast=[true], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n:  :        :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, X0, y00], build=[right])\n:        :- [#3] Exchange(distribution=[hash[x]])\n:        +- [#4] Exchange(distribution=[hash[y0]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x0)], select=[X0, X1, x0, y0], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, y AS X1])
         :           :           :  +- Reused(reference_id=[11])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[12])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, x0, y0], build=[right])
         :           :        :- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[17])
         :           :           +- Calc(select=[x, y0])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[left])(reuse_id=[18])
         :           :                 :- Reused(reference_id=[2])
         :           :                 +- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :                    +- Reused(reference_id=[14])
         :           :- Reused(reference_id=[15])
         :           :- Exchange(distribution=[hash[y0]])
         :           :  +- Calc(select=[X0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[right])
         :           :        :- Reused(reference_id=[16])
         :           :        +- Reused(reference_id=[17])
         :           :- Reused(reference_id=[16])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y0])
         :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y)], select=[x, x0, y, y0], build=[right])
         :           :        :- Reused(reference_id=[6])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y, y0])
         :           :              +- Reused(reference_id=[18])
         :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :           :  +- Exchange(distribution=[hash[X0, X1]])
         :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           :        +- Union(all=[true], union=[X0, X1])
         :           :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :           :           :  +- Reused(reference_id=[19])
         :           :           +- Calc(select=[x0 AS X0, y AS X1])
         :           :              +- Reused(reference_id=[20])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x0, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])(reuse_id=[22])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[13])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[21])
         :           :- Exchange(distribution=[broadcast])
         :           :  +- Calc(select=[x, y])
         :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], isBroadcast=[true], build=[right])
         :           :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :        :  +- Reused(reference_id=[13])
         :           :        +- Exchange(distribution=[broadcast])
         :           :           +- Calc(select=[x, y])
         :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0, y], build=[right])
         :           :                 :- Reused(reference_id=[6])
         :           :                 +- Reused(reference_id=[2])
         :           :- Reused(reference_id=[2])
         :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[broadcast])
         :              +- Calc(select=[X0, y])
         :                 +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y], isBroadcast=[true], build=[right])
         :                    :- Reused(reference_id=[21])
         :                    +- Reused(reference_id=[22])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[7])
         :        +- Exchange(distribution=[hash[X0, X1]])
         :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              +- MultipleInput(readOrder=[1,0,0,0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X1 AS X0, x AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:  :     :- Calc(select=[x, X1])\n:  :     :  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n:  :     :     :- [#6] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :     :     +- [#7] Exchange(distribution=[hash[X0]])\n:  :     +- [#3] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#5] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, X1, x0, y], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X1])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])
         :                 :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[23])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[24])
         :                 :  +- Calc(select=[x, y])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :                 :        :- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[7])
         :                 :- Reused(reference_id=[24])
         :                 :- Exchange(distribution=[hash[x]])
         :                 :  +- Calc(select=[x, X0])
         :                 :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                 :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :        :  +- Reused(reference_id=[1])
         :                 :        +- Reused(reference_id=[25])
         :                 :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[X0]])
         :                    +- Reused(reference_id=[26])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[27])
         :- Exchange(distribution=[hash[X1]])
         :  +- Reused(reference_id=[28])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[16])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[X1, x])
                  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
                  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[29])
                  :        :  +- Exchange(distribution=[hash[X0, X1]])
                  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :        :        +- Union(all=[true], union=[X0, X1])
                  :        :           :- Calc(select=[x AS X0, x AS X1])
                  :        :           :  +- Reused(reference_id=[6])
                  :        :           +- Calc(select=[x0 AS X0, y AS X1])
                  :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :        :                 :- Reused(reference_id=[9])
                  :        :                 +- Reused(reference_id=[4])
                  :        +- Reused(reference_id=[2])
                  :- Reused(reference_id=[21])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[X0, X1])
                        +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[29])
                           +- Reused(reference_id=[7])

Job has been submitted with JobID 7e67e02d5b1dbe5c730b8c95a6dc4976
